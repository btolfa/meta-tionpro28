From a75d6dae4ea729040f8ddcf96c4abd85bdbf66fe Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Fri, 22 Aug 2014 15:33:39 +0400
Subject: [PATCH 01/14] =?UTF-8?q?=D0=9F=D0=BE=D1=81=D0=BB=D0=B5=20=D0=BF?=
 =?UTF-8?q?=D1=80=D0=B8=D0=BC=D0=B5=D0=BD=D0=B5=D0=BD=D0=B8=D1=8F=20=D0=BF?=
 =?UTF-8?q?=D0=B0=D1=82=D1=87=D0=B0=20tion=5Fpro28=5Fsvn2203.patch?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/mach-mx28/device.c             |  34 ++--
 arch/arm/mach-mx28/include/mach/lcdif.h |  13 +-
 arch/arm/mach-mx28/mx28evk.c            |   8 +-
 arch/arm/mach-mx28/mx28evk_pins.c       | 199 +++++++++++++++++-----
 arch/arm/mach-mx28/usb_dr.c             |   2 +-
 drivers/i2c/i2c-core.c                  |   2 +-
 drivers/mtd/nand/nand_device_info.c     |  19 +++
 drivers/net/fec.c                       |   4 +-
 drivers/net/phy/phy.c                   |  27 +++
 drivers/rtc/rtc-ds1307.c                |   2 +
 drivers/serial/mxs-auart.c              | 153 ++++++++++++++++-
 drivers/video/mxs/Kconfig               |   6 +
 drivers/video/mxs/Makefile              |   1 +
 drivers/video/mxs/lcd_tionpro28.c       | 289 ++++++++++++++++++++++++++++++++
 drivers/video/mxs/mxsfb.c               |   5 +-
 15 files changed, 697 insertions(+), 67 deletions(-)
 create mode 100644 drivers/video/mxs/lcd_tionpro28.c

diff --git a/arch/arm/mach-mx28/device.c b/arch/arm/mach-mx28/device.c
index c8633fa..559449a 100644
--- a/arch/arm/mach-mx28/device.c
+++ b/arch/arm/mach-mx28/device.c
@@ -422,21 +422,23 @@ static void mx28_init_gpmi_nfc(void)
 
 #if defined(CONFIG_MMC_MXS) || defined(CONFIG_MMC_MXS_MODULE)
 #if defined(CONFIG_MACH_MX28EVK)
-#define MMC0_POWER	MXS_PIN_TO_GPIO(PINID_PWM3)
-#define MMC1_POWER	MXS_PIN_TO_GPIO(PINID_PWM4)
-#define MMC0_WP		MXS_PIN_TO_GPIO(PINID_SSP1_SCK)
-#define MMC1_WP		MXS_PIN_TO_GPIO(PINID_GPMI_RESETN)
+//#define MMC0_POWER	MXS_PIN_TO_GPIO(PINID_PWM3)
+//#define MMC1_POWER	MXS_PIN_TO_GPIO(PINID_PWM4)
+//#define MMC0_WP		MXS_PIN_TO_GPIO(PINID_SSP1_SCK)
+//#define MMC1_WP		MXS_PIN_TO_GPIO(PINID_GPMI_RESETN)
 #endif
 
 static int mxs_mmc_get_wp_ssp0(void)
 {
-	return gpio_get_value(MMC0_WP);
+	//return gpio_get_value(MMC0_WP);
+	return 0; // TionPro28 has no WP pin
 }
 
 static int mxs_mmc_hw_init_ssp0(void)
 {
 	int ret = 0;
 
+#if 0 // no WP pin and POWER pin in TionPro28	
 	/* Configure write protect GPIO pin */
 	ret = gpio_request(MMC0_WP, "mmc0_wp");
 	if (ret)
@@ -453,18 +455,22 @@ static int mxs_mmc_hw_init_ssp0(void)
 	gpio_direction_output(MMC0_POWER, 0);
 	mdelay(100);
 
+
 	return 0;
 
 out_power:
 	gpio_free(MMC0_WP);
 out_wp:
+#endif
 	return ret;
 }
 
 static void mxs_mmc_hw_release_ssp0(void)
 {
+#if 0 // no WP pin and POWER pin in TionPro28
 	gpio_free(MMC0_POWER);
 	gpio_free(MMC0_WP);
+#endif
 
 }
 
@@ -492,7 +498,7 @@ static unsigned long mxs_mmc_setclock_ssp0(unsigned long hz)
 
 static int mxs_mmc_get_wp_ssp1(void)
 {
-	return gpio_get_value(MMC1_WP);
+	return 0;//gpio_get_value(MMC1_WP);
 }
 
 static int mxs_mmc_hw_init_ssp1(void)
@@ -500,7 +506,7 @@ static int mxs_mmc_hw_init_ssp1(void)
 	int ret = 0;
 
 	/* Configure write protect GPIO pin */
-	ret = gpio_request(MMC1_WP, "mmc1_wp");
+/*	ret = gpio_request(MMC1_WP, "mmc1_wp");
 	if (ret)
 		goto out_wp;
 
@@ -508,25 +514,25 @@ static int mxs_mmc_hw_init_ssp1(void)
 	gpio_direction_input(MMC1_WP);
 
 	/* Configure POWER pin as gpio to drive power to MMC slot */
-	ret = gpio_request(MMC1_POWER, "mmc1_power");
+/*	ret = gpio_request(MMC1_POWER, "mmc1_power");
 	if (ret)
 		goto out_power;
 
 	gpio_direction_output(MMC1_POWER, 0);
-	mdelay(100);
+	mdelay(100);*/
 
 	return 0;
 
 out_power:
-	gpio_free(MMC1_WP);
+	//gpio_free(MMC1_WP);
 out_wp:
 	return ret;
 }
 
 static void mxs_mmc_hw_release_ssp1(void)
 {
-	gpio_free(MMC1_POWER);
-	gpio_free(MMC1_WP);
+	//gpio_free(MMC1_POWER);
+	//gpio_free(MMC1_WP);
 }
 
 static void mxs_mmc_cmd_pullup_ssp1(int enable)
@@ -645,7 +651,7 @@ static void __init mx28_init_mmc(void)
 		mxs_add_device(pdev, 2);
 	}
 
-	if (mxs_get_type(PINID_GPMI_RDY1) == PIN_FUN2) {
+/*	if (mxs_get_type(PINID_GPMI_RDY1) == PIN_FUN2) {
 		pdev = mxs_get_device("mxs-mmc", 1);
 		if (pdev == NULL || IS_ERR(pdev))
 			return;
@@ -653,7 +659,7 @@ static void __init mx28_init_mmc(void)
 		pdev->num_resources = ARRAY_SIZE(mmc1_resource);
 		pdev->dev.platform_data = &mmc1_data;
 		mxs_add_device(pdev, 2);
-	}
+	}*/
 }
 #else
 static void mx28_init_mmc(void)
diff --git a/arch/arm/mach-mx28/include/mach/lcdif.h b/arch/arm/mach-mx28/include/mach/lcdif.h
index 23fff95..1db3776 100644
--- a/arch/arm/mach-mx28/include/mach/lcdif.h
+++ b/arch/arm/mach-mx28/include/mach/lcdif.h
@@ -169,12 +169,15 @@ static inline void setup_dotclk_panel(u16 v_pulse_width,
 	__raw_writel(BM_LCDIF_CTRL_DATA_SHIFT_DIR,
 		     REGS_LCDIF_BASE + HW_LCDIF_CTRL_CLR);
 
+	__raw_writel(BM_LCDIF_CTRL_DATA_SHIFT_DIR,
+		     REGS_LCDIF_BASE + HW_LCDIF_CTRL_SET);
+
 	__raw_writel(BM_LCDIF_CTRL_SHIFT_NUM_BITS,
 		     REGS_LCDIF_BASE + HW_LCDIF_CTRL_CLR);
 
 	__raw_writel(BM_LCDIF_CTRL1_BYTE_PACKING_FORMAT,
 		     REGS_LCDIF_BASE + HW_LCDIF_CTRL1_CLR);
-	__raw_writel(BF_LCDIF_CTRL1_BYTE_PACKING_FORMAT(7) |
+	__raw_writel(BF_LCDIF_CTRL1_BYTE_PACKING_FORMAT(0x0F) | /* was 7*/
 		     BM_LCDIF_CTRL1_RECOVER_ON_UNDERFLOW,
 		     REGS_LCDIF_BASE + HW_LCDIF_CTRL1_SET);
 
@@ -198,12 +201,16 @@ static inline void setup_dotclk_panel(u16 v_pulse_width,
 
 	__raw_writel(BM_LCDIF_CTRL_WORD_LENGTH |
 		     BM_LCDIF_CTRL_INPUT_DATA_SWIZZLE |
+		     BM_LCDIF_CTRL_DATA_FORMAT_16_BIT |
+		     BM_LCDIF_CTRL_DATA_FORMAT_18_BIT |
+	       	     BM_LCDIF_CTRL_DATA_FORMAT_24_BIT |		
 		     BM_LCDIF_CTRL_LCD_DATABUS_WIDTH,
 		     REGS_LCDIF_BASE + HW_LCDIF_CTRL_CLR);
-	__raw_writel(BF_LCDIF_CTRL_WORD_LENGTH(3) |	/* 24 bit */
+	__raw_writel(BF_LCDIF_CTRL_WORD_LENGTH(0/*0*/) |	/* 16 bit */
 		     BM_LCDIF_CTRL_DATA_SELECT |	/* data mode */
 		     BF_LCDIF_CTRL_INPUT_DATA_SWIZZLE(0) |	/* no swap */
-		     BF_LCDIF_CTRL_LCD_DATABUS_WIDTH(3),	/* 24 bit */
+		     BF_LCDIF_CTRL_CSC_DATA_SWIZZLE(0) |	/* no swap */	
+		     BF_LCDIF_CTRL_LCD_DATABUS_WIDTH(2),	/* 18 bit */
 		     REGS_LCDIF_BASE + HW_LCDIF_CTRL_SET);
 
 	val = __raw_readl(REGS_LCDIF_BASE + HW_LCDIF_VDCTRL0);
diff --git a/arch/arm/mach-mx28/mx28evk.c b/arch/arm/mach-mx28/mx28evk.c
index 97ce49c..47bd17b 100644
--- a/arch/arm/mach-mx28/mx28evk.c
+++ b/arch/arm/mach-mx28/mx28evk.c
@@ -41,13 +41,15 @@
 #include "device.h"
 #include "mx28evk.h"
 
-static struct i2c_board_info __initdata mxs_i2c_device[] = {
-	{ I2C_BOARD_INFO("sgtl5000-i2c", 0xa), .flags = I2C_M_TEN }
+static struct i2c_board_info __initdata mxs_i2c_device[] = {	
+	{ I2C_BOARD_INFO("sgtl5000-i2c", 0xa), .flags = I2C_M_TEN },
+	{ I2C_BOARD_INFO("m41t00", 0x68), }
+	
 };
 
 static void __init i2c_device_init(void)
 {
-	i2c_register_board_info(0, mxs_i2c_device, ARRAY_SIZE(mxs_i2c_device));
+	i2c_register_board_info(0, mxs_i2c_device, ARRAY_SIZE(mxs_i2c_device));	
 }
 #if defined(CONFIG_MTD_M25P80) || defined(CONFIG_MTD_M25P80_MODULE)
 static struct flash_platform_data mx28_spi_flash_data = {
diff --git a/arch/arm/mach-mx28/mx28evk_pins.c b/arch/arm/mach-mx28/mx28evk_pins.c
index 1990b92..39a6232 100644
--- a/arch/arm/mach-mx28/mx28evk_pins.c
+++ b/arch/arm/mach-mx28/mx28evk_pins.c
@@ -60,6 +60,122 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .fun   = PIN_FUN1,
 	 },
 #endif
+#ifdef CONFIG_MXS_AUART1_DEVICE_ENABLE
+	{
+	 .name  = "AUART1.RX",
+	 .id    = PINID_AUART1_RX,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name  = "AUART1.TX",
+	 .id    = PINID_AUART1_TX,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name  = "AUART1.CTS",
+	 .id    = PINID_AUART1_CTS,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name  = "AUART1.RTS",
+	 .id    = PINID_AUART1_RTS,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name	= "AUART1_RS232_OFF",
+	 .id	= PINID_SSP1_SCK,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+	{
+	 .name	= "AUART1_RS485_OFF",
+	 .id	= PINID_SSP1_CMD,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+	{
+	 .name	= "AUART1_RS485_RE",
+	 .id	= PINID_SSP1_DATA0,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+	{
+	 .name	= "AUART1_RS422_DE",
+	 .id	= PINID_SSP1_DATA3,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+#endif
+#ifdef CONFIG_MXS_AUART2_DEVICE_ENABLE
+	{
+	 .name  = "AUART2.RX",
+	 .id    = PINID_AUART2_RX,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name  = "AUART2.TX",
+	 .id    = PINID_AUART2_TX,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name  = "AUART2.CTS",
+	 .id    = PINID_AUART2_CTS,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name  = "AUART2.RTS",
+	 .id    = PINID_AUART2_RTS,
+	 .fun   = PIN_FUN1,
+	 },
+	{
+	 .name	= "AUART2_RS232_OFF",
+	 .id	= PINID_SSP0_DATA4,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+	{
+	 .name	= "AUART2_RS485_OFF",
+	 .id	= PINID_SSP0_DATA5,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+	{
+	 .name	= "AUART2_RS485_RE",
+	 .id	= PINID_SSP0_DATA6,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+	{
+	 .name	= "AUART2_RS422_DE",
+	 .id	= PINID_SSP0_DATA7,
+	 .fun	= PIN_GPIO,
+	 .strength	= PAD_4MA,
+	 .voltage	= PAD_3_3V,	 
+	 .data		= 1,
+	 .output	= 1,
+	 },
+#endif
 #ifdef CONFIG_MXS_AUART3_DEVICE_ENABLE
 	{
 	 .name  = "AUART3.RX",
@@ -71,7 +187,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id    = PINID_AUART3_TX,
 	 .fun   = PIN_FUN1,
 	 },
-	{
+	/*{
 	 .name  = "AUART3.CTS",
 	 .id    = PINID_AUART3_CTS,
 	 .fun   = PIN_FUN1,
@@ -80,18 +196,18 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .name  = "AUART3.RTS",
 	 .id    = PINID_AUART3_RTS,
 	 .fun   = PIN_FUN1,
-	 },
+	 },*/
 #endif
 	{
 	 .name = "usb0",
-	 .id = PINID_AUART2_TX, /* Power enable pin*/
+	 .id = PINID_AUART3_CTS, /* Power enable pin*/
 	 .fun = PIN_GPIO,
 	 .data = 0,
 	 .output = 1,
 	 },
 	 {
 	 .name  = "usb1",
-	 .id    = PINID_AUART2_RX,
+	 .id    = PINID_AUART3_RTS,
 	 .fun   = PIN_GPIO,
 	 .data  = 1,
 	 .output = 1,
@@ -100,7 +216,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 #if defined(CONFIG_USB_OTG)
 	 {
 	 .name 	= "usb0_id",
-	 .id 	= PINID_AUART1_RTS,
+	 .id 	= PINID_PWM2,
 	 .fun	= PIN_FUN2,
 	 .data 	= 1,
 	 .pull 	= 1,
@@ -131,7 +247,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 },
 	{
 	 .name	= "CAN0_TX",
-	 .id	= PINID_GPMI_RDY2,
+	 .id	= PINID_AUART3_RX,
 	 .fun	= PIN_FUN2,
 	 .strength	= PAD_4MA,
 	 .voltage	= PAD_3_3V,
@@ -141,7 +257,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 },
 	{
 	 .name	= "CAN0_RX",
-	 .id	= PINID_GPMI_RDY3,
+	 .id	= PINID_AUART3_TX,
 	 .fun	= PIN_FUN2,
 	 .strength	= PAD_4MA,
 	 .voltage	= PAD_3_3V,
@@ -149,7 +265,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .drive 	= 1,
 	 .pull 		= 0,
 	 },
-	{
+	/*{
 	 .name	= "CAN_PWDN",
 	 .id	= PINID_SSP1_CMD,
 	 .fun	= PIN_GPIO,
@@ -160,7 +276,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .pull 		= 0,
 	 .data		= 0,
 	 .output	= 1,
-	 },
+	 },*/
 
 #endif
 
@@ -328,7 +444,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .voltage	= PAD_3_3V,
 	 .drive	= 1,
 	 },
-	{
+	/*{
 	 .name  = "LCD_D18",
 	 .id	= PINID_LCD_D18,
 	 .fun	= PIN_FUN1,
@@ -375,7 +491,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .strength = PAD_8MA,
 	 .voltage	= PAD_3_3V,
 	 .drive	= 1,
-	 },
+	 },*/
 	{
 	 .name = "LCD_RESET",
 	 .id = PINID_LCD_RESET,
@@ -386,39 +502,39 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 },
 	{
 	 .name = "LCD_VSYNC",
-	 .id   = PINID_LCD_RD_E,
-	 .fun  = PIN_FUN2,
+	 .id   = PINID_LCD_VSYNC,
+	 .fun  = PIN_FUN1,
 	 .strength = PAD_8MA,
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
 	 },
 	{
 	 .name = "LCD_HSYNC",
-	 .id = PINID_LCD_WR_RWN,
-	 .fun = PIN_FUN2,
+	 .id = PINID_LCD_HSYNC,
+	 .fun = PIN_FUN1,
 	 .strength = PAD_8MA,
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
 	 },
 	{
 	 .name = "LCD_ENABLE",
-	 .id = PINID_LCD_CS,
-	 .fun = PIN_FUN2,
+	 .id = PINID_LCD_ENABLE,
+	 .fun = PIN_FUN1,
 	 .strength = PAD_8MA,
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
 	 },
 	{
 	 .name = "LCD_DOTCLK",
-	 .id = PINID_LCD_RS,
-	 .fun = PIN_FUN2,
+	 .id = PINID_LCD_DOTCK,
+	 .fun = PIN_FUN1,
 	 .strength = PAD_8MA,
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
 	 },
 	{
 	 .name = "LCD_BACKLIGHT",
-	 .id = PINID_PWM2,
+	 .id = PINID_PWM3,
 	 .fun = PIN_FUN1,
 	 .strength = PAD_8MA,
 	 .voltage = PAD_3_3V,
@@ -467,7 +583,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .drive 	= 1,
 	 .pull 		= 1,
 	 },
-	{
+	/*{
 	 .name	= "SSP0_DATA4",
 	 .id	= PINID_SSP0_DATA4,
 	 .fun	= PIN_FUN1,
@@ -506,7 +622,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .pullup	= 1,
 	 .drive 	= 1,
 	 .pull 		= 1,
-	 },
+	 },*/
 	{
 	 .name	= "SSP0_CMD",
 	 .id	= PINID_SSP0_CMD,
@@ -541,8 +657,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 #if defined(CONFIG_LEDS_MXS) || defined(CONFIG_LEDS_MXS_MODULE)
 	{
 	 .name = "LEDS_PWM0",
-	 .id = PINID_AUART1_RX,
-	 .fun           = PIN_FUN3,
+	 .id = PINID_PWM4,
+	 .fun           = PIN_FUN1,
 	 .strength      = PAD_8MA,
 	 .voltage       = PAD_3_3V,
 	 .pullup        = 1,
@@ -551,7 +667,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 },
 	{
 	 .name = "LEDS_PWM1",
-	 .id = PINID_AUART1_TX,
+	 .id = PINID_PWM4,
 	 .fun           = PIN_FUN3,
 	 .strength      = PAD_8MA,
 	 .voltage       = PAD_3_3V,
@@ -780,21 +896,21 @@ static struct pin_desc mx28evk_eth_pins[] = {
 	 .pullup = 1,
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
-	 },
+	 },	
 };
 #endif
 
 static int __initdata enable_ssp1 = { 0 };
 static int __init ssp1_setup(char *__unused)
 {
-	enable_ssp1 = 1;
-	return 1;
+	enable_ssp1 = 0; // no use SSP1 in TionPro28
+	return 0;
 }
 
 __setup("ssp1", ssp1_setup);
 
 static struct pin_desc mx28evk_ssp1_pins[] = {
-	{
+	/*{
 	 .name	= "SSP1_DATA0",
 	 .id	= PINID_GPMI_D00,
 	 .fun	= PIN_FUN2,
@@ -803,7 +919,7 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 .pullup	= 1,
 	 .drive 	= 1,
 	 .pull 		= 1,
-	 },
+	 },*/
 	{
 	 .name	= "SSP1_DATA1",
 	 .id	= PINID_GPMI_D01,
@@ -824,7 +940,7 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 .drive 	= 1,
 	 .pull 		= 1,
 	 },
-	{
+	/*{
 	 .name	= "SSP1_DATA3",
 	 .id	= PINID_GPMI_D03,
 	 .fun	= PIN_FUN2,
@@ -833,7 +949,7 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 .pullup	= 1,
 	 .drive 	= 1,
 	 .pull 		= 1,
-	 },
+	 },*/
 	{
 	 .name	= "SSP1_DATA4",
 	 .id	= PINID_GPMI_D04,
@@ -874,7 +990,7 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 .drive 	= 1,
 	 .pull 		= 1,
 	 },
-	{
+	/*{
 	 .name	= "SSP1_CMD",
 	 .id	= PINID_GPMI_RDY1,
 	 .fun	= PIN_FUN2,
@@ -883,7 +999,7 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 .pullup	= 1,
 	 .drive 	= 1,
 	 .pull 		= 1,
-	 },
+	 },*/
 	{
 	 .name	= "SSP1_DETECT",
 	 .id	= PINID_GPMI_RDY0,
@@ -906,8 +1022,11 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 },
 };
 
-
+#ifdef CONFIG_MTD_NAND
+int enable_gpmi = { 1 };
+#else
 int enable_gpmi = { 0 };
+#endif
 static int __init gpmi_setup(char *__unused)
 {
 	enable_gpmi = 1;
@@ -1114,8 +1233,8 @@ static struct pin_desc mx28evk_spi_pins[] = {
 int mx28evk_enet_gpio_init(void)
 {
 	/* pwr */
-	gpio_request(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), "ENET_PWR");
-	gpio_direction_output(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), 0);
+	//gpio_request(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), "ENET_PWR");
+	//gpio_direction_output(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), 0);
 
 	/* reset phy */
 	gpio_request(MXS_PIN_TO_GPIO(PINID_ENET0_RX_CLK), "PHY_RESET");
@@ -1135,7 +1254,7 @@ int mx28evk_enet_gpio_init(void)
 void mx28evk_enet_io_lowerpower_enter(void)
 {
 	int i;
-	gpio_direction_output(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), 1);
+	//gpio_direction_output(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), 1);
 	gpio_direction_output(MXS_PIN_TO_GPIO(PINID_ENET0_RX_CLK), 0);
 	gpio_request(MXS_PIN_TO_GPIO(PINID_ENET0_TX_CLK), "ETH_INT");
 	gpio_direction_output(MXS_PIN_TO_GPIO(PINID_ENET0_TX_CLK), 0);
@@ -1154,7 +1273,7 @@ void mx28evk_enet_io_lowerpower_enter(void)
 void mx28evk_enet_io_lowerpower_exit(void)
 {
 	int i;
-	gpio_direction_output(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), 0);
+	//gpio_direction_output(MXS_PIN_TO_GPIO(PINID_SSP1_DATA3), 0);
 	gpio_direction_output(MXS_PIN_TO_GPIO(PINID_ENET0_RX_CLK), 1);
 	gpio_free(MXS_PIN_TO_GPIO(PINID_ENET0_TX_CLK));
 	for (i = 0; i < ARRAY_SIZE(mx28evk_eth_pins); i++) {
@@ -1210,10 +1329,12 @@ void __init mx28evk_pins_init(void)
 
 	if (enable_ssp1) {
 		pr_info("Initializing SSP1 pins\n");
+		printk(KERN_WARNING "Initializing SSP1 pins\n");
 		mx28evk_init_pin_group(mx28evk_ssp1_pins,
 						ARRAY_SIZE(mx28evk_ssp1_pins));
 	} else if (enable_gpmi) {
 		pr_info("Initializing GPMI pins\n");
+		printk(KERN_WARNING "Initializing GPMI pins\n");
 		mx28evk_init_pin_group(mx28evk_gpmi_pins,
 						ARRAY_SIZE(mx28evk_gpmi_pins));
 	}
diff --git a/arch/arm/mach-mx28/usb_dr.c b/arch/arm/mach-mx28/usb_dr.c
index 71bf85c..e5ba9d8 100644
--- a/arch/arm/mach-mx28/usb_dr.c
+++ b/arch/arm/mach-mx28/usb_dr.c
@@ -29,7 +29,7 @@
 #include <mach/arc_otg.h>
 #include "usb.h"
 #include "mx28_pins.h"
-#define USB_POWER_ENABLE MXS_PIN_TO_GPIO(PINID_AUART2_TX)
+#define USB_POWER_ENABLE MXS_PIN_TO_GPIO(PINID_AUART3_CTS)
 
 #ifdef CONFIG_WORKAROUND_ARCUSB_REG_RW
 static void fsl_safe_writel(u32 val32, volatile u32 *addr)
diff --git a/drivers/i2c/i2c-core.c b/drivers/i2c/i2c-core.c
index 0815e10..8b5bc45 100644
--- a/drivers/i2c/i2c-core.c
+++ b/drivers/i2c/i2c-core.c
@@ -1413,7 +1413,7 @@ static int i2c_detect(struct i2c_adapter *adapter, struct i2c_driver *driver)
 	struct i2c_client *temp_client;
 	int i, err = 0;
 	int adap_id = i2c_adapter_id(adapter);
-
+		
 	address_list = driver->address_list;
 	if (!driver->detect || !address_list)
 		return 0;
diff --git a/drivers/mtd/nand/nand_device_info.c b/drivers/mtd/nand/nand_device_info.c
index 6a23810..367d8a8 100644
--- a/drivers/mtd/nand/nand_device_info.c
+++ b/drivers/mtd/nand/nand_device_info.c
@@ -1010,6 +1010,25 @@ static struct nand_device_info nand_device_info_table_type_7[] __initdata = {
 	},
 	{
 	.end_of_table             = false,
+	.manufacturer_code        = 0x2c,
+	.device_code              = 0xda,
+	.cell_technology          = NAND_DEVICE_CELL_TECH_SLC,
+	.chip_size_in_bytes       = 256LL*SZ_1M,
+	.block_size_in_pages      = 64,
+	.page_total_size_in_bytes = 2*SZ_1K + 64,
+	.ecc_strength_in_bits     = 4,
+	.ecc_size_in_bytes        = 512,
+	.data_setup_in_ns         = 20,
+	.data_hold_in_ns          = 10,
+	.address_setup_in_ns      = 20,
+	.gpmi_sample_delay_in_ns  = 6,
+	.tREA_in_ns               = -1,
+	.tRLOH_in_ns              = -1,
+	.tRHOH_in_ns              = -1,
+	"MT29F2G08",
+	},	
+	{
+	.end_of_table             = false,
 	.manufacturer_code        = 0xec,
 	.device_code              = 0xda,
 	.cell_technology          = NAND_DEVICE_CELL_TECH_SLC,
diff --git a/drivers/net/fec.c b/drivers/net/fec.c
index 2d4dd96..311595a 100644
--- a/drivers/net/fec.c
+++ b/drivers/net/fec.c
@@ -1626,8 +1626,8 @@ fec_stop(struct net_device *dev)
 	}
 
 	/* Whack a reset.  We should wait for this. */
-	writel(1, fep->hwp + FEC_ECNTRL);
-	udelay(10);
+	//writel(1, fep->hwp + FEC_ECNTRL);
+	//udelay(10);
 
 #ifdef CONFIG_ARCH_MXS
 	/* FIXME: we have to enable enet to keep mii interrupt works. */
diff --git a/drivers/net/phy/phy.c b/drivers/net/phy/phy.c
index bd88d81..c862846 100644
--- a/drivers/net/phy/phy.c
+++ b/drivers/net/phy/phy.c
@@ -755,6 +755,11 @@ void phy_start(struct phy_device *phydev)
 EXPORT_SYMBOL(phy_stop);
 EXPORT_SYMBOL(phy_start);
 
+int old_error_count = 0;
+int new_err_count = 0;
+int step_to_restart = 2;
+
+
 /**
  * phy_state_machine - Handle the state machine
  * @work: work_struct that describes the work to be done
@@ -877,6 +882,28 @@ void phy_state_machine(struct work_struct *work)
 		case PHY_CHANGELINK:
 			err = phy_read_status(phydev);
 
+			new_err_count = phy_read(phydev,26);
+			
+			if (new_err_count != old_error_count)
+				step_to_restart--;
+			else
+				step_to_restart = 2;
+
+			old_error_count = new_err_count;
+
+			if (!step_to_restart)
+			{
+				printk("Resetting PHY\n");
+				phy_write(phydev, MII_BMCR, BMCR_RESET);
+				udelay(10);
+				phydev->state = PHY_UP;
+				step_to_restart = 2;
+				
+				break;	
+			}		
+			
+			
+			
 			if (err)
 				break;
 
diff --git a/drivers/rtc/rtc-ds1307.c b/drivers/rtc/rtc-ds1307.c
index d827ce5..31ab656 100644
--- a/drivers/rtc/rtc-ds1307.c
+++ b/drivers/rtc/rtc-ds1307.c
@@ -638,6 +638,7 @@ static int __devinit ds1307_probe(struct i2c_client *client,
 		[ds_3231] = DS3231_BIT_BBSQW,
 	};
 
+	dev_dbg(&client->dev, "DS1307 probe\r\n");	
 	if (!i2c_check_functionality(adapter, I2C_FUNC_SMBUS_BYTE_DATA)
 	    && !i2c_check_functionality(adapter, I2C_FUNC_SMBUS_I2C_BLOCK))
 		return -EIO;
@@ -935,6 +936,7 @@ static struct i2c_driver ds1307_driver = {
 
 static int __init ds1307_init(void)
 {
+	//printk(KERN_WARNING "DS1307 init\r\n");	
 	return i2c_add_driver(&ds1307_driver);
 }
 module_init(ds1307_init);
diff --git a/drivers/serial/mxs-auart.c b/drivers/serial/mxs-auart.c
index b35857c..3d6ffb4 100644
--- a/drivers/serial/mxs-auart.c
+++ b/drivers/serial/mxs-auart.c
@@ -45,9 +45,30 @@
 
 #include "regs-uartapp.h"
 
+//#include <linux/gpio.h>
+#include <mach/pinctrl.h>
+#include "../../arch/arm/mach-mx28/mx28_pins.h"
+
+
 #define MXS_AUART_MAJOR	242
 #define MXS_AUART_RX_THRESHOLD 16
 
+#define UART_MODE_NONE 0
+#define UART_MODE_RS232 1
+#define UART_MODE_RS485 2
+#define UART_MODE_RS422 3
+
+// temporary define pins as digital numbers
+#define GPIO_PORT1_RS232_OFF 	64+12//PINID_SSP1_SCK
+#define GPIO_PORT1_RS485_DE 	64+13//PINID_SSP1_CMD
+#define GPIO_PORT1_RS485_RE	64+14//PINID_SSP1_DATA0
+#define GPIO_PORT1_RS422_DE	64+15//PINID_SSP1_DATA3
+
+#define GPIO_PORT2_RS232_OFF	64+4//PINID_SSP0_DATA4
+#define GPIO_PORT2_RS485_DE	64+5//PINID_SSP0_DATA5
+#define GPIO_PORT2_RS485_RE	64+6//PINID_SSP0_DATA6
+#define GPIO_PORT2_RS422_DE	64+7//PINID_SSP0_DATA7
+
 static struct uart_driver auart_driver;
 
 struct mxs_auart_port {
@@ -69,12 +90,16 @@ struct mxs_auart_port {
 	struct list_head free;
 	struct mxs_dma_desc *tx;
 	struct tasklet_struct rx_task;
+	unsigned int mode;
 };
 
 static void mxs_auart_stop_tx(struct uart_port *u);
 static void mxs_auart_submit_tx(struct mxs_auart_port *s, int size);
 static void mxs_auart_submit_rx(struct mxs_auart_port *s);
 
+static int mxs_auart_set_mode (struct mxs_auart_port *port);
+static int mxs_auart_set_rs485_de (struct mxs_auart_port *port, bool bEnable);
+
 static inline struct mxs_auart_port *to_auart_port(struct uart_port *u)
 {
 	return container_of(u, struct mxs_auart_port, port);
@@ -84,12 +109,14 @@ static inline void mxs_auart_tx_chars(struct mxs_auart_port *s)
 {
 	struct circ_buf *xmit = &s->port.state->xmit;
 
+	//if (s->mode==UART_MODE_RS485) mxs_auart_set_rs485_de(s,true);
+	
 	if (s->flags & MXS_AUART_PORT_DMA_MODE) {
 		int i = 0, size;
 		char *buffer = s->tx->buffer;
 
 		if (mxs_dma_desc_pending(s->tx))
-			return;
+			goto out;//return;
 		while (!uart_circ_empty(xmit) && !uart_tx_stopped(&s->port)) {
 			if (i >= PAGE_SIZE)
 				break;
@@ -114,7 +141,7 @@ static inline void mxs_auart_tx_chars(struct mxs_auart_port *s)
 			if (uart_tx_stopped(&s->port))
 				mxs_auart_stop_tx(&s->port);
 		}
-		return;
+		goto out;//return;
 	}
 
 	while (!(__raw_readl(s->port.membase + HW_UARTAPP_STAT) &
@@ -143,6 +170,17 @@ static inline void mxs_auart_tx_chars(struct mxs_auart_port *s)
 
 	if (uart_tx_stopped(&s->port))
 		mxs_auart_stop_tx(&s->port);
+out:	
+	//if (s->mode==UART_MODE_RS485) mxs_auart_set_rs485_de(s,false);
+	/*
+	 *      Finally, wait for transmitter to become empty
+	 *      and restore the TCR
+	
+	do {
+		status = __raw_readl(port->membase + HW_UARTAPP_STAT);
+	} while (status & BM_UARTAPP_STAT_BUSY);
+	__raw_writel(old_cr, port->membase + HW_UARTAPP_CTRL2); */
+	return;	
 }
 
 static inline unsigned int
@@ -445,6 +483,7 @@ static irqreturn_t mxs_auart_irq_dma_tx(int irq, void *context)
 	mxs_dma_ack_irq(s->dma_tx_chan);
 	mxs_dma_cooked(s->dma_tx_chan, &list);
 	mxs_auart_tx_chars(s);
+	
 	return IRQ_HANDLED;
 }
 
@@ -631,6 +670,7 @@ static irqreturn_t mxs_auart_irq_handle(int irq, void *context)
 		| BM_UARTAPP_INTR_RIMIS),
 			s->port.membase + HW_UARTAPP_INTR_CLR);
 
+	//printk(KERN_INFO "UART Int \r\n");	
 	return IRQ_HANDLED;
 }
 
@@ -736,6 +776,7 @@ static int mxs_auart_startup(struct uart_port *u)
 
 	if (s->flags & MXS_AUART_PORT_DMA_MODE)
 		mxs_auart_submit_rx(s);
+	//if (s->flags & MXS_AUART_PORT_DMA_MODE) {printk(KERN_INFO "DMA Mode \r\n");} else printk(KERN_INFO "no DMA Mode \r\n"); 
 	return mxs_auart_request_irqs(s);
 }
 
@@ -758,10 +799,23 @@ static void mxs_auart_shutdown(struct uart_port *u)
 static unsigned int mxs_auart_tx_empty(struct uart_port *u)
 {
 	struct mxs_auart_port *s = to_auart_port(u);
+	unsigned int status;
 
+	//if (s->mode==UART_MODE_RS485) mxs_auart_set_rs485_de(s,false);	
 	if (s->flags & MXS_AUART_PORT_DMA_MODE)
 		return mxs_dma_desc_pending(s->tx) ? 0 : TIOCSER_TEMT;
 
+	
+	/*
+	 *      Finally, wait for transmitter to become empty
+	 *      and restore the TCR
+	*/
+	if (s->mode==UART_MODE_RS485) mxs_auart_set_rs485_de(s,true);	
+	do {
+		status = __raw_readl(u->membase + HW_UARTAPP_STAT);
+	} while (status & BM_UARTAPP_STAT_BUSY);
+	if (s->mode==UART_MODE_RS485) mxs_auart_set_rs485_de(s,false);	
+	
 	if (__raw_readl(u->membase + HW_UARTAPP_STAT) &
 	    BM_UARTAPP_STAT_TXFE)
 		return TIOCSER_TEMT;
@@ -781,6 +835,9 @@ static void mxs_auart_start_tx(struct uart_port *u)
 
 static void mxs_auart_stop_tx(struct uart_port *u)
 {
+	struct mxs_auart_port *s = to_auart_port(u);	
+	
+	if (s->mode==UART_MODE_RS485) mxs_auart_set_rs485_de(s,true);	
 	__raw_writel(BM_UARTAPP_CTRL2_TXE, u->membase + HW_UARTAPP_CTRL2_CLR);
 }
 
@@ -988,13 +1045,96 @@ static struct uart_driver auart_driver = {
 #endif
 };
 
+static int mxs_auart_set_mode (struct mxs_auart_port *port)
+{
+	unsigned int rs232_off, rs485_de, rs485_re, rs422_de;
+	switch (port->port.line){
+	case 1: 
+		rs232_off = GPIO_PORT1_RS232_OFF;
+		rs485_de = GPIO_PORT1_RS485_DE;
+		rs485_re = GPIO_PORT1_RS485_RE;
+		rs422_de = GPIO_PORT1_RS422_DE;
+		break;
+	case 2: 
+		rs232_off = GPIO_PORT2_RS232_OFF;
+		rs485_de = GPIO_PORT2_RS485_DE;
+		rs485_re = GPIO_PORT2_RS485_RE;
+		rs422_de = GPIO_PORT2_RS422_DE;
+		break;	
+	default:
+		goto out;		
+		//return 0;
+	}
+
+	switch (port->mode){
+	case UART_MODE_NONE:
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs232_off), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_de), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_re), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs422_de), 1);		
+		break;
+	case UART_MODE_RS232:
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs232_off), 0);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_de), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_re), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs422_de), 1);	
+		break;
+	case UART_MODE_RS485:
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs232_off), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_de), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_re), 0);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs422_de), 1);	
+		break;
+	case UART_MODE_RS422:
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs232_off), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_de), 1);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_re), 0);
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs422_de), 0);			
+		break;	
+	default:;	
+	}
+	
+	//printk(KERN_INFO "UART set mode; GPIO - %d, MXS_PIN_TO_GPIO - %d \r\n",rs232_off, MXS_PIN_TO_GPIO(rs232_off));
+	//printk(KERN_INFO "UART set mode; GPIO - %d, MXS_PIN_TO_GPIO - %d \r\n",rs485_off, MXS_PIN_TO_GPIO(rs485_off));
+out:
+	printk(KERN_INFO "UART set mode; UART - %d, mode - %d \r\n",port->port.line, port->mode);
+	
+	return 0;
+}
+
+static int mxs_auart_set_rs485_de (struct mxs_auart_port *port, bool bEnable)
+{
+	unsigned int rs485_de;
+	switch (port->port.line){
+	case 1: 		
+		rs485_de = GPIO_PORT1_RS485_DE;		
+		break;
+	case 2: 		
+		rs485_de = GPIO_PORT2_RS485_DE;		
+		break;	
+	default:
+		goto out;		
+		//return 0;
+	}
+
+	if (! bEnable){
+		gpio_direction_output(MXS_PIN_TO_GPIO(rs485_de), 1);		
+		}else gpio_direction_output(MXS_PIN_TO_GPIO(rs485_de), 0);
+	
+	//printk(KERN_INFO "UART set mode; GPIO - %d, MXS_PIN_TO_GPIO - %d \r\n",rs232_off, MXS_PIN_TO_GPIO(rs232_off));
+	//printk(KERN_INFO "UART set mode; GPIO - %d, MXS_PIN_TO_GPIO - %d \r\n",rs485_off, MXS_PIN_TO_GPIO(rs485_off));
+out:
+	
+	return 0;
+}
+
 static int __devinit mxs_auart_probe(struct platform_device *pdev)
 {
 	struct mxs_auart_plat_data *plat;
 	struct mxs_auart_port *s;
 	u32 version;
 	int i, ret = 0;
-	struct resource *r;
+	struct resource *r;	
 
 	s = kzalloc(sizeof(struct mxs_auart_port), GFP_KERNEL);
 	if (!s) {
@@ -1035,6 +1175,13 @@ static int __devinit mxs_auart_probe(struct platform_device *pdev)
 	s->port.type = PORT_IMX;
 	s->port.dev = s->dev = get_device(&pdev->dev);
 
+	if (s->port.line == 1) s->mode = 1;
+	if (s->port.line == 2) s->mode = UART_MODE_RS485;
+
+	//printk(KERN_WARNING "Initializing AUART %d \r\n", s->port.line);
+	//printk(KERN_WARNING "AUART Mode: %d \r\n", (unsigned char) s->mode);
+	mxs_auart_set_mode(s);
+
 	s->flags = plat->dma_mode ? MXS_AUART_PORT_DMA_MODE : 0;
 	if (s->flags & MXS_AUART_PORT_DMA_MODE)
 		s->port.flags |= ASYNC_LOW_LATENCY;
diff --git a/drivers/video/mxs/Kconfig b/drivers/video/mxs/Kconfig
index 35b896e..9805064 100644
--- a/drivers/video/mxs/Kconfig
+++ b/drivers/video/mxs/Kconfig
@@ -12,8 +12,14 @@ config FB_MXS
 config FB_MXS_LCD_43WVF1G
 	depends on FB_MXS
 	tristate "SEIKO 4.3' LCD WVGA(800x480) PANEL"
+	default n if ARCH_MX28
+
+config FB_MXS_LCD_TIONPRO28
+	depends on FB_MXS
+	tristate "LCD support for TionPro28"
 	default y if ARCH_MX28
 
+
 config FB_MXS_LCD_LMS430
 	depends on FB_MXS
 	bool "LMS430"
diff --git a/drivers/video/mxs/Makefile b/drivers/video/mxs/Makefile
index fbab953..f87f28a 100644
--- a/drivers/video/mxs/Makefile
+++ b/drivers/video/mxs/Makefile
@@ -1,6 +1,7 @@
 obj-$(CONFIG_ARCH_MXS)				+= lcdif.o
 obj-$(CONFIG_FB_MXS)				+= mxsfb.o
 obj-$(CONFIG_FB_MXS_LCD_43WVF1G)		+= lcd_43wvf1g.o
+obj-$(CONFIG_FB_MXS_LCD_TIONPRO28)		+= lcd_tionpro28.o
 obj-$(CONFIG_FB_MXS_LCD_LMS430)			+= lcd_lms430.o
 # TVOUT support
 obj-$(CONFIG_FB_MXS_TVENC)			+= tvenc.o
diff --git a/drivers/video/mxs/lcd_tionpro28.c b/drivers/video/mxs/lcd_tionpro28.c
new file mode 100644
index 0000000..d77bb0f
--- /dev/null
+++ b/drivers/video/mxs/lcd_tionpro28.c
@@ -0,0 +1,289 @@
+/*
+ * Freescale MX28 Seiko 43WVF1G LCD panel driver
+ *
+ * Copyright (C) 2009-2010 Freescale Semiconductor, Inc. All Rights Reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#include <linux/init.h>
+#include <linux/delay.h>
+#include <linux/clk.h>
+#include <linux/notifier.h>
+#include <linux/regulator/consumer.h>
+#include <linux/platform_device.h>
+
+#include <mach/device.h>
+#include <mach/lcdif.h>
+#include <mach/regs-pwm.h>
+#include <mach/system.h>
+
+#define DOTCLK_H_ACTIVE  640
+#define DOTCLK_H_PULSE_WIDTH 10
+#define DOTCLK_HF_PORCH  12
+#define DOTCLK_HB_PORCH  138
+#define DOTCLK_H_WAIT_CNT  (DOTCLK_H_PULSE_WIDTH + DOTCLK_HB_PORCH)
+#define DOTCLK_H_PERIOD (DOTCLK_H_WAIT_CNT + DOTCLK_HF_PORCH + DOTCLK_H_ACTIVE)
+
+#define DOTCLK_V_ACTIVE  480
+#define DOTCLK_V_PULSE_WIDTH  10
+#define DOTCLK_VF_PORCH  14
+#define DOTCLK_VB_PORCH  21
+#define DOTCLK_V_WAIT_CNT (DOTCLK_V_PULSE_WIDTH + DOTCLK_VB_PORCH)
+#define DOTCLK_V_PERIOD (DOTCLK_VF_PORCH + DOTCLK_V_ACTIVE + DOTCLK_V_WAIT_CNT)
+
+static struct mxs_platform_bl_data bl_data;
+static struct clk *lcd_clk;
+
+static int init_panel(struct device *dev, dma_addr_t phys, int memsize,
+		      struct mxs_platform_fb_entry *pentry)
+{
+	int ret = 0;
+	lcd_clk = clk_get(dev, "dis_lcdif");
+	if (IS_ERR(lcd_clk)) {
+		ret = PTR_ERR(lcd_clk);
+		goto out;
+	}
+	ret = clk_enable(lcd_clk);
+	if (ret) {
+		clk_put(lcd_clk);
+		goto out;
+	}
+
+	ret = clk_set_rate(lcd_clk, 1000000 / pentry->cycle_time_ns);	/* kHz */
+	if (ret) {
+		clk_disable(lcd_clk);
+		clk_put(lcd_clk);
+		goto out;
+	}
+
+	/*
+	 * Make sure we do a high-to-low transition to reset the panel.
+	 * First make it low for 100 msec, hi for 10 msec, low for 10 msec,
+	 * then hi.
+	 */
+	__raw_writel(BM_LCDIF_CTRL1_RESET, REGS_LCDIF_BASE + HW_LCDIF_CTRL1_CLR);	/* low */
+	mdelay(100);
+	__raw_writel(BM_LCDIF_CTRL1_RESET, REGS_LCDIF_BASE + HW_LCDIF_CTRL1_SET);	/* high */
+	mdelay(10);
+	__raw_writel(BM_LCDIF_CTRL1_RESET, REGS_LCDIF_BASE + HW_LCDIF_CTRL1_CLR);	/* low */
+
+	/* For the Samsung, Reset must be held low at least 30 uSec
+	 * Therefore, we'll hold it low for about 10 mSec just to be sure.
+	 * Then we'll wait 1 mSec afterwards.
+	 */
+	mdelay(10);
+	__raw_writel(BM_LCDIF_CTRL1_RESET, REGS_LCDIF_BASE + HW_LCDIF_CTRL1_SET);	/* high */
+	mdelay(1);
+
+	setup_dotclk_panel(DOTCLK_V_PULSE_WIDTH, DOTCLK_V_PERIOD,
+			   DOTCLK_V_WAIT_CNT, DOTCLK_V_ACTIVE,
+			   DOTCLK_H_PULSE_WIDTH, DOTCLK_H_PERIOD,
+			   DOTCLK_H_WAIT_CNT, DOTCLK_H_ACTIVE, 0);
+
+	ret = mxs_lcdif_dma_init(dev, phys, memsize);
+	if (ret)
+		goto out;
+
+	mxs_lcd_set_bl_pdata(pentry->bl_data);
+	mxs_lcdif_notify_clients(MXS_LCDIF_PANEL_INIT, pentry);
+	return 0;
+
+out:
+	return ret;
+}
+
+static void release_panel(struct device *dev,
+			  struct mxs_platform_fb_entry *pentry)
+{
+	mxs_lcdif_notify_clients(MXS_LCDIF_PANEL_RELEASE, pentry);
+	release_dotclk_panel();
+	mxs_lcdif_dma_release();
+	clk_disable(lcd_clk);
+	clk_put(lcd_clk);
+}
+
+static int blank_panel(int blank)
+{
+	int ret = 0, count;
+
+	switch (blank) {
+	case FB_BLANK_NORMAL:
+	case FB_BLANK_VSYNC_SUSPEND:
+	case FB_BLANK_HSYNC_SUSPEND:
+	case FB_BLANK_POWERDOWN:
+		__raw_writel(BM_LCDIF_CTRL_BYPASS_COUNT,
+			     REGS_LCDIF_BASE + HW_LCDIF_CTRL_CLR);
+		for (count = 10000; count; count--) {
+			if (__raw_readl(REGS_LCDIF_BASE + HW_LCDIF_STAT) &
+			    BM_LCDIF_STAT_TXFIFO_EMPTY)
+				break;
+			udelay(1);
+		}
+		break;
+
+	case FB_BLANK_UNBLANK:
+		__raw_writel(BM_LCDIF_CTRL_BYPASS_COUNT,
+			     REGS_LCDIF_BASE + HW_LCDIF_CTRL_SET);
+		break;
+
+	default:
+		ret = -EINVAL;
+	}
+	return ret;
+}
+
+static struct mxs_platform_fb_entry fb_entry = {
+	.name = "lcd_tionpro28",
+	.x_res = 480,
+	.y_res = 640,
+	.bpp = 16,
+	.cycle_time_ns = 40,
+	.lcd_type = MXS_LCD_PANEL_DOTCLK,
+	.init_panel = init_panel,
+	.release_panel = release_panel,
+	.blank_panel = blank_panel,
+	.run_panel = mxs_lcdif_run,
+	.stop_panel = mxs_lcdif_stop,
+	.pan_display = mxs_lcdif_pan_display,
+	.bl_data = &bl_data,
+};
+
+static struct clk *pwm_clk;
+
+static int init_bl(struct mxs_platform_bl_data *data)
+{
+	int ret = 0;
+
+	pwm_clk = clk_get(NULL, "pwm");
+	if (IS_ERR(pwm_clk)) {
+		ret = PTR_ERR(pwm_clk);
+		return ret;
+	}
+	clk_enable(pwm_clk);
+	mxs_reset_block(REGS_PWM_BASE, 1);
+
+	__raw_writel(BF_PWM_ACTIVEn_INACTIVE(0) |
+		     BF_PWM_ACTIVEn_ACTIVE(0),
+		     REGS_PWM_BASE + HW_PWM_ACTIVEn(2));
+	__raw_writel(BF_PWM_PERIODn_CDIV(6) |	/* divide by 64 */
+		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* low */
+		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* high */
+		     BF_PWM_PERIODn_PERIOD(599),
+		     REGS_PWM_BASE + HW_PWM_PERIODn(2));
+	__raw_writel(BM_PWM_CTRL_PWM2_ENABLE, REGS_PWM_BASE + HW_PWM_CTRL_SET);
+
+	return 0;
+}
+
+static void free_bl(struct mxs_platform_bl_data *data)
+{
+	__raw_writel(BF_PWM_ACTIVEn_INACTIVE(0) |
+		     BF_PWM_ACTIVEn_ACTIVE(0),
+		     REGS_PWM_BASE + HW_PWM_ACTIVEn(2));
+	__raw_writel(BF_PWM_PERIODn_CDIV(6) |	/* divide by 64 */
+		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* low */
+		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* high */
+		     BF_PWM_PERIODn_PERIOD(599),
+		     REGS_PWM_BASE + HW_PWM_PERIODn(2));
+	__raw_writel(BM_PWM_CTRL_PWM2_ENABLE, REGS_PWM_BASE + HW_PWM_CTRL_CLR);
+
+	clk_disable(pwm_clk);
+	clk_put(pwm_clk);
+}
+
+static int values[] = { 0, 4, 9, 14, 20, 27, 35, 45, 57, 75, 100 };
+
+static int power[] = {
+	0, 1500, 3600, 6100, 10300,
+	15500, 74200, 114200, 155200,
+	190100, 191000
+};
+
+static int bl_to_power(int br)
+{
+	int base;
+	int rem;
+
+	if (br > 100)
+		br = 100;
+	base = power[br / 10];
+	rem = br % 10;
+	if (!rem)
+		return base;
+	else
+		return base + (rem * (power[br / 10 + 1]) - base) / 10;
+}
+
+static int set_bl_intensity(struct mxs_platform_bl_data *data,
+			    struct backlight_device *bd, int suspended)
+{
+	int intensity = bd->props.brightness;
+	int scaled_int;
+
+	if (bd->props.power != FB_BLANK_UNBLANK)
+		intensity = 0;
+	if (bd->props.fb_blank != FB_BLANK_UNBLANK)
+		intensity = 0;
+	if (suspended)
+		intensity = 0;
+
+	/*
+	 * This is not too cool but what can we do?
+	 * Luminance changes non-linearly...
+	 */
+	if (regulator_set_current_limit
+	    (data->regulator, bl_to_power(intensity), bl_to_power(intensity)))
+		return -EBUSY;
+
+	scaled_int = values[intensity / 10];
+	if (scaled_int < 100) {
+		int rem = intensity - 10 * (intensity / 10);	/* r = i % 10; */
+		scaled_int += rem * (values[intensity / 10 + 1] -
+				     values[intensity / 10]) / 10;
+	}
+	__raw_writel(BF_PWM_ACTIVEn_INACTIVE(scaled_int) |
+		     BF_PWM_ACTIVEn_ACTIVE(0),
+		     REGS_PWM_BASE + HW_PWM_ACTIVEn(2));
+	__raw_writel(BF_PWM_PERIODn_CDIV(6) |	/* divide by 64 */
+		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* low */
+		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* high */
+		     BF_PWM_PERIODn_PERIOD(399),
+		     REGS_PWM_BASE + HW_PWM_PERIODn(2));
+	return 0;
+}
+
+static struct mxs_platform_bl_data bl_data = {
+	.bl_max_intensity = 100,
+	.bl_default_intensity = 50,
+	.bl_cons_intensity = 50,
+	.init_bl = init_bl,
+	.free_bl = free_bl,
+	.set_bl_intensity = set_bl_intensity,
+};
+
+static int __init register_devices(void)
+{
+	struct platform_device *pdev;
+	pdev = mxs_get_device("mxs-fb", 0);
+	if (pdev == NULL || IS_ERR(pdev))
+		return -ENODEV;
+
+	mxs_lcd_register_entry(&fb_entry, pdev->dev.platform_data);
+
+	return 0;
+}
+
+subsys_initcall(register_devices);
diff --git a/drivers/video/mxs/mxsfb.c b/drivers/video/mxs/mxsfb.c
index 0e58ced..6a9bc6d 100644
--- a/drivers/video/mxs/mxsfb.c
+++ b/drivers/video/mxs/mxsfb.c
@@ -44,6 +44,9 @@
 
 #define NUM_SCREENS	1
 
+#undef pr_debug
+#define pr_debug pr_warning
+
 enum {
 	F_DISABLE = 0,
 	F_ENABLE,
@@ -346,7 +349,7 @@ static int mxsfb_setcolreg(u_int regno, u_int red, u_int green, u_int blue,
 		    (green << info->var.green.offset) |
 		    (blue << info->var.blue.offset) |
 		    (transp << info->var.transp.offset);
-	}
+	}		
 	return 0;
 }
 
-- 
1.9.1


From b3e7af6f28141946b3f7cffc66004696c1db183f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Fri, 22 Aug 2014 15:40:44 +0400
Subject: [PATCH 02/14] =?UTF-8?q?=D0=9F=D1=80=D0=B8=D0=BC=D0=B5=D0=BD?=
 =?UTF-8?q?=D0=B8=D0=BB=20=D0=BF=D0=B0=D1=82=D1=87=20tion=5Fpro28=5Fsvn220?=
 =?UTF-8?q?3-2461.patch=20=D0=A7=D0=B0=D1=81=D1=82=D1=8C=20=D0=B8=D0=B7?=
 =?UTF-8?q?=D0=BC=D0=B5=D0=BD=D0=B5=D0=BD=D0=B8=D0=B9=20=D0=B1=D1=8B=D0=BB?=
 =?UTF-8?q?=D0=BE=20=D0=BE=D1=82=D0=BA=D0=BB=D0=BE=D0=BD=D0=B5=D0=BD=D0=BE?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/mach-mx28/device.c            |  45 ++++
 arch/arm/mach-mx28/include/mach/mx28.h |   3 +-
 arch/arm/mach-mx28/pm.c                |  13 ++
 arch/arm/mach-mx28/sleep.S             |  20 ++
 arch/arm/mach-mx28/usb_h1.c            |   2 -
 arch/arm/plat-mxs/cpufreq.c            |   2 +
 drivers/misc/mxs-perfmon.c             | 395 +++++++++++++++++++++++++++++++++
 drivers/misc/regs-perfmon.h            | 189 ++++++++++++++++
 drivers/video/mxs/lcd_tionpro28.c      |  46 ++--
 drivers/video/mxs/mxsfb.c              |   9 +-
 include/linux/fsl_devices.h            |  11 +
 11 files changed, 712 insertions(+), 23 deletions(-)

diff --git a/arch/arm/mach-mx28/device.c b/arch/arm/mach-mx28/device.c
index 559449a..b05a746 100644
--- a/arch/arm/mach-mx28/device.c
+++ b/arch/arm/mach-mx28/device.c
@@ -1604,6 +1604,51 @@ static void mx28_init_perfmon()
 #endif
 
 
+#if defined(CONFIG_MXS_PERFMON)
+
+static struct mxs_perfmon_bit_config
+mx28_perfmon_bit_config[] = {
+	{.field = (1 << 0),	.name = "MID0-PXP" },
+	{.field = (1 << 1),	.name = "MID1-LCDIF" },
+	{.field = (1 << 2),	.name = "MID2-BCH" },
+	{.field = (1 << 3),	.name = "MID3-DCP" }
+};
+
+static struct mxs_platform_perfmon_data mx28_perfmon_data = {
+	.bit_config_tab = mx28_perfmon_bit_config,
+	.bit_config_cnt = ARRAY_SIZE(mx28_perfmon_bit_config),
+};
+
+static struct resource mx28_perfmon_res[] = {
+	{
+	 .flags = IORESOURCE_MEM,
+	 .start = PERFMON_PHYS_ADDR,
+	 .end   = PERFMON_PHYS_ADDR + 0x1000 - 1,
+    },
+};
+
+static void mx28_init_perfmon(void)
+{
+	struct platform_device *pdev;
+
+	pdev = mxs_get_device("mxs-perfmon", 0);
+	if (pdev == NULL || IS_ERR(pdev))
+		return;
+	pdev->dev.platform_data = &mx28_perfmon_data;
+	pdev->resource = mx28_perfmon_res,
+	pdev->num_resources = ARRAY_SIZE(mx28_perfmon_res),
+	mxs_add_device(pdev, 3);
+}
+
+#else
+
+static void mx28_init_perfmon()
+{
+}
+
+#endif
+
+
 #if defined(CONFIG_FSL_OTP)
 /* Building up eight registers's names of a bank */
 #define BANK(a, b, c, d, e, f, g, h)	\
diff --git a/arch/arm/mach-mx28/include/mach/mx28.h b/arch/arm/mach-mx28/include/mach/mx28.h
index 0972532..073b5cf 100644
--- a/arch/arm/mach-mx28/include/mach/mx28.h
+++ b/arch/arm/mach-mx28/include/mach/mx28.h
@@ -32,7 +32,8 @@
 #else
 #define MX28_OCRAM_BASE     (void __iomem *)0xf1000000
 #endif
-#define MX28_OCRAM_SIZE     (128 * SZ_1K)
+#define MX28_OCRAM_SIZE     (128 * SZ_1K - SZ_4K)
+#define MX28_OCRAM_DVFS_BASE     (MX28_OCRAM_PHBASE + 128 * SZ_1K - SZ_4K)
 
 
 #define ICOLL_PHYS_ADDR		(MX28_SOC_IO_PHYS_BASE + 0x000000)
diff --git a/arch/arm/mach-mx28/pm.c b/arch/arm/mach-mx28/pm.c
index dfd6539..c7d885c 100644
--- a/arch/arm/mach-mx28/pm.c
+++ b/arch/arm/mach-mx28/pm.c
@@ -447,6 +447,19 @@ static void mx28_pm_recover(void)
 		REGS_POWER_BASE + HW_POWER_CTRL_SET);
 }
 
+static void mx28_pm_recover(void)
+{
+	/*
+	 * The PSWITCH interrupt is enabled at do_standby, if the deivce
+	 * suspend failed, the enable operation will not be executed, in that
+	 * case, the POWER key will not be active again.
+	 */
+	__raw_writel(BM_POWER_CTRL_PSWITCH_IRQ,
+		REGS_POWER_BASE + HW_POWER_CTRL_CLR);
+	__raw_writel(BM_POWER_CTRL_ENIRQ_PSWITCH,
+		REGS_POWER_BASE + HW_POWER_CTRL_SET);
+}
+
 static void mx28_pm_end(void)
 {
 	if (saved_state == PM_SUSPEND_MEM) {
diff --git a/arch/arm/mach-mx28/sleep.S b/arch/arm/mach-mx28/sleep.S
index 08039bf..67b36fb 100644
--- a/arch/arm/mach-mx28/sleep.S
+++ b/arch/arm/mach-mx28/sleep.S
@@ -160,6 +160,10 @@ ENTRY(mx28_cpu_standby)
 __mx28_temp_stack:
 	.space	128
 
+	.space	0x100
+__mx28_temp_stack:
+	.space	128
+
 	adr	r9, __mx28_temp_stack
 
 	@ clean cache
@@ -306,6 +310,15 @@ __mx28_temp_stack:
 	mov r1, #(0x1F)
 	str r1, [r0, #4]
 
+	@ div hbus to lowest
+	mov r0, #(HW_CLKCTRL_HBUS_ADDR & 0x000000FF)
+	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x0000FF00)
+	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x00FF0000)
+	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0xFF000000)
+	ldr r3, [r0]
+	mov r1, #(0x1F)
+	str r1, [r0, #4]
+
 	@ do enter standby
 	mov	r0, #(HW_CLKCTRL_CPU_ADDR & 0x000000FF)
 	orr	r0, r0, #(HW_CLKCTRL_CPU_ADDR & 0x0000FF00)
@@ -332,6 +345,13 @@ __mx28_temp_stack:
 	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0xFF000000)
 	str r3, [r0]
 
+	@ restore hbus
+	mov r0, #(HW_CLKCTRL_HBUS_ADDR & 0x000000FF)
+	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x0000FF00)
+	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x00FF0000)
+	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0xFF000000)
+	str r3, [r0]
+
 	mov	r2, #(HW_POWER_STS_ADDR & 0x000000FF)
 	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x0000FF00)
 	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x00FF0000)
diff --git a/arch/arm/mach-mx28/usb_h1.c b/arch/arm/mach-mx28/usb_h1.c
index 8b4957e..b8ec93f 100644
--- a/arch/arm/mach-mx28/usb_h1.c
+++ b/arch/arm/mach-mx28/usb_h1.c
@@ -97,9 +97,7 @@ static void usbh1_clock_gate(bool on)
 	if (on) {
 		clk_enable(usb_clk);
 		clk_enable(usb_phy_clk);
-		usbh1_internal_phy_clock_gate(on);
 	} else {
-		usbh1_internal_phy_clock_gate(on);
 		clk_disable(usb_phy_clk);
 		clk_disable(usb_clk);
 	}
diff --git a/arch/arm/plat-mxs/cpufreq.c b/arch/arm/plat-mxs/cpufreq.c
index a188b21..5d9a573 100644
--- a/arch/arm/plat-mxs/cpufreq.c
+++ b/arch/arm/plat-mxs/cpufreq.c
@@ -162,6 +162,7 @@ static int set_op(struct cpufreq_policy *policy, unsigned int target_freq)
 		clk_set_rate(emi_clk, (profiles[i].emi) * 1000);
 		clk_set_rate(cpu_clk, (profiles[i].cpu) * 1000);
 		clk_set_rate(ahb_clk, (profiles[i].ahb) * 1000);
+		__udelay(1000);
 		/* x_clk order doesn't really matter */
 		clk_set_rate(x_clk, (profiles[i].xbus) * 1000);
 		timing_ctrl_rams(ss);
@@ -226,6 +227,7 @@ static int set_op(struct cpufreq_policy *policy, unsigned int target_freq)
 		timing_ctrl_rams(ss);
 		clk_set_rate(cpu_clk, (profiles[i].cpu) * 1000);
 		clk_set_rate(ahb_clk, (profiles[i].ahb) * 1000);
+		__udelay(1000);
 		clk_set_rate(emi_clk, (profiles[i].emi) * 1000);
 	}
 
diff --git a/drivers/misc/mxs-perfmon.c b/drivers/misc/mxs-perfmon.c
index 51228ec..cece3af 100644
--- a/drivers/misc/mxs-perfmon.c
+++ b/drivers/misc/mxs-perfmon.c
@@ -393,3 +393,398 @@ MODULE_LICENSE("GPL");
 
 module_init(mxs_perfmon_init);
 module_exit(mxs_perfmon_exit);
+/*
+ * Copyright (C) 2011 Freescale Semiconductor, Inc. All Rights Reserved.
+ */
+
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ */
+
+#include <linux/slab.h>
+#include <linux/module.h>
+#include <linux/kernel.h>
+#include <linux/errno.h>
+#include <linux/sysdev.h>
+#include <linux/bitops.h>
+#include <linux/platform_device.h>
+#include <linux/sysfs.h>
+#include <linux/io.h>
+#include <mach/hardware.h>
+#include <asm/irq.h>
+#include <linux/fsl_devices.h>
+#include <mach/system.h>
+#include "regs-perfmon.h"
+
+#define MONITOR		 "Monitor"
+
+struct mxs_perfmon_cmd_config {
+	int field;
+	int val;
+	const char *cmd;
+};
+
+static struct mxs_perfmon_cmd_config
+common_perfmon_cmd_config[] = {
+	{.val = 1,	.cmd = "start",	.field = BM_PERFMON_CTRL_RUN },
+	{.val = 0,	.cmd = "stop",	.field = BM_PERFMON_CTRL_RUN },
+	{.val = 1,	.cmd = "fetch",	.field = BM_PERFMON_CTRL_SNAP },
+	{.val = 1,	.cmd = "clear",	.field = BM_PERFMON_CTRL_CLR },
+	{.val = 1,	.cmd = "read",	.field = BM_PERFMON_CTRL_READ_EN },
+	{.val = 0,	.cmd = "write",	.field = BM_PERFMON_CTRL_READ_EN }
+};
+
+static struct mxs_perfmon_bit_config
+common_perfmon_bit_config[] = {
+	{.reg = HW_PERFMON_CTRL,		.name = MONITOR,
+	.field = ~0 },
+	{.reg = HW_PERFMON_CTRL,		.name = "Trap-En",
+	.field = BM_PERFMON_CTRL_TRAP_ENABLE },
+	{.reg = HW_PERFMON_CTRL,		.name = "Trap-In-Range",
+	.field = BM_PERFMON_CTRL_TRAP_IN_RANGE },
+	{.reg = HW_PERFMON_CTRL,		.name = "Latency-En",
+	.field = BM_PERFMON_CTRL_LATENCY_ENABLE },
+	{.reg = HW_PERFMON_CTRL,		.name = "Trap-IRQ",
+	.field = BM_PERFMON_CTRL_TRAP_IRQ },
+	{.reg = HW_PERFMON_CTRL,		.name = "Latency-IRQ",
+	.field = BM_PERFMON_CTRL_LATENCY_IRQ },
+	{.reg = HW_PERFMON_TRAP_ADDR_LOW,	.name = "Trap-Low",
+	.field = BM_PERFMON_TRAP_ADDR_LOW_ADDR },
+	{.reg = HW_PERFMON_TRAP_ADDR_HIGH,	.name = "Trap-High",
+	.field = BM_PERFMON_TRAP_ADDR_HIGH_ADDR },
+	{.reg = HW_PERFMON_LAT_THRESHOLD,	.name = "Latency-Threshold",
+	.field = BM_PERFMON_LAT_THRESHOLD_VALUE },
+	{.reg = HW_PERFMON_ACTIVE_CYCLE,	.name = "Active-Cycle",
+	.field = BM_PERFMON_ACTIVE_CYCLE_COUNT },
+	{.reg = HW_PERFMON_TRANSFER_COUNT,	.name = "Transfer-count",
+	.field = BM_PERFMON_TRANSFER_COUNT_VALUE },
+	{.reg = HW_PERFMON_TOTAL_LATENCY,	.name = "Latency-count",
+	.field = BM_PERFMON_TOTAL_LATENCY_COUNT },
+	{.reg = HW_PERFMON_DATA_COUNT,		.name = "Data-count",
+	.field = BM_PERFMON_DATA_COUNT_COUNT },
+	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "ABurst",
+	.field = BM_PERFMON_MAX_LATENCY_ABURST },
+	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "ALen",
+	.field = BM_PERFMON_MAX_LATENCY_ALEN },
+	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "ASize",
+	.field = BM_PERFMON_MAX_LATENCY_ASIZE },
+	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "TAGID",
+	.field = BM_PERFMON_MAX_LATENCY_TAGID },
+	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "Max-Count",
+	.field = BM_PERFMON_MAX_LATENCY_COUNT }
+};
+
+static struct mxs_platform_perfmon_data common_perfmon_data = {
+	.bit_config_tab = common_perfmon_bit_config,
+	.bit_config_cnt = ARRAY_SIZE(common_perfmon_bit_config),
+};
+
+struct mxs_perfmon_data {
+	struct device *dev;
+	struct mxs_platform_perfmon_data *pdata;
+	struct mxs_platform_perfmon_data *pdata_common;
+	int count;
+	struct attribute_group attr_group;
+	unsigned int base;
+	unsigned int initial;
+	/* attribute ** follow */
+	/* device_attribute follow */
+};
+
+#define pd_attribute_ptr(x) \
+	((struct attribute **)((x) + 1))
+#define pd_device_attribute_ptr(x) \
+	((struct device_attribute *)(pd_attribute_ptr(x) + (x)->count + 1))
+
+static inline u32 perfmon_reg_read(struct mxs_perfmon_data *pdata,
+						int reg)
+{
+	return __raw_readl(pdata->base + reg);
+}
+
+static inline void perfmon_reg_write(struct mxs_perfmon_data *pdata,
+				u32 val, int reg)
+{
+	__raw_writel(val, pdata->base + reg);
+}
+
+static int get_offset_form_field(int field)
+{
+	int offset = 0;
+
+	if (!field)
+		return offset;
+
+	while (!(field & 0x1)) {
+		field >>= 1;
+		offset++;
+	}
+
+	return offset;
+}
+
+static ssize_t
+perfmon_show(struct device *dev, struct device_attribute *attr, char *buf)
+{
+	struct platform_device *pdev = to_platform_device(dev);
+	struct mxs_perfmon_data *pd = platform_get_drvdata(pdev);
+	struct device_attribute *devattr = pd_device_attribute_ptr(pd);
+	struct mxs_perfmon_bit_config *pb;
+	int idx;
+	u32 val;
+	ssize_t result = 0;
+
+	idx = attr - devattr;
+	if ((unsigned int)idx >= pd->count)
+		return -EINVAL;
+
+	if (idx < pd->pdata->bit_config_cnt) {
+		pb = &pd->pdata->bit_config_tab[idx];
+		pb->reg = HW_PERFMON_MASTER_EN;
+	} else
+		pb = &pd->pdata_common->bit_config_tab \
+				[idx - pd->pdata->bit_config_cnt];
+
+	if (!pd->initial) {
+		mxs_reset_block((void *)pd->base, true);
+		pd->initial = true;
+	}
+
+	if (!memcmp(pb->name, MONITOR, sizeof(MONITOR))) {
+		/* cat monitor command, we return monitor status */
+		val = perfmon_reg_read(pd, pb->reg);
+
+		if (val & BV_PERFMON_CTRL_RUN__RUN)
+			result += sprintf(buf, "Run mode\r\n");
+		else
+			result += sprintf(buf, "Stop mode\r\n");
+
+		if (val & BM_PERFMON_CTRL_READ_EN)
+			result += \
+			sprintf(buf + result, "PM Read Activities\r\n");
+		else
+			result += \
+			sprintf(buf + result, "PM Write Activities\r\n");
+
+		return result;
+	}
+
+	/* read value and shift */
+	val = perfmon_reg_read(pd, pb->reg);
+	val &= pb->field;
+	val >>= get_offset_form_field(pb->field);
+
+	return sprintf(buf, "0x%x\n", val);
+}
+
+static ssize_t
+perfmon_store(struct device *dev, struct device_attribute *attr,
+		const char *buf, size_t count)
+{
+	struct platform_device *pdev = to_platform_device(dev);
+	struct mxs_perfmon_data *pd = platform_get_drvdata(pdev);
+	struct device_attribute *devattr = pd_device_attribute_ptr(pd);
+	struct mxs_perfmon_bit_config *pb;
+	int idx, r;
+	unsigned long val, newval;
+
+	idx = attr - devattr;
+	if ((unsigned int)idx >= pd->count)
+		return -EINVAL;
+
+	if (!buf)
+		return -EINVAL;
+
+	if (idx < pd->pdata->bit_config_cnt) {
+		pb = &pd->pdata->bit_config_tab[idx];
+		pb->reg = HW_PERFMON_MASTER_EN;
+	} else
+		pb = &pd->pdata_common->bit_config_tab \
+		[idx - pd->pdata->bit_config_cnt];
+
+	if (!pd->initial) {
+		mxs_reset_block((void *)pd->base, true);
+		pd->initial = true;
+	}
+
+	if (!memcmp(pb->name, MONITOR, sizeof(MONITOR))) {
+		/* it's a cmd */
+		int scan, size;
+		const struct mxs_perfmon_cmd_config *pcfg;
+
+		size = ARRAY_SIZE(common_perfmon_cmd_config);
+		for (scan = 0; scan < size; scan++) {
+			pcfg = &common_perfmon_cmd_config[scan];
+			if (!memcmp(buf, pcfg->cmd, strlen(pcfg->cmd))) {
+				val = perfmon_reg_read(pd, HW_PERFMON_CTRL);
+				val &= ~pcfg->field;
+				val |= \
+				pcfg->val << get_offset_form_field(pcfg->field);
+				perfmon_reg_write(pd, val, HW_PERFMON_CTRL);
+
+				return count;
+			}
+		}
+		if (scan == ARRAY_SIZE(common_perfmon_cmd_config))
+			return -EINVAL;
+	}
+	/* get value to write */
+	if (buf && (count >= 2) && buf[0] == '0' && buf[1] == 'x')
+		r = strict_strtoul(buf, 16, &val);
+	else
+		r = strict_strtoul(buf, 10, &val);
+
+	if (r != 0)
+		return r;
+
+	/* verify it fits */
+	if ((unsigned int)val > (pb->field >> get_offset_form_field(pb->field)))
+		return -EINVAL;
+
+	newval = perfmon_reg_read(pd, pb->reg);
+	newval &= ~pb->field;
+	newval |= val << get_offset_form_field(pb->field);
+	perfmon_reg_write(pd, newval, pb->reg);
+
+	return count;
+}
+
+
+static int __devinit mxs_perfmon_probe(struct platform_device *pdev)
+{
+	struct mxs_perfmon_data *pd;
+	struct mxs_platform_perfmon_data *pdata;
+	struct mxs_platform_perfmon_data *pdata_common;
+	struct resource *res;
+	struct mxs_perfmon_bit_config *pb;
+	struct attribute **attr;
+	struct device_attribute *devattr;
+	int i, cnt, size;
+	int err;
+
+	pdata = pdev->dev.platform_data;
+	if (pdata == NULL)
+		return -ENODEV;
+
+	pdata_common = &common_perfmon_data;
+
+	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	if (res == NULL)
+		return -ENODEV;
+
+	cnt = pdata->bit_config_cnt + pdata_common->bit_config_cnt;
+	size = sizeof(*pd) +
+		 (cnt + 1) * sizeof(struct atrribute *) +
+		 cnt * sizeof(struct device_attribute);
+	pd = kzalloc(size, GFP_KERNEL);
+	if (pd == NULL)
+		return -ENOMEM;
+	pd->dev = &pdev->dev;
+	pd->pdata = pdata;
+	pd->pdata_common = pdata_common;
+	pd->base =  (unsigned int)ioremap(res->start, res->end - res->start);
+	pd->initial = false;
+
+	platform_set_drvdata(pdev, pd);
+	pd->count = cnt;
+	attr = pd_attribute_ptr(pd);
+	devattr = pd_device_attribute_ptr(pd);
+
+	/* build the attributes structures */
+	pd->attr_group.attrs = attr;
+	pb = pdata->bit_config_tab;
+	for (i = 0; i < pdata->bit_config_cnt; i++) {
+		devattr[i].attr.name = pb[i].name;
+		devattr[i].attr.mode = S_IWUSR | S_IRUGO;
+		devattr[i].show = perfmon_show;
+		devattr[i].store = perfmon_store;
+		attr[i] = &devattr[i].attr;
+	}
+	pb = pdata_common->bit_config_tab;
+	for (i = 0; i < pdata_common->bit_config_cnt; i++) {
+		devattr[i + pdata->bit_config_cnt].attr.name = pb[i].name;
+		devattr[i + pdata->bit_config_cnt].attr.mode = \
+			S_IWUSR | S_IRUGO;
+		devattr[i + pdata->bit_config_cnt].show = perfmon_show;
+		devattr[i + pdata->bit_config_cnt].store = perfmon_store;
+		attr[i + pdata->bit_config_cnt] = \
+			&devattr[i + pdata->bit_config_cnt].attr;
+	}
+
+	err = sysfs_create_group(&pdev->dev.kobj, &pd->attr_group);
+	if (err != 0) {
+		platform_set_drvdata(pdev, NULL);
+		kfree(pd);
+		return err;
+	}
+
+	return 0;
+}
+
+static int __devexit mxs_perfmon_remove(struct platform_device *pdev)
+{
+	struct mxs_perfmon_data *pd;
+
+	pd = platform_get_drvdata(pdev);
+	sysfs_remove_group(&pdev->dev.kobj, &pd->attr_group);
+	platform_set_drvdata(pdev, NULL);
+	kfree(pd);
+
+	return 0;
+}
+
+#ifdef CONFIG_PM
+static int
+mxs_perfmon_suspend(struct platform_device *pdev, pm_message_t state)
+{
+	return 0;
+}
+
+static int mxs_perfmon_resume(struct platform_device *pdev)
+{
+	return 0;
+}
+#else
+#define mxs_perfmon_suspend	NULL
+#define	mxs_perfmon_resume	NULL
+#endif
+
+static struct platform_driver mxs_perfmon_driver = {
+	.probe		= mxs_perfmon_probe,
+	.remove		= __exit_p(mxs_perfmon_remove),
+	.suspend	= mxs_perfmon_suspend,
+	.resume		= mxs_perfmon_resume,
+	.driver		= {
+		.name   = "mxs-perfmon",
+		.owner	= THIS_MODULE,
+	},
+};
+
+static int __init mxs_perfmon_init(void)
+{
+	return platform_driver_register(&mxs_perfmon_driver);
+}
+
+static void __exit mxs_perfmon_exit(void)
+{
+	platform_driver_unregister(&mxs_perfmon_driver);
+}
+
+MODULE_AUTHOR("Freescale Semiconductor, Inc.");
+MODULE_DESCRIPTION("Performance Monitor user-access driver");
+MODULE_LICENSE("GPL");
+
+module_init(mxs_perfmon_init);
+module_exit(mxs_perfmon_exit);
diff --git a/drivers/misc/regs-perfmon.h b/drivers/misc/regs-perfmon.h
index 2f12885..0f12c8c 100644
--- a/drivers/misc/regs-perfmon.h
+++ b/drivers/misc/regs-perfmon.h
@@ -187,3 +187,192 @@
 #define BF_PERFMON_VERSION_STEP(v)  \
 		(((v) << 0) & BM_PERFMON_VERSION_STEP)
 #endif /* __ARCH_ARM___PERFMON_H */
+/*
+ * Copyright (C) 2011 Freescale Semiconductor, Inc. All Rights Reserved.
+ */
+
+/*
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * This file is created by xml file. Don't Edit it.
+ *
+ * Xml Revision: 1.36
+ * Template revision: 26195
+ */
+
+#ifndef __ARCH_ARM___PERFMON_H
+#define __ARCH_ARM___PERFMON_H
+
+
+#define HW_PERFMON_CTRL	(0x00000000)
+#define HW_PERFMON_CTRL_SET	(0x00000004)
+#define HW_PERFMON_CTRL_CLR	(0x00000008)
+#define HW_PERFMON_CTRL_TOG	(0x0000000c)
+
+#define BM_PERFMON_CTRL_SFTRST	0x80000000
+#define BV_PERFMON_CTRL_SFTRST__RUN   0x0
+#define BV_PERFMON_CTRL_SFTRST__RESET 0x1
+#define BM_PERFMON_CTRL_CLKGATE	0x40000000
+#define BV_PERFMON_CTRL_CLKGATE__RUN     0x0
+#define BV_PERFMON_CTRL_CLKGATE__NO_CLKS 0x1
+#define BP_PERFMON_CTRL_RSVD2	24
+#define BM_PERFMON_CTRL_RSVD2	0x3F000000
+#define BF_PERFMON_CTRL_RSVD2(v)  \
+		(((v) << 24) & BM_PERFMON_CTRL_RSVD2)
+#define BP_PERFMON_CTRL_IRQ_MID	16
+#define BM_PERFMON_CTRL_IRQ_MID	0x00FF0000
+#define BF_PERFMON_CTRL_IRQ_MID(v)  \
+		(((v) << 16) & BM_PERFMON_CTRL_IRQ_MID)
+#define BP_PERFMON_CTRL_RSVD1	13
+#define BM_PERFMON_CTRL_RSVD1	0x0000E000
+#define BF_PERFMON_CTRL_RSVD1(v)  \
+		(((v) << 13) & BM_PERFMON_CTRL_RSVD1)
+#define BM_PERFMON_CTRL_BUS_ERR_IRQ	0x00001000
+#define BM_PERFMON_CTRL_LATENCY_IRQ	0x00000800
+#define BM_PERFMON_CTRL_TRAP_IRQ	0x00000400
+#define BM_PERFMON_CTRL_BUS_ERR_IRQ_EN	0x00000200
+#define BM_PERFMON_CTRL_LATENCY_IRQ_EN	0x00000100
+#define BM_PERFMON_CTRL_TRAP_IRQ_EN	0x00000080
+#define BM_PERFMON_CTRL_LATENCY_ENABLE	0x00000040
+#define BM_PERFMON_CTRL_TRAP_IN_RANGE	0x00000020
+#define BM_PERFMON_CTRL_TRAP_ENABLE	0x00000010
+#define BM_PERFMON_CTRL_READ_EN	0x00000008
+#define BM_PERFMON_CTRL_CLR	0x00000004
+#define BM_PERFMON_CTRL_SNAP	0x00000002
+#define BM_PERFMON_CTRL_RUN	0x00000001
+#define BV_PERFMON_CTRL_RUN__HALT 0x0
+#define BV_PERFMON_CTRL_RUN__RUN  0x1
+
+#define HW_PERFMON_MASTER_EN	(0x00000010)
+
+#define BP_PERFMON_MASTER_EN_RSVD0	16
+#define BM_PERFMON_MASTER_EN_RSVD0	0xFFFF0000
+#define BF_PERFMON_MASTER_EN_RSVD0(v) \
+		(((v) << 16) & BM_PERFMON_MASTER_EN_RSVD0)
+#define BM_PERFMON_MASTER_EN_MID15	0x00008000
+#define BM_PERFMON_MASTER_EN_MID14	0x00004000
+#define BM_PERFMON_MASTER_EN_MID13	0x00002000
+#define BM_PERFMON_MASTER_EN_MID12	0x00001000
+#define BM_PERFMON_MASTER_EN_MID11	0x00000800
+#define BM_PERFMON_MASTER_EN_MID10	0x00000400
+#define BM_PERFMON_MASTER_EN_MID9	0x00000200
+#define BM_PERFMON_MASTER_EN_MID8	0x00000100
+#define BM_PERFMON_MASTER_EN_MID7	0x00000080
+#define BM_PERFMON_MASTER_EN_MID6	0x00000040
+#define BM_PERFMON_MASTER_EN_MID5	0x00000020
+#define BM_PERFMON_MASTER_EN_MID4	0x00000010
+#define BM_PERFMON_MASTER_EN_MID3	0x00000008
+#define BM_PERFMON_MASTER_EN_MID2	0x00000004
+#define BM_PERFMON_MASTER_EN_MID1	0x00000002
+#define BM_PERFMON_MASTER_EN_MID0	0x00000001
+
+#define HW_PERFMON_TRAP_ADDR_LOW	(0x00000020)
+
+#define BP_PERFMON_TRAP_ADDR_LOW_ADDR	0
+#define BM_PERFMON_TRAP_ADDR_LOW_ADDR	0xFFFFFFFF
+#define BF_PERFMON_TRAP_ADDR_LOW_ADDR(v)	(v)
+
+#define HW_PERFMON_TRAP_ADDR_HIGH	(0x00000030)
+
+#define BP_PERFMON_TRAP_ADDR_HIGH_ADDR	0
+#define BM_PERFMON_TRAP_ADDR_HIGH_ADDR	0xFFFFFFFF
+#define BF_PERFMON_TRAP_ADDR_HIGH_ADDR(v)	(v)
+
+#define HW_PERFMON_LAT_THRESHOLD	(0x00000040)
+
+#define BP_PERFMON_LAT_THRESHOLD_RSVD0	12
+#define BM_PERFMON_LAT_THRESHOLD_RSVD0	0xFFFFF000
+#define BF_PERFMON_LAT_THRESHOLD_RSVD0(v) \
+		(((v) << 12) & BM_PERFMON_LAT_THRESHOLD_RSVD0)
+#define BP_PERFMON_LAT_THRESHOLD_VALUE	0
+#define BM_PERFMON_LAT_THRESHOLD_VALUE	0x00000FFF
+#define BF_PERFMON_LAT_THRESHOLD_VALUE(v)  \
+		(((v) << 0) & BM_PERFMON_LAT_THRESHOLD_VALUE)
+
+#define HW_PERFMON_ACTIVE_CYCLE	(0x00000050)
+
+#define BP_PERFMON_ACTIVE_CYCLE_COUNT	0
+#define BM_PERFMON_ACTIVE_CYCLE_COUNT	0xFFFFFFFF
+#define BF_PERFMON_ACTIVE_CYCLE_COUNT(v)	(v)
+
+#define HW_PERFMON_TRANSFER_COUNT	(0x00000060)
+
+#define BP_PERFMON_TRANSFER_COUNT_VALUE	0
+#define BM_PERFMON_TRANSFER_COUNT_VALUE	0xFFFFFFFF
+#define BF_PERFMON_TRANSFER_COUNT_VALUE(v)	(v)
+
+#define HW_PERFMON_TOTAL_LATENCY	(0x00000070)
+
+#define BP_PERFMON_TOTAL_LATENCY_COUNT	0
+#define BM_PERFMON_TOTAL_LATENCY_COUNT	0xFFFFFFFF
+#define BF_PERFMON_TOTAL_LATENCY_COUNT(v)	(v)
+
+#define HW_PERFMON_DATA_COUNT	(0x00000080)
+
+#define BP_PERFMON_DATA_COUNT_COUNT	0
+#define BM_PERFMON_DATA_COUNT_COUNT	0xFFFFFFFF
+#define BF_PERFMON_DATA_COUNT_COUNT(v)	(v)
+
+#define HW_PERFMON_MAX_LATENCY	(0x00000090)
+
+#define BP_PERFMON_MAX_LATENCY_ABURST	30
+#define BM_PERFMON_MAX_LATENCY_ABURST	0xC0000000
+#define BF_PERFMON_MAX_LATENCY_ABURST(v) \
+		(((v) << 30) & BM_PERFMON_MAX_LATENCY_ABURST)
+#define BP_PERFMON_MAX_LATENCY_ALEN	26
+#define BM_PERFMON_MAX_LATENCY_ALEN	0x3C000000
+#define BF_PERFMON_MAX_LATENCY_ALEN(v)  \
+		(((v) << 26) & BM_PERFMON_MAX_LATENCY_ALEN)
+#define BP_PERFMON_MAX_LATENCY_ASIZE	23
+#define BM_PERFMON_MAX_LATENCY_ASIZE	0x03800000
+#define BF_PERFMON_MAX_LATENCY_ASIZE(v)  \
+		(((v) << 23) & BM_PERFMON_MAX_LATENCY_ASIZE)
+#define BP_PERFMON_MAX_LATENCY_TAGID	15
+#define BM_PERFMON_MAX_LATENCY_TAGID	0x007F8000
+#define BF_PERFMON_MAX_LATENCY_TAGID(v)  \
+		(((v) << 15) & BM_PERFMON_MAX_LATENCY_TAGID)
+#define BP_PERFMON_MAX_LATENCY_RSVD0	12
+#define BM_PERFMON_MAX_LATENCY_RSVD0	0x00007000
+#define BF_PERFMON_MAX_LATENCY_RSVD0(v)  \
+		(((v) << 12) & BM_PERFMON_MAX_LATENCY_RSVD0)
+#define BP_PERFMON_MAX_LATENCY_COUNT	0
+#define BM_PERFMON_MAX_LATENCY_COUNT	0x00000FFF
+#define BF_PERFMON_MAX_LATENCY_COUNT(v)  \
+		(((v) << 0) & BM_PERFMON_MAX_LATENCY_COUNT)
+
+#define HW_PERFMON_DEBUG	(0x000000a0)
+
+#define BP_PERFMON_DEBUG_RSVD	2
+#define BM_PERFMON_DEBUG_RSVD	0xFFFFFFFC
+#define BF_PERFMON_DEBUG_RSVD(v) \
+		(((v) << 2) & BM_PERFMON_DEBUG_RSVD)
+#define BM_PERFMON_DEBUG_TOTAL_CYCLE_CLR_EN	0x00000002
+#define BM_PERFMON_DEBUG_ERR_MID	0x00000001
+
+#define HW_PERFMON_VERSION	(0x000000b0)
+
+#define BP_PERFMON_VERSION_MAJOR	24
+#define BM_PERFMON_VERSION_MAJOR	0xFF000000
+#define BF_PERFMON_VERSION_MAJOR(v) \
+		(((v) << 24) & BM_PERFMON_VERSION_MAJOR)
+#define BP_PERFMON_VERSION_MINOR	16
+#define BM_PERFMON_VERSION_MINOR	0x00FF0000
+#define BF_PERFMON_VERSION_MINOR(v)  \
+		(((v) << 16) & BM_PERFMON_VERSION_MINOR)
+#define BP_PERFMON_VERSION_STEP	0
+#define BM_PERFMON_VERSION_STEP	0x0000FFFF
+#define BF_PERFMON_VERSION_STEP(v)  \
+		(((v) << 0) & BM_PERFMON_VERSION_STEP)
+#endif /* __ARCH_ARM___PERFMON_H */
diff --git a/drivers/video/mxs/lcd_tionpro28.c b/drivers/video/mxs/lcd_tionpro28.c
index d77bb0f..add5e81 100644
--- a/drivers/video/mxs/lcd_tionpro28.c
+++ b/drivers/video/mxs/lcd_tionpro28.c
@@ -1,21 +1,7 @@
 /*
- * Freescale MX28 Seiko 43WVF1G LCD panel driver
+ *   LCD panel driver
  *
- * Copyright (C) 2009-2010 Freescale Semiconductor, Inc. All Rights Reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ 
  */
 
 #include <linux/init.h>
@@ -30,6 +16,9 @@
 #include <mach/regs-pwm.h>
 #include <mach/system.h>
 
+
+/*//#if FALSE
+// 640x480 TFT
 #define DOTCLK_H_ACTIVE  640
 #define DOTCLK_H_PULSE_WIDTH 10
 #define DOTCLK_HF_PORCH  12
@@ -43,6 +32,23 @@
 #define DOTCLK_VB_PORCH  21
 #define DOTCLK_V_WAIT_CNT (DOTCLK_V_PULSE_WIDTH + DOTCLK_VB_PORCH)
 #define DOTCLK_V_PERIOD (DOTCLK_VF_PORCH + DOTCLK_V_ACTIVE + DOTCLK_V_WAIT_CNT)
+//#endif*/
+//#if TRUE
+// 640x480 VGA
+#define DOTCLK_H_ACTIVE  640
+#define DOTCLK_H_PULSE_WIDTH 96
+#define DOTCLK_HF_PORCH  16
+#define DOTCLK_HB_PORCH  48
+#define DOTCLK_H_WAIT_CNT  (DOTCLK_H_PULSE_WIDTH + DOTCLK_HB_PORCH)
+#define DOTCLK_H_PERIOD (DOTCLK_H_WAIT_CNT + DOTCLK_HF_PORCH + DOTCLK_H_ACTIVE)
+
+#define DOTCLK_V_ACTIVE  480
+#define DOTCLK_V_PULSE_WIDTH  2
+#define DOTCLK_VF_PORCH  13
+#define DOTCLK_VB_PORCH  31
+#define DOTCLK_V_WAIT_CNT (DOTCLK_V_PULSE_WIDTH + DOTCLK_VB_PORCH)
+#define DOTCLK_V_PERIOD (DOTCLK_VF_PORCH + DOTCLK_V_ACTIVE + DOTCLK_V_WAIT_CNT)
+//#endif
 
 static struct mxs_platform_bl_data bl_data;
 static struct clk *lcd_clk;
@@ -93,6 +99,14 @@ static int init_panel(struct device *dev, dma_addr_t phys, int memsize,
 			   DOTCLK_H_PULSE_WIDTH, DOTCLK_H_PERIOD,
 			   DOTCLK_H_WAIT_CNT, DOTCLK_H_ACTIVE, 0);
 
+	/* VSYNC & HSYNC polarity */
+	/*__raw_writel(BM_LCDIF_VDCTRL0_VSYNC_POL,
+		     REGS_LCDIF_BASE + HW_LCDIF_VDCTRL0_SET);	
+	__raw_writel(BM_LCDIF_VDCTRL0_HSYNC_POL,
+		     REGS_LCDIF_BASE + HW_LCDIF_VDCTRL0_SET);*/
+
+
+
 	ret = mxs_lcdif_dma_init(dev, phys, memsize);
 	if (ret)
 		goto out;
diff --git a/drivers/video/mxs/mxsfb.c b/drivers/video/mxs/mxsfb.c
index 6a9bc6d..ea70ea2 100644
--- a/drivers/video/mxs/mxsfb.c
+++ b/drivers/video/mxs/mxsfb.c
@@ -469,20 +469,20 @@ static int mxsfb_check_var(struct fb_var_screeninfo *var, struct fb_info *info)
 	if (var->bits_per_pixel == 16) {
 		/* RGBA 5551 */
 		if (var->transp.length) {
-			var->red.offset = 0;
+			var->red.offset = 10;
 			var->red.length = 5;
 			var->green.offset = 5;
 			var->green.length = 5;
-			var->blue.offset = 10;
+			var->blue.offset = 0;
 			var->blue.length = 5;
 			var->transp.offset = 15;
 			var->transp.length = 1;
 		} else {	/* RGB 565 */
-			var->red.offset = 0;
+			var->red.offset = 11;
 			var->red.length = 5;
 			var->green.offset = 5;
 			var->green.length = 6;
-			var->blue.offset = 11;
+			var->blue.offset = 0;
 			var->blue.length = 5;
 			var->transp.offset = 0;
 			var->transp.length = 0;
@@ -494,6 +494,7 @@ static int mxsfb_check_var(struct fb_var_screeninfo *var, struct fb_info *info)
 		var->green.length = 8;
 		var->blue.offset = 0;
 		var->blue.length = 8;
+		
 	}
 
 	var->red.msb_right = 0;
diff --git a/include/linux/fsl_devices.h b/include/linux/fsl_devices.h
index b5cc307..3e13183 100644
--- a/include/linux/fsl_devices.h
+++ b/include/linux/fsl_devices.h
@@ -677,4 +677,15 @@ struct mxs_platform_perfmon_data {
 	int bit_config_cnt;
 };
 
+struct mxs_perfmon_bit_config {
+	int reg;
+	int field;
+	const char *name;
+};
+
+struct mxs_platform_perfmon_data {
+	struct mxs_perfmon_bit_config *bit_config_tab;
+	int bit_config_cnt;
+};
+
 #endif /* _FSL_DEVICE_H_ */
-- 
1.9.1


From 3305a84806906bc7b3ef9daa15e3e40193946e92 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Fri, 22 Aug 2014 15:46:13 +0400
Subject: [PATCH 03/14] =?UTF-8?q?=D0=9F=D1=80=D0=B8=D0=BC=D0=B5=D0=BD?=
 =?UTF-8?q?=D0=B8=D0=BB=20=D0=BF=D0=B0=D1=82=D1=87=20tion-pro28=5Fpatch=5F?=
 =?UTF-8?q?svn2461-2840.=20=D0=9D=D0=B5=D1=81=D0=BA=D0=BE=D0=BB=D1=8C?=
 =?UTF-8?q?=D0=BA=D0=BE=20=D0=BE=D1=82=D0=BA=D0=BB=D0=BE=D0=BD=D1=91=D0=BD?=
 =?UTF-8?q?=D0=BD=D1=8B=D1=85=20=D0=B8=D0=B7=D0=BC=D0=B5=D0=BD=D0=B5=D0=BD?=
 =?UTF-8?q?=D0=B8=D0=B9?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/configs/tion-pro28_defconfig        | 2152 ++++++++++++++++++++++++++
 arch/arm/mach-mx28/clock.c                   |  155 +-
 arch/arm/mach-mx28/device.c                  |   47 +-
 arch/arm/mach-mx28/emi_settings.c            |    2 +-
 arch/arm/mach-mx28/emi_settings.h            |    4 +-
 arch/arm/mach-mx28/mx28evk.c                 |   35 +-
 arch/arm/mach-mx28/mx28evk_pins.c            |   63 +-
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c     |    2 +-
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c.rej |   41 +
 drivers/mtd/nand/gpmi-nfc/gpmi-nfc.h         |    2 +-
 drivers/net/fec.c                            |    4 +-
 drivers/video/mxs/lcd_tionpro28.c            |  270 ++--
 drivers/video/mxs/mxsfb.c                    |    3 -
 sound/soc/mxs/mxs-dai.c                      |    1 -
 14 files changed, 2554 insertions(+), 227 deletions(-)
 create mode 100644 arch/arm/configs/tion-pro28_defconfig
 create mode 100644 drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c.rej

diff --git a/arch/arm/configs/tion-pro28_defconfig b/arch/arm/configs/tion-pro28_defconfig
new file mode 100644
index 0000000..c53a37a
--- /dev/null
+++ b/arch/arm/configs/tion-pro28_defconfig
@@ -0,0 +1,2152 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.35.3
+# Thu Feb 20 20:20:51 2014
+#
+CONFIG_ARM=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_GENERIC_GPIO=y
+CONFIG_GENERIC_TIME=y
+# CONFIG_ARCH_USES_GETTIMEOFFSET is not set
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_HAVE_LATENCYTOP_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ZONE_DMA=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_FIQ=y
+CONFIG_GENERIC_HARDIRQS_NO__DO_IRQ=y
+CONFIG_VECTORS_BASE=0xffff0000
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_CONSTRUCTORS=y
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_BROKEN_ON_SMP=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_BZIP2 is not set
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+CONFIG_BSD_PROCESS_ACCT=y
+# CONFIG_BSD_PROCESS_ACCT_V3 is not set
+# CONFIG_TASKSTATS is not set
+CONFIG_AUDIT=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_TREE_PREEMPT_RCU is not set
+# CONFIG_TINY_RCU is not set
+# CONFIG_RCU_TRACE is not set
+CONFIG_RCU_FANOUT=32
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_TREE_RCU_TRACE is not set
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=17
+# CONFIG_CGROUPS is not set
+# CONFIG_SYSFS_DEPRECATED_V2 is not set
+# CONFIG_RELAY is not set
+CONFIG_NAMESPACES=y
+# CONFIG_UTS_NS is not set
+# CONFIG_IPC_NS is not set
+# CONFIG_USER_NS is not set
+# CONFIG_PID_NS is not set
+# CONFIG_NET_NS is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+CONFIG_RD_BZIP2=y
+CONFIG_RD_LZMA=y
+CONFIG_RD_LZO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+# CONFIG_EMBEDDED is not set
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+CONFIG_KALLSYMS_EXTRA_PASS=y
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+# CONFIG_ASHMEM is not set
+CONFIG_AIO=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_PERF_COUNTERS is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_COMPAT_BRK=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_PROFILING=y
+CONFIG_OPROFILE=m
+CONFIG_HAVE_OPROFILE=y
+CONFIG_KPROBES=y
+CONFIG_KRETPROBES=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_CLK=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+# CONFIG_SLOW_WORK is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+CONFIG_BLK_DEV_BSG=y
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+# CONFIG_INLINE_SPIN_TRYLOCK is not set
+# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK is not set
+# CONFIG_INLINE_SPIN_LOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_SPIN_UNLOCK is not set
+# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_READ_TRYLOCK is not set
+# CONFIG_INLINE_READ_LOCK is not set
+# CONFIG_INLINE_READ_LOCK_BH is not set
+# CONFIG_INLINE_READ_LOCK_IRQ is not set
+# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_READ_UNLOCK is not set
+# CONFIG_INLINE_READ_UNLOCK_BH is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQ is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_WRITE_TRYLOCK is not set
+# CONFIG_INLINE_WRITE_LOCK is not set
+# CONFIG_INLINE_WRITE_LOCK_BH is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_WRITE_UNLOCK is not set
+# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
+# CONFIG_MUTEX_SPIN_ON_OWNER is not set
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_AAEC2000 is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCMRING is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_CNS3XXX is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_STMP3XXX is not set
+CONFIG_ARCH_MXS=y
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_H720X is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP23XX is not set
+# CONFIG_ARCH_IXP2000 is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_L7200 is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_LOKI is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_NS9XXX is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_NUC93X is not set
+# CONFIG_ARCH_PNX4008 is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C2410 is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P6440 is not set
+# CONFIG_ARCH_S5P6442 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_LH7A40X is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_NOMADIK is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_ARCH_OMAP is not set
+# CONFIG_PLAT_SPEAR is not set
+CONFIG_IRAM_ALLOC=y
+CONFIG_DMA_ZONE_SIZE=16
+
+#
+# Freescale i.MXS implementations
+#
+CONFIG_ARCH_MX28=y
+# CONFIG_ARCH_MX23 is not set
+CONFIG_MACH_MX28EVK=y
+CONFIG_VECTORS_PHY_ADDR=0
+CONFIG_MXS_TIMER_WITH_MACH=y
+# CONFIG_MEM_mDDR is not set
+CONFIG_MXS_ICOLL=y
+CONFIG_MXS_EARLY_CONSOLE=y
+CONFIG_MXS_DMA_ENGINE=y
+CONFIG_MXS_LRADC=y
+CONFIG_MXS_PWM_CHANNELS=8
+
+#
+# Freescale Application UART:
+#
+CONFIG_MXS_AUART_DMA_SUPPORT=y
+CONFIG_MXS_AUART_PORTS=5
+CONFIG_MXS_AUART0_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART0_DMA_ENABLE is not set
+CONFIG_MXS_AUART1_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART1_DMA_ENABLE is not set
+CONFIG_MXS_AUART2_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART2_DMA_ENABLE is not set
+CONFIG_MXS_AUART3_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART3_DMA_ENABLE is not set
+CONFIG_MXS_AUART4_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART4_DMA_ENABLE is not set
+CONFIG_MXS_RAM_FREQ_SCALING=y
+# CONFIG_MXS_RAM_MDDR is not set
+# CONFIG_MXS_RAM_DDR is not set
+
+#
+# Processor Type
+#
+CONFIG_CPU_ARM926T=y
+CONFIG_CPU_32v5=y
+CONFIG_CPU_ABRT_EV5TJ=y
+CONFIG_CPU_PABRT_LEGACY=y
+CONFIG_CPU_CACHE_VIVT=y
+CONFIG_CPU_COPY_V4WB=y
+CONFIG_CPU_TLB_V4WBI=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+CONFIG_ARM_THUMB=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_WRITETHROUGH is not set
+# CONFIG_CPU_CACHE_ROUND_ROBIN is not set
+CONFIG_ARM_L1_CACHE_SHIFT=5
+CONFIG_COMMON_CLKDEV=y
+
+#
+# Bus support
+#
+# CONFIG_PCI_SYSCALL is not set
+# CONFIG_ARCH_SUPPORTS_MSI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_HZ=100
+CONFIG_AEABI=y
+CONFIG_OABI_COMPAT=y
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+# CONFIG_HIGHMEM is not set
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=999999
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+
+#
+# Boot options
+#
+CONFIG_ZBOOT_ROM_TEXT=0
+CONFIG_ZBOOT_ROM_BSS=0
+CONFIG_CMDLINE=""
+# CONFIG_XIP_KERNEL is not set
+# CONFIG_KEXEC is not set
+
+#
+# CPU Power Management
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+# CONFIG_CPU_FREQ_DEBUG is not set
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_IDLE is not set
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+# CONFIG_FPE_NWFPE is not set
+# CONFIG_FPE_FASTFPE is not set
+# CONFIG_VFP is not set
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
+CONFIG_HAVE_AOUT=y
+# CONFIG_BINFMT_AOUT is not set
+CONFIG_BINFMT_MISC=y
+
+#
+# Power management options
+#
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_SLEEP=y
+CONFIG_SUSPEND_NVS=y
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_RUNTIME=y
+CONFIG_PM_OPS=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+# CONFIG_XFRM_USER is not set
+# CONFIG_XFRM_SUB_POLICY is not set
+# CONFIG_XFRM_MIGRATE is not set
+# CONFIG_XFRM_STATISTICS is not set
+# CONFIG_NET_KEY is not set
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+# CONFIG_IP_ADVANCED_ROUTER is not set
+CONFIG_IP_FIB_HASH=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+# CONFIG_IP_PNP_RARP is not set
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE is not set
+# CONFIG_IP_MROUTE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_INET_AH is not set
+# CONFIG_INET_ESP is not set
+# CONFIG_INET_IPCOMP is not set
+# CONFIG_INET_XFRM_TUNNEL is not set
+# CONFIG_INET_TUNNEL is not set
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+# CONFIG_INET_LRO is not set
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+# CONFIG_IPV6 is not set
+# CONFIG_NETLABEL is not set
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETFILTER is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+# CONFIG_L2TP is not set
+# CONFIG_BRIDGE is not set
+# CONFIG_NET_DSA is not set
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_ECONET is not set
+# CONFIG_WAN_ROUTER is not set
+# CONFIG_PHONET is not set
+# CONFIG_IEEE802154 is not set
+# CONFIG_NET_SCHED is not set
+# CONFIG_DCB is not set
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_TCPPROBE is not set
+# CONFIG_HAMRADIO is not set
+CONFIG_CAN=y
+CONFIG_CAN_RAW=y
+# CONFIG_CAN_BCM is not set
+
+#
+# CAN Device Drivers
+#
+# CONFIG_CAN_VCAN is not set
+# CONFIG_CAN_DEV is not set
+# CONFIG_CAN_DEBUG_DEVICES is not set
+CONFIG_CAN_FLEXCAN=m
+# CONFIG_IRDA is not set
+# CONFIG_BT is not set
+# CONFIG_AF_RXRPC is not set
+CONFIG_WIRELESS=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
+CONFIG_WEXT_SPY=y
+CONFIG_WEXT_PRIV=y
+# CONFIG_CFG80211 is not set
+CONFIG_WIRELESS_EXT_SYSFS=y
+# CONFIG_LIB80211 is not set
+
+#
+# CFG80211 needs to be enabled for MAC80211
+#
+
+#
+# Some wireless drivers require a rate control algorithm
+#
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_LEDS=y
+CONFIG_RFKILL_INPUT=y
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
+# CONFIG_DEVTMPFS is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_CONNECTOR is not set
+CONFIG_MTD=y
+# CONFIG_MTD_DEBUG is not set
+# CONFIG_MTD_TESTS is not set
+CONFIG_MTD_CONCAT=y
+CONFIG_MTD_PARTITIONS=y
+# CONFIG_MTD_REDBOOT_PARTS is not set
+CONFIG_MTD_CMDLINE_PARTS=y
+# CONFIG_MTD_AFS_PARTS is not set
+# CONFIG_MTD_AR7_PARTS is not set
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=y
+CONFIG_MTD_BLKDEVS=y
+CONFIG_MTD_BLOCK=y
+# CONFIG_FTL is not set
+# CONFIG_NFTL is not set
+# CONFIG_INFTL is not set
+# CONFIG_RFD_FTL is not set
+# CONFIG_SSFDC is not set
+# CONFIG_SM_FTL is not set
+# CONFIG_MTD_OOPS is not set
+
+#
+# RAM/ROM/Flash chip drivers
+#
+# CONFIG_MTD_CFI is not set
+# CONFIG_MTD_JEDECPROBE is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+# CONFIG_MTD_RAM is not set
+# CONFIG_MTD_ROM is not set
+# CONFIG_MTD_ABSENT is not set
+
+#
+# Mapping drivers for chip access
+#
+# CONFIG_MTD_COMPLEX_MAPPINGS is not set
+# CONFIG_MTD_PLATRAM is not set
+
+#
+# Self-contained MTD device drivers
+#
+# CONFIG_MTD_DATAFLASH is not set
+# CONFIG_MTD_MXC_DATAFLASH is not set
+CONFIG_MTD_M25P80=m
+CONFIG_M25PXX_USE_FAST_READ=y
+# CONFIG_MTD_SST25L is not set
+# CONFIG_MTD_SLRAM is not set
+# CONFIG_MTD_PHRAM is not set
+# CONFIG_MTD_MTDRAM is not set
+# CONFIG_MTD_BLOCK2MTD is not set
+
+#
+# Disk-On-Chip Device Drivers
+#
+# CONFIG_MTD_DOC2000 is not set
+# CONFIG_MTD_DOC2001 is not set
+# CONFIG_MTD_DOC2001PLUS is not set
+CONFIG_MTD_NAND_ECC=y
+# CONFIG_MTD_NAND_ECC_SMC is not set
+CONFIG_MTD_NAND=y
+# CONFIG_MTD_NAND_VERIFY_WRITE is not set
+# CONFIG_MTD_SM_COMMON is not set
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+CONFIG_MTD_NAND_DENALI_SCRATCH_REG_ADDR=0xFF108018
+# CONFIG_MTD_NAND_GPIO is not set
+CONFIG_MTD_NAND_IDS=y
+# CONFIG_MTD_NAND_DISKONCHIP is not set
+# CONFIG_MTD_NAND_NANDSIM is not set
+CONFIG_MTD_NAND_GPMI_NFC=y
+# CONFIG_MTD_NAND_PLATFORM is not set
+# CONFIG_MTD_ALAUDA is not set
+# CONFIG_MTD_ONENAND is not set
+
+#
+# LPDDR flash memory drivers
+#
+# CONFIG_MTD_LPDDR is not set
+
+#
+# UBI - Unsorted block images
+#
+CONFIG_MTD_UBI=y
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+# CONFIG_MTD_UBI_GLUEBI is not set
+
+#
+# UBI debugging options
+#
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_MTD_UBI_BLOCK=y
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+
+#
+# DRBD disabled because PROC_FS, INET or CONNECTOR not selected
+#
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=4
+CONFIG_BLK_DEV_RAM_SIZE=16384
+# CONFIG_BLK_DEV_XIP is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+CONFIG_MISC_DEVICES=y
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_TI_DAC7512 is not set
+CONFIG_MXS_PERSISTENT=y
+CONFIG_MXS_PERFMON=y
+# CONFIG_ANDROID_PMEM is not set
+# CONFIG_UID_STAT is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_IWMC3200TOP is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+# CONFIG_RAID_ATTRS is not set
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+# CONFIG_SCSI_TGT is not set
+CONFIG_SCSI_NETLINK=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+# CONFIG_BLK_DEV_SR is not set
+# CONFIG_CHR_DEV_SG is not set
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+# CONFIG_SCSI_SCAN_ASYNC is not set
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=m
+CONFIG_SCSI_FC_ATTRS=m
+CONFIG_SCSI_ISCSI_ATTRS=m
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_LIBFC is not set
+# CONFIG_LIBFCOE is not set
+# CONFIG_SCSI_DEBUG is not set
+# CONFIG_SCSI_DH is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+# CONFIG_ATA is not set
+# CONFIG_MD is not set
+CONFIG_NETDEVICES=y
+# CONFIG_DUMMY is not set
+# CONFIG_BONDING is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_EQUALIZER is not set
+# CONFIG_TUN is not set
+# CONFIG_VETH is not set
+CONFIG_PHYLIB=y
+
+#
+# MII PHY device drivers
+#
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_VITESSE_PHY is not set
+# CONFIG_SMSC_PHY is not set
+# CONFIG_BROADCOM_PHY is not set
+# CONFIG_ICPLUS_PHY is not set
+# CONFIG_REALTEK_PHY is not set
+# CONFIG_NATIONAL_PHY is not set
+# CONFIG_STE10XP is not set
+# CONFIG_LSI_ET1011C_PHY is not set
+# CONFIG_MICREL_PHY is not set
+# CONFIG_FIXED_PHY is not set
+# CONFIG_MDIO_BITBANG is not set
+CONFIG_NET_ETHERNET=y
+CONFIG_MII=y
+# CONFIG_AX88796 is not set
+# CONFIG_SMC91X is not set
+# CONFIG_DM9000 is not set
+# CONFIG_ENC28J60 is not set
+# CONFIG_ETHOC is not set
+# CONFIG_SMC911X is not set
+# CONFIG_SMSC911X is not set
+# CONFIG_DNET is not set
+# CONFIG_IBM_NEW_EMAC_ZMII is not set
+# CONFIG_IBM_NEW_EMAC_RGMII is not set
+# CONFIG_IBM_NEW_EMAC_TAH is not set
+# CONFIG_IBM_NEW_EMAC_EMAC4 is not set
+# CONFIG_IBM_NEW_EMAC_NO_FLOW_CTRL is not set
+# CONFIG_IBM_NEW_EMAC_MAL_CLR_ICINTSTAT is not set
+# CONFIG_IBM_NEW_EMAC_MAL_COMMON_ERR is not set
+# CONFIG_B44 is not set
+# CONFIG_KS8842 is not set
+# CONFIG_KS8851 is not set
+# CONFIG_KS8851_MLL is not set
+CONFIG_FEC=y
+# CONFIG_FEC_1588 is not set
+# CONFIG_FEC2 is not set
+# CONFIG_NETDEV_1000 is not set
+# CONFIG_NETDEV_10000 is not set
+CONFIG_WLAN=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_HOSTAP is not set
+CONFIG_ATH6K_LEGACY=m
+CONFIG_AR600x_SD31_XXX=y
+# CONFIG_AR600x_WB31_XXX is not set
+# CONFIG_AR600x_SD32_XXX is not set
+# CONFIG_AR600x_CUSTOM_XXX is not set
+# CONFIG_ATH6KL_ENABLE_COEXISTENCE is not set
+# CONFIG_ATH6KL_HCI_BRIDGE is not set
+# CONFIG_ATH6KL_CFG80211 is not set
+# CONFIG_ATH6KL_HTC_RAW_INTERFACE is not set
+# CONFIG_ATH6KL_VIRTUAL_SCATTER_GATHER is not set
+# CONFIG_ATH6KL_DEBUG is not set
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_IPHETH is not set
+# CONFIG_WAN is not set
+# CONFIG_PPP is not set
+# CONFIG_SLIP is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+# CONFIG_ISDN is not set
+# CONFIG_PHONE is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=y
+# CONFIG_INPUT_POLLDEV is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+CONFIG_KEYBOARD_MXS=y
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=m
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+CONFIG_MOUSE_VSXXXAA=m
+# CONFIG_MOUSE_GPIO is not set
+# CONFIG_MOUSE_SYNAPTICS_I2C is not set
+CONFIG_INPUT_JOYSTICK=y
+# CONFIG_JOYSTICK_ANALOG is not set
+# CONFIG_JOYSTICK_A3D is not set
+# CONFIG_JOYSTICK_ADI is not set
+# CONFIG_JOYSTICK_COBRA is not set
+# CONFIG_JOYSTICK_GF2K is not set
+# CONFIG_JOYSTICK_GRIP is not set
+# CONFIG_JOYSTICK_GRIP_MP is not set
+# CONFIG_JOYSTICK_GUILLEMOT is not set
+# CONFIG_JOYSTICK_INTERACT is not set
+# CONFIG_JOYSTICK_SIDEWINDER is not set
+# CONFIG_JOYSTICK_TMDC is not set
+# CONFIG_JOYSTICK_IFORCE is not set
+# CONFIG_JOYSTICK_WARRIOR is not set
+# CONFIG_JOYSTICK_MAGELLAN is not set
+# CONFIG_JOYSTICK_SPACEORB is not set
+# CONFIG_JOYSTICK_SPACEBALL is not set
+# CONFIG_JOYSTICK_STINGER is not set
+# CONFIG_JOYSTICK_TWIDJOY is not set
+# CONFIG_JOYSTICK_ZHENHUA is not set
+# CONFIG_JOYSTICK_JOYDUMP is not set
+# CONFIG_JOYSTICK_XPAD is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_ADS7846 is not set
+# CONFIG_TOUCHSCREEN_AD7877 is not set
+# CONFIG_TOUCHSCREEN_AD7879_I2C is not set
+# CONFIG_TOUCHSCREEN_AD7879_SPI is not set
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+CONFIG_TOUCHSCREEN_GUNZE=m
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+CONFIG_TOUCHSCREEN_MXS=y
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_ATI_REMOTE is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_INPUT_UINPUT=m
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_DEVKMEM=y
+CONFIG_SERIAL_NONSTANDARD=y
+# CONFIG_N_HDLC is not set
+# CONFIG_N_GSM is not set
+# CONFIG_RISCOM8 is not set
+# CONFIG_SPECIALIX is not set
+CONFIG_STALDRV=y
+CONFIG_MXS_VIIM=y
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_MXS_DUART=y
+CONFIG_SERIAL_MXS_AUART=y
+# CONFIG_SERIAL_MXS_AUART_CONSOLE is not set
+CONFIG_SERIAL_MXS_DUART_CONSOLE=y
+# CONFIG_SERIAL_MAX3100 is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+# CONFIG_FSL_OTP is not set
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_HW_RANDOM=m
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_R3964 is not set
+CONFIG_RAW_DRIVER=y
+CONFIG_MAX_RAW_DEVS=8192
+# CONFIG_TCG_TPM is not set
+# CONFIG_RAMOOPS is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+# CONFIG_I2C_CHARDEV is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE is not set
+# CONFIG_I2C_GPIO is not set
+CONFIG_I2C_MXS=y
+CONFIG_I2C_MXS_SELECT0=y
+# CONFIG_I2C_MXS_SELECT0_PIOQUEUE_MODE is not set
+# CONFIG_I2C_MXS_SELECT1 is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_XILINX is not set
+CONFIG_SPI_MXS=y
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIOLIB=y
+CONFIG_GPIO_SYSFS=y
+
+#
+# Memory mapped GPIO expanders:
+#
+# CONFIG_GPIO_IT8761E is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_ADP5588 is not set
+
+#
+# PCI GPIO expanders:
+#
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2760 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+# CONFIG_BATTERY_MAX17040 is not set
+CONFIG_BATTERY_MXS=y
+# CONFIG_MXS_VBUS_CURRENT_DRAW is not set
+# CONFIG_BATTERY_DS2438 is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+CONFIG_MXS_WATCHDOG=y
+# CONFIG_MAX63XX_WATCHDOG is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB=m
+CONFIG_SSB_SDIOHOST_POSSIBLE=y
+# CONFIG_SSB_SDIOHOST is not set
+# CONFIG_SSB_DEBUG is not set
+CONFIG_MFD_SUPPORT=y
+# CONFIG_MFD_CORE is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_MFD_TC35892 is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_LTC3589_I2C is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_MC13783 is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_AB8500_CORE is not set
+# CONFIG_MFD_MAX17135 is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_BQ24022 is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+CONFIG_REGULATOR_MXS=y
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2_COMMON=y
+# CONFIG_VIDEO_ALLOW_V4L1 is not set
+CONFIG_VIDEO_V4L1_COMPAT=y
+# CONFIG_DVB_CORE is not set
+CONFIG_VIDEO_MEDIA=y
+
+#
+# Multimedia drivers
+#
+CONFIG_IR_CORE=y
+CONFIG_VIDEO_IR=y
+CONFIG_RC_MAP=y
+CONFIG_IR_NEC_DECODER=y
+CONFIG_IR_RC5_DECODER=y
+CONFIG_IR_RC6_DECODER=y
+CONFIG_IR_JVC_DECODER=y
+CONFIG_IR_SONY_DECODER=y
+# CONFIG_IR_IMON is not set
+# CONFIG_MEDIA_ATTACH is not set
+CONFIG_MEDIA_TUNER=y
+# CONFIG_MEDIA_TUNER_CUSTOMISE is not set
+CONFIG_MEDIA_TUNER_SIMPLE=y
+CONFIG_MEDIA_TUNER_TDA8290=y
+CONFIG_MEDIA_TUNER_TDA9887=y
+CONFIG_MEDIA_TUNER_TEA5761=y
+CONFIG_MEDIA_TUNER_TEA5767=y
+CONFIG_MEDIA_TUNER_MT20XX=y
+CONFIG_MEDIA_TUNER_XC2028=y
+CONFIG_MEDIA_TUNER_XC5000=y
+CONFIG_MEDIA_TUNER_MC44S803=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEOBUF_GEN=y
+CONFIG_VIDEOBUF_DMA_CONTIG=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+# CONFIG_VIDEO_HELPER_CHIPS_AUTO is not set
+CONFIG_VIDEO_IR_I2C=y
+
+#
+# Encoders/decoders and other helper chips
+#
+
+#
+# Audio decoders
+#
+# CONFIG_VIDEO_TVAUDIO is not set
+# CONFIG_VIDEO_TDA7432 is not set
+# CONFIG_VIDEO_TDA9840 is not set
+# CONFIG_VIDEO_TDA9875 is not set
+# CONFIG_VIDEO_TEA6415C is not set
+# CONFIG_VIDEO_TEA6420 is not set
+# CONFIG_VIDEO_MSP3400 is not set
+# CONFIG_VIDEO_CS5345 is not set
+# CONFIG_VIDEO_CS53L32A is not set
+# CONFIG_VIDEO_M52790 is not set
+# CONFIG_VIDEO_TLV320AIC23B is not set
+# CONFIG_VIDEO_WM8775 is not set
+# CONFIG_VIDEO_WM8739 is not set
+# CONFIG_VIDEO_VP27SMPX is not set
+
+#
+# RDS decoders
+#
+# CONFIG_VIDEO_SAA6588 is not set
+
+#
+# Video decoders
+#
+# CONFIG_VIDEO_ADV7180 is not set
+# CONFIG_VIDEO_BT819 is not set
+# CONFIG_VIDEO_BT856 is not set
+# CONFIG_VIDEO_BT866 is not set
+# CONFIG_VIDEO_KS0127 is not set
+# CONFIG_VIDEO_OV7670 is not set
+# CONFIG_VIDEO_MT9V011 is not set
+# CONFIG_VIDEO_TCM825X is not set
+# CONFIG_VIDEO_SAA7110 is not set
+# CONFIG_VIDEO_SAA711X is not set
+# CONFIG_VIDEO_SAA717X is not set
+# CONFIG_VIDEO_SAA7191 is not set
+# CONFIG_VIDEO_TVP514X is not set
+# CONFIG_VIDEO_TVP5150 is not set
+# CONFIG_VIDEO_TVP7002 is not set
+# CONFIG_VIDEO_VPX3220 is not set
+
+#
+# Video and audio decoders
+#
+# CONFIG_VIDEO_CX25840 is not set
+
+#
+# MPEG video encoders
+#
+# CONFIG_VIDEO_CX2341X is not set
+
+#
+# Video encoders
+#
+# CONFIG_VIDEO_SAA7127 is not set
+# CONFIG_VIDEO_SAA7185 is not set
+# CONFIG_VIDEO_ADV7170 is not set
+# CONFIG_VIDEO_ADV7175 is not set
+# CONFIG_VIDEO_THS7303 is not set
+# CONFIG_VIDEO_ADV7343 is not set
+# CONFIG_VIDEO_AK881X is not set
+
+#
+# Video improvement chips
+#
+# CONFIG_VIDEO_UPD64031A is not set
+# CONFIG_VIDEO_UPD64083 is not set
+CONFIG_VIDEO_MXS_PXP=y
+# CONFIG_VIDEO_SAA5246A is not set
+# CONFIG_VIDEO_SAA5249 is not set
+# CONFIG_SOC_CAMERA is not set
+# CONFIG_V4L_USB_DRIVERS is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_RADIO_ADAPTERS is not set
+# CONFIG_DAB is not set
+
+#
+# Graphics support
+#
+# CONFIG_VGASTATE is not set
+# CONFIG_VIDEO_OUTPUT_CONTROL is not set
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_MXS=y
+# CONFIG_FB_MXS_LCD_43WVF1G is not set
+CONFIG_FB_MXS_LCD_TIONPRO28=y
+# CONFIG_FB_MXS_LCD_LMS430 is not set
+# CONFIG_FB_MXS_TVENC is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_MB862XX is not set
+# CONFIG_FB_BROADSHEET is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+CONFIG_BACKLIGHT_MXS=y
+
+#
+# Display device support
+#
+# CONFIG_DISPLAY_SUPPORT is not set
+
+#
+# Console display driver support
+#
+# CONFIG_VGA_CONSOLE is not set
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
+# CONFIG_FONTS is not set
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_LOGO=y
+# CONFIG_LOGO_LINUX_MONO is not set
+# CONFIG_LOGO_LINUX_VGA16 is not set
+CONFIG_LOGO_LINUX_CLUT224=y
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+# CONFIG_SND_DRIVERS is not set
+# CONFIG_SND_ARM is not set
+CONFIG_SND_SPI=y
+# CONFIG_SND_USB is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_MXS_SOC=y
+CONFIG_SND_MXS_SOC_SPDIF_DAI=y
+CONFIG_SND_MXS_SOC_EVK_DEVB=m
+CONFIG_SND_MXS_SOC_DAI=m
+CONFIG_SND_MXS_SOC_EVK_DEVB_SPDIF=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+CONFIG_SND_SOC_SGTL5000=m
+CONFIG_SND_SOC_MXS_SPDIF=y
+# CONFIG_SOUND_PRIME is not set
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HIDRAW is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+CONFIG_USB_HIDDEV=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_3M_PCT is not set
+CONFIG_HID_A4TECH=y
+CONFIG_HID_APPLE=y
+CONFIG_HID_BELKIN=y
+# CONFIG_HID_CANDO is not set
+CONFIG_HID_CHERRY=y
+CONFIG_HID_CHICONY=y
+# CONFIG_HID_PRODIKEYS is not set
+CONFIG_HID_CYPRESS=y
+CONFIG_HID_DRAGONRISE=y
+# CONFIG_DRAGONRISE_FF is not set
+# CONFIG_HID_EGALAX is not set
+CONFIG_HID_EZKEY=y
+CONFIG_HID_KYE=y
+CONFIG_HID_GYRATION=y
+# CONFIG_HID_TWINHAN is not set
+CONFIG_HID_KENSINGTON=y
+CONFIG_HID_LOGITECH=y
+# CONFIG_LOGITECH_FF is not set
+# CONFIG_LOGIRUMBLEPAD2_FF is not set
+# CONFIG_LOGIG940_FF is not set
+CONFIG_HID_MICROSOFT=y
+# CONFIG_HID_MOSART is not set
+CONFIG_HID_MONTEREY=y
+CONFIG_HID_NTRIG=y
+# CONFIG_HID_ORTEK is not set
+CONFIG_HID_PANTHERLORD=y
+# CONFIG_PANTHERLORD_FF is not set
+CONFIG_HID_PETALYNX=y
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_QUANTA is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_ROCCAT_KONE is not set
+CONFIG_HID_SAMSUNG=y
+CONFIG_HID_SONY=y
+# CONFIG_HID_STANTUM is not set
+CONFIG_HID_SUNPLUS=y
+CONFIG_HID_GREENASIA=y
+# CONFIG_GREENASIA_FF is not set
+CONFIG_HID_SMARTJOYPLUS=y
+# CONFIG_SMARTJOYPLUS_FF is not set
+CONFIG_HID_TOPSEED=y
+CONFIG_HID_THRUSTMASTER=y
+# CONFIG_THRUSTMASTER_FF is not set
+CONFIG_HID_ZEROPLUS=y
+# CONFIG_ZEROPLUS_FF is not set
+# CONFIG_HID_ZYDACRON is not set
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+# CONFIG_USB_ARCH_HAS_OHCI is not set
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+# CONFIG_USB_ANNOUNCE_NEW_DEVICES is not set
+
+#
+# Miscellaneous USB options
+#
+CONFIG_USB_DEVICEFS=y
+# CONFIG_USB_DEVICE_CLASS is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_SUSPEND=y
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_ARC=y
+CONFIG_USB_EHCI_ARC_H1=y
+CONFIG_USB_EHCI_ARC_OTG=y
+# CONFIG_USB_STATIC_IRAM is not set
+# CONFIG_USB_EHCI_FSL_MC13783 is not set
+# CONFIG_USB_EHCI_FSL_1301 is not set
+# CONFIG_USB_EHCI_FSL_1504 is not set
+CONFIG_USB_EHCI_FSL_UTMI=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+# CONFIG_USB_EHCI_TT_NEWSCHED is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HWA_HCD is not set
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_GADGET_MUSB_HDRC is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_PXA25X is not set
+# CONFIG_USB_GADGET_R8A66597 is not set
+# CONFIG_USB_GADGET_PXA27X is not set
+# CONFIG_USB_GADGET_S3C_HSOTG is not set
+# CONFIG_USB_GADGET_IMX is not set
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_FSL_QE is not set
+# CONFIG_USB_GADGET_CI13XXX is not set
+# CONFIG_USB_GADGET_NET2280 is not set
+# CONFIG_USB_GADGET_GOKU is not set
+CONFIG_USB_GADGET_ARC=y
+CONFIG_USB_ARC=y
+CONFIG_WORKAROUND_ARCUSB_REG_RW=y
+# CONFIG_USB_GADGET_LANGWELL is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+CONFIG_USB_ETH=m
+CONFIG_USB_ETH_RNDIS=y
+# CONFIG_USB_ETH_EEM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+CONFIG_USB_FILE_STORAGE=m
+# CONFIG_FSL_UTP is not set
+# CONFIG_USB_FILE_STORAGE_TEST is not set
+# CONFIG_USB_MASS_STORAGE is not set
+CONFIG_USB_G_SERIAL=m
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_NOKIA is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_WEBCAM is not set
+
+#
+# OTG and related infrastructure
+#
+CONFIG_USB_OTG_UTILS=y
+# CONFIG_USB_GPIO_VBUS is not set
+# CONFIG_USB_ULPI is not set
+# CONFIG_NOP_USB_XCEIV is not set
+CONFIG_MXC_OTG=y
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_BOUNCE=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_MMC_SPI is not set
+# CONFIG_MMC_IMX_ESDHCI_PIO_MODE is not set
+CONFIG_MMC_MXS=y
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+# CONFIG_LEDS_MXS is not set
+# CONFIG_LEDS_PCA9532 is not set
+CONFIG_LEDS_GPIO=y
+CONFIG_LEDS_GPIO_PLATFORM=y
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+CONFIG_LEDS_TRIGGERS=y
+
+#
+# LED Triggers
+#
+CONFIG_LEDS_TRIGGER_TIMER=y
+CONFIG_LEDS_TRIGGER_HEARTBEAT=y
+# CONFIG_LEDS_TRIGGER_BACKLIGHT is not set
+CONFIG_LEDS_TRIGGER_GPIO=y
+CONFIG_LEDS_TRIGGER_DEFAULT_ON=y
+
+#
+# iptables trigger is under Netfilter config (LED target)
+#
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+# CONFIG_RTC_DEBUG is not set
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=y
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_DS3234 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_MXS is not set
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+# CONFIG_MXC_PXP is not set
+# CONFIG_TIMB_DMA is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+# CONFIG_STAGING is not set
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_DEFAULTS_TO_ORDERED=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+# CONFIG_EXT4_FS is not set
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+CONFIG_FS_POSIX_ACL=y
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+# CONFIG_INOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_QUOTA=y
+# CONFIG_QUOTA_NETLINK_INTERFACE is not set
+CONFIG_PRINT_QUOTA_WARNING=y
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=y
+# CONFIG_QFMT_V1 is not set
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+# CONFIG_AUTOFS_FS is not set
+CONFIG_AUTOFS4_FS=m
+CONFIG_FUSE_FS=m
+CONFIG_CUSE=m
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="ascii"
+CONFIG_NTFS_FS=m
+# CONFIG_NTFS_DEBUG is not set
+CONFIG_NTFS_RW=y
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_TMPFS_POSIX_ACL is not set
+# CONFIG_HUGETLB_PAGE is not set
+# CONFIG_CONFIGFS_FS is not set
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+# CONFIG_HFS_FS is not set
+# CONFIG_HFSPLUS_FS is not set
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+CONFIG_JFFS2_FS=y
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+# CONFIG_JFFS2_FS_WBUF_VERIFY is not set
+# CONFIG_JFFS2_SUMMARY is not set
+# CONFIG_JFFS2_FS_XATTR is not set
+# CONFIG_JFFS2_COMPRESSION_OPTIONS is not set
+CONFIG_JFFS2_ZLIB=y
+# CONFIG_JFFS2_LZO is not set
+CONFIG_JFFS2_RTIME=y
+# CONFIG_JFFS2_RUBIN is not set
+CONFIG_UBIFS_FS=y
+# CONFIG_UBIFS_FS_XATTR is not set
+# CONFIG_UBIFS_FS_ADVANCED_COMPR is not set
+CONFIG_UBIFS_FS_LZO=y
+CONFIG_UBIFS_FS_ZLIB=y
+# CONFIG_UBIFS_FS_DEBUG is not set
+# CONFIG_LOGFS is not set
+CONFIG_CRAMFS=m
+# CONFIG_SQUASHFS is not set
+# CONFIG_VXFS_FS is not set
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3=y
+# CONFIG_NFS_V3_ACL is not set
+# CONFIG_NFS_V4 is not set
+CONFIG_ROOT_NFS=y
+# CONFIG_NFSD is not set
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+# CONFIG_RPCSEC_GSS_KRB5 is not set
+# CONFIG_RPCSEC_GSS_SPKM3 is not set
+# CONFIG_SMB_FS is not set
+# CONFIG_CEPH_FS is not set
+# CONFIG_CIFS is not set
+# CONFIG_NCP_FS is not set
+# CONFIG_CODA_FS is not set
+# CONFIG_AFS_FS is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+CONFIG_OSF_PARTITION=y
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+# CONFIG_LDM_PARTITION is not set
+CONFIG_SGI_PARTITION=y
+# CONFIG_ULTRIX_PARTITION is not set
+CONFIG_SUN_PARTITION=y
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="ascii"
+# CONFIG_NLS_CODEPAGE_437 is not set
+# CONFIG_NLS_CODEPAGE_737 is not set
+# CONFIG_NLS_CODEPAGE_775 is not set
+# CONFIG_NLS_CODEPAGE_850 is not set
+# CONFIG_NLS_CODEPAGE_852 is not set
+CONFIG_NLS_CODEPAGE_855=m
+# CONFIG_NLS_CODEPAGE_857 is not set
+# CONFIG_NLS_CODEPAGE_860 is not set
+# CONFIG_NLS_CODEPAGE_861 is not set
+# CONFIG_NLS_CODEPAGE_862 is not set
+# CONFIG_NLS_CODEPAGE_863 is not set
+# CONFIG_NLS_CODEPAGE_864 is not set
+# CONFIG_NLS_CODEPAGE_865 is not set
+CONFIG_NLS_CODEPAGE_866=m
+# CONFIG_NLS_CODEPAGE_869 is not set
+# CONFIG_NLS_CODEPAGE_936 is not set
+# CONFIG_NLS_CODEPAGE_950 is not set
+# CONFIG_NLS_CODEPAGE_932 is not set
+# CONFIG_NLS_CODEPAGE_949 is not set
+# CONFIG_NLS_CODEPAGE_874 is not set
+# CONFIG_NLS_ISO8859_8 is not set
+# CONFIG_NLS_CODEPAGE_1250 is not set
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=y
+# CONFIG_NLS_ISO8859_1 is not set
+# CONFIG_NLS_ISO8859_2 is not set
+# CONFIG_NLS_ISO8859_3 is not set
+# CONFIG_NLS_ISO8859_4 is not set
+CONFIG_NLS_ISO8859_5=m
+# CONFIG_NLS_ISO8859_6 is not set
+# CONFIG_NLS_ISO8859_7 is not set
+# CONFIG_NLS_ISO8859_9 is not set
+# CONFIG_NLS_ISO8859_13 is not set
+# CONFIG_NLS_ISO8859_14 is not set
+# CONFIG_NLS_ISO8859_15 is not set
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=m
+# CONFIG_DLM is not set
+
+#
+# Kernel hacking
+#
+CONFIG_PRINTK_TIME=y
+# CONFIG_ENABLE_WARN_DEPRECATED is not set
+# CONFIG_ENABLE_MUST_CHECK is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_MAGIC_SYSRQ is not set
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_KERNEL is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_MEMORY_INIT=y
+# CONFIG_RCU_CPU_STALL_DETECTOR is not set
+# CONFIG_LKDTM is not set
+# CONFIG_LATENCYTOP is not set
+# CONFIG_SYSCTL_SYSCALL_CHECK is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_RING_BUFFER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+CONFIG_ARM_UNWIND=y
+CONFIG_DEBUG_USER=y
+# CONFIG_OC_ETM is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+CONFIG_KEYS_DEBUG_PROC_KEYS=y
+CONFIG_SECURITY=y
+# CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_SECURITY_PATH is not set
+CONFIG_LSM_MMAP_MIN_ADDR=65536
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+# CONFIG_SECURITY_TOMOYO is not set
+# CONFIG_IMA is not set
+CONFIG_DEFAULT_SECURITY_SELINUX=y
+# CONFIG_DEFAULT_SECURITY_SMACK is not set
+# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
+# CONFIG_DEFAULT_SECURITY_DAC is not set
+CONFIG_DEFAULT_SECURITY="selinux"
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_CRYPTO_MANAGER_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+CONFIG_CRYPTO_TEST=m
+CONFIG_CRYPTO_CRYPTODEV=y
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=m
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_ANUBIS is not set
+# CONFIG_CRYPTO_ARC4 is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_TEA is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+CONFIG_CRYPTO_LZO=y
+
+#
+# Random Number Generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_DCP=y
+# CONFIG_BINARY_PRINTF is not set
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_FIND_LAST_BIT=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=m
+CONFIG_AUDIT_GENERIC=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_DECOMPRESS_BZIP2=y
+CONFIG_DECOMPRESS_LZMA=y
+CONFIG_DECOMPRESS_LZO=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_NLATTR=y
+CONFIG_GENERIC_ATOMIC64=y
diff --git a/arch/arm/mach-mx28/clock.c b/arch/arm/mach-mx28/clock.c
index b37ea29..bf0de97 100644
--- a/arch/arm/mach-mx28/clock.c
+++ b/arch/arm/mach-mx28/clock.c
@@ -88,7 +88,7 @@ static void mx28_set_hbus_autoslow_flags(u16 mask)
 	__raw_writel(reg, CLKCTRL_BASE_ADDR + HW_CLKCTRL_HBUS);
 }
 
-static int mx28_raw_enable(struct clk *clk)
+static int mx28_raw_set_ena(struct clk *clk)
 {
 	unsigned int reg;
 	if (clk->enable_reg) {
@@ -99,9 +99,15 @@ static int mx28_raw_enable(struct clk *clk)
 	return 0;
 }
 
-static void mx28_raw_disable(struct clk *clk)
+static void mx28_raw_set_dis(struct clk *clk)
+{
+	mx28_raw_set_ena(clk);
+}
+
+static void mx28_raw_unset_dis(struct clk *clk)
 {
 	unsigned int reg;
+
 	if (clk->enable_reg) {
 		reg = __raw_readl(clk->enable_reg);
 		reg |= clk->enable_bits;
@@ -109,6 +115,14 @@ static void mx28_raw_disable(struct clk *clk)
 	}
 }
 
+static int mx28_raw_unset_ena(struct clk *clk)
+{
+	mx28_raw_unset_dis(clk);
+
+	return 0;
+}
+
+
 static unsigned int
 mx28_get_frac_div(unsigned long root_rate, unsigned long rate, unsigned mask)
 {
@@ -746,15 +760,15 @@ static struct clk rtc_clk = {
 static struct clk flexcan_clk[] = {
 	{
 	 .parent = &ref_xtal_clk,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_FLEXCAN,
 	 .enable_bits = BM_CLKCTRL_FLEXCAN_STOP_CAN0,
 	 },
 	{
 	 .parent = &ref_xtal_clk,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_FLEXCAN,
 	 .enable_bits = BM_CLKCTRL_FLEXCAN_STOP_CAN1,
 	 },
@@ -1004,8 +1018,8 @@ static struct clk emi_clk = {
 	.set_rate = emi_set_rate,
 	.round_rate = emi_round_rate,
 	.set_parent = emi_set_parent,
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_EMI,
 	.enable_bits = BM_CLKCTRL_EMI_CLKGATE,
 	.scale_reg	= CLKCTRL_BASE_ADDR + HW_CLKCTRL_FRAC0,
@@ -1080,8 +1094,8 @@ static struct clk ssp_clk[] = {
 	{
 	 .parent = &ref_io_clk[0],
 	 .get_rate = ssp_get_rate,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP0,
 	 .enable_bits = BM_CLKCTRL_SSP0_CLKGATE,
 	 .busy_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP0,
@@ -1096,8 +1110,8 @@ static struct clk ssp_clk[] = {
 	{
 	 .parent = &ref_io_clk[0],
 	 .get_rate = ssp_get_rate,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP1,
 	 .enable_bits = BM_CLKCTRL_SSP1_CLKGATE,
 	 .busy_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP1,
@@ -1112,8 +1126,8 @@ static struct clk ssp_clk[] = {
 	{
 	 .parent = &ref_io_clk[1],
 	 .get_rate = ssp_get_rate,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP2,
 	 .enable_bits = BM_CLKCTRL_SSP2_CLKGATE,
 	 .busy_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP2,
@@ -1128,8 +1142,8 @@ static struct clk ssp_clk[] = {
 	{
 	 .parent = &ref_io_clk[1],
 	 .get_rate = ssp_get_rate,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP3,
 	 .enable_bits = BM_CLKCTRL_SSP3_CLKGATE,
 	 .busy_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SSP3,
@@ -1175,6 +1189,7 @@ static unsigned long ssp_get_rate(struct clk *clk)
 	return (clk->parent->get_rate(clk->parent) / 0x200) / div;
 }
 
+#warning TODO: revise lcdif_get_rate()
 static unsigned long lcdif_get_rate(struct clk *clk)
 {
 	long rate = clk->parent->get_rate(clk->parent);
@@ -1192,25 +1207,70 @@ static unsigned long lcdif_get_rate(struct clk *clk)
 	return rate;
 }
 
+/* Code by Conrad Conrad from community.freescale.com */
 static int lcdif_set_rate(struct clk *clk, unsigned long rate)
 {
+	int n, div, err, i;
 	int reg_val;
+	int min_err = 9999, min_err_n = 0, min_err_div = 0;
+	u32 cycle_time;
+		
+	cycle_time = 1000000 / rate;	/* in ns (rate is in KHz) */
+
+	for (n = 18; n < 36; n++) {	/* possible value (18..35) for fractional clock control divider */
+
+		/* Freq after fractional divider ffreq = 480MHz * 18 / n
+		 *
+		 * Further divide required = cycle_time_in_s / ( 1/ ffreq) =
+		 *	cycle_time_in_ns / (1000 n / (480 * 18)) =
+		 *		cycle_time * 216 / 25n
+		 *
+		 * Formula used rounds the divisor to nearest interger.
+		 */
+
+		div = ((cycle_time * 2 * 216) / (25 * n) + 1) >> 1;
+		if (div > 255)
+			continue;
+		err = div * 25 * n - cycle_time * 216;
+		if (err < 0)
+			err = -err;
+
+		if (err < min_err) {
+			min_err = err;
+			min_err_n = n;
+			min_err_div = div;
+		}
+	}
+
+	if (min_err >= 9999)
+		return -EINVAL;
+
+	/* Program ref_pix phase fractional divider */
+	reg_val = __raw_readl(CLKCTRL_BASE_ADDR + HW_CLKCTRL_FRAC1);
+	reg_val &= ~BM_CLKCTRL_FRAC1_PIXFRAC;
+	reg_val |= BF_CLKCTRL_FRAC1_PIXFRAC(min_err_n);
+	__raw_writel(reg_val, CLKCTRL_BASE_ADDR + HW_CLKCTRL_FRAC1);
+
+	/* Ungate PFD */
+	__raw_writel(BM_CLKCTRL_FRAC1_CLKGATEPIX,
+			CLKCTRL_BASE_ADDR + HW_CLKCTRL_FRAC1_CLR);
 
 	reg_val = __raw_readl(clk->scale_reg);
 	reg_val &= ~(BM_CLKCTRL_DIS_LCDIF_DIV | BM_CLKCTRL_DIS_LCDIF_CLKGATE);
-	reg_val |= (1 << BP_CLKCTRL_DIS_LCDIF_DIV) & BM_CLKCTRL_DIS_LCDIF_DIV;
+	reg_val |= (min_err_div << BP_CLKCTRL_DIS_LCDIF_DIV) & BM_CLKCTRL_DIS_LCDIF_DIV;
 	__raw_writel(reg_val, clk->scale_reg);
+
 	if (clk->busy_reg) {
-		int i;
 		for (i = 10000; i; i--)
 			if (!clk_is_busy(clk))
 				break;
-		if (!i)
+		if (i == 0)
 			return -ETIMEDOUT;
 	}
 
+	/* Switch to ref_pix source */
 	reg_val = __raw_readl(CLKCTRL_BASE_ADDR + HW_CLKCTRL_CLKSEQ);
-	reg_val |= BM_CLKCTRL_CLKSEQ_BYPASS_DIS_LCDIF;
+	reg_val &= ~BM_CLKCTRL_CLKSEQ_BYPASS_DIS_LCDIF;
 	__raw_writel(reg_val, CLKCTRL_BASE_ADDR + HW_CLKCTRL_CLKSEQ);
 
 	return 0;
@@ -1240,8 +1300,8 @@ static int lcdif_set_parent(struct clk *clk, struct clk *parent)
 
 static struct clk dis_lcdif_clk = {
 	.parent = &pll_clk[0],
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.scale_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_DIS_LCDIF,
 	.scale_bits = 0,
 	.busy_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_DIS_LCDIF,
@@ -1388,8 +1448,8 @@ static struct clk gpmi_clk = {
 	.get_rate = gpmi_get_rate,
 	.set_rate = gpmi_set_rate,
 	.round_rate = gpmi_round_rate,
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_GPMI,
 	.enable_bits = BM_CLKCTRL_GPMI_CLKGATE,
 	.bypass_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_CLKSEQ,
@@ -1397,15 +1457,15 @@ static struct clk gpmi_clk = {
 };
 
 static unsigned long saif_get_rate(struct clk *clk);
-static unsigned long saif_set_rate(struct clk *clk, unsigned int rate);
-static unsigned long saif_set_parent(struct clk *clk, struct clk *parent);
+static int saif_set_rate(struct clk *clk, unsigned long rate);
+static int saif_set_parent(struct clk *clk, struct clk *parent);
 
 static struct clk saif_clk[] = {
 	{
 	 .parent = &pll_clk[0],
 	 .get_rate = saif_get_rate,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SAIF0,
 	 .enable_bits = BM_CLKCTRL_SAIF0_CLKGATE,
 	 .scale_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SAIF0,
@@ -1420,8 +1480,8 @@ static struct clk saif_clk[] = {
 	{
 	 .parent = &pll_clk[0],
 	 .get_rate = saif_get_rate,
-	 .enable = mx28_raw_enable,
-	 .disable = mx28_raw_disable,
+	 .enable = mx28_raw_set_ena,
+	 .disable = mx28_raw_unset_dis,
 	 .enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SAIF1,
 	 .enable_bits = BM_CLKCTRL_SAIF1_CLKGATE,
 	 .scale_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SAIF1,
@@ -1452,14 +1512,14 @@ static unsigned long saif_get_rate(struct clk *clk)
 	return (clk->parent->get_rate(clk->parent) / 0x10000) * div;
 }
 
-static unsigned long saif_set_rate(struct clk *clk, unsigned int rate)
+static int saif_set_rate(struct clk *clk, unsigned long rate)
 {
 	u16 div = 0;
 	u32 clkctrl_saif;
 	u64 rates;
 	struct clk *parent = clk->parent;
 
-	pr_debug("%s: rate %d, parent rate %d\n", __func__, rate,
+	pr_debug("%s: rate %lu, parent rate %lu\n", __func__, rate,
 			clk_get_rate(parent));
 
 	if (rate > clk_get_rate(parent))
@@ -1494,7 +1554,7 @@ static unsigned long saif_set_rate(struct clk *clk, unsigned int rate)
 	return 0;
 }
 
-static unsigned long saif_set_parent(struct clk *clk, struct clk *parent)
+static int saif_set_parent(struct clk *clk, struct clk *parent)
 {
 	int ret = -EINVAL;
 	int shift = 4;
@@ -1521,17 +1581,16 @@ static int saif_mclk_enable(struct clk *clk)
 	return 0;
 }
 
-static int saif_mclk_disable(struct clk *clk)
+static void saif_mclk_disable(struct clk *clk)
 {
 	/*Check if disabled already*/
 	if (!(__raw_readl(clk->busy_reg) & clk->busy_bits))
-		return 0;
+		return;
 	 /*Disable saif to disable mclk*/
 	__raw_writel(0x0, clk->enable_reg);
 	mdelay(1);
 	__raw_writel(0x0, clk->enable_reg);
 	mdelay(1);
-	return 0;
 }
 
 static struct clk saif_mclk[] = {
@@ -1563,8 +1622,8 @@ static unsigned long pcmspdif_get_rate(struct clk *clk)
 static struct clk pcmspdif_clk = {
 	.parent = &pll_clk[0],
 	.get_rate = pcmspdif_get_rate,
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_SPDIF,
 	.enable_bits = BM_CLKCTRL_SPDIF_CLKGATE,
 };
@@ -1572,8 +1631,8 @@ static struct clk pcmspdif_clk = {
 /* usb_clk for usb0 */
 static struct clk usb_clk0 = {
 	.parent = &pll_clk[0],
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.enable_reg = DIGCTRL_BASE_ADDR + HW_DIGCTL_CTRL,
 	.enable_bits = BM_DIGCTL_CTRL_USB0_CLKGATE,
 	.flags = CPU_FREQ_TRIG_UPDATE,
@@ -1582,8 +1641,8 @@ static struct clk usb_clk0 = {
 /* usb_clk for usb1 */
 static struct clk usb_clk1 = {
 	.parent = &pll_clk[1],
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.enable_reg = DIGCTRL_BASE_ADDR + HW_DIGCTL_CTRL,
 	.enable_bits = BM_DIGCTL_CTRL_USB1_CLKGATE,
 	.flags = CPU_FREQ_TRIG_UPDATE,
@@ -1592,8 +1651,8 @@ static struct clk usb_clk1 = {
 /* usb phy clock for usb0 */
 static struct clk usb_phy_clk0 = {
 	.parent = &pll_clk[0],
-	.enable = mx28_raw_disable, /* EN_USB_CLKS = 1 means ON */
-	.disable = mx28_raw_enable,
+	.enable = mx28_raw_unset_ena, /* EN_USB_CLKS = 1 means ON */
+	.disable = mx28_raw_set_dis,
 	.enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_PLL0CTRL0_SET,
 	.enable_bits = BM_CLKCTRL_PLL0CTRL0_EN_USB_CLKS,
 	.flags = CPU_FREQ_TRIG_UPDATE,
@@ -1602,8 +1661,8 @@ static struct clk usb_phy_clk0 = {
 /* usb phy clock for usb1 */
 static struct clk usb_phy_clk1 = {
 	.parent = &pll_clk[1],
-	.enable = mx28_raw_disable,
-	.disable = mx28_raw_enable,
+	.enable = mx28_raw_unset_ena,
+	.disable = mx28_raw_set_dis,
 	.enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_PLL1CTRL0_SET,
 	.enable_bits = BM_CLKCTRL_PLL0CTRL0_EN_USB_CLKS,
 	.flags = CPU_FREQ_TRIG_UPDATE,
@@ -1611,8 +1670,8 @@ static struct clk usb_phy_clk1 = {
 
 static struct clk enet_out_clk = {
 	.parent = &pll_clk[2],
-	.enable = mx28_raw_enable,
-	.disable = mx28_raw_disable,
+	.enable = mx28_raw_set_ena,
+	.disable = mx28_raw_unset_dis,
 	.enable_reg = CLKCTRL_BASE_ADDR + HW_CLKCTRL_ENET,
 	.enable_bits = BM_CLKCTRL_ENET_DISABLE,
 };
diff --git a/arch/arm/mach-mx28/device.c b/arch/arm/mach-mx28/device.c
index b05a746..9484a12 100644
--- a/arch/arm/mach-mx28/device.c
+++ b/arch/arm/mach-mx28/device.c
@@ -434,11 +434,19 @@ static int mxs_mmc_get_wp_ssp0(void)
 	return 0; // TionPro28 has no WP pin
 }
 
+#if 1
+static int mxs_mmc_hw_init_ssp0(void)
+{
+	/* no WP pin and POWER pin in TionPro28	*/
+	return 0;
+}
+
+#else
+
 static int mxs_mmc_hw_init_ssp0(void)
 {
 	int ret = 0;
 
-#if 0 // no WP pin and POWER pin in TionPro28	
 	/* Configure write protect GPIO pin */
 	ret = gpio_request(MMC0_WP, "mmc0_wp");
 	if (ret)
@@ -461,17 +469,17 @@ static int mxs_mmc_hw_init_ssp0(void)
 out_power:
 	gpio_free(MMC0_WP);
 out_wp:
-#endif
 	return ret;
 }
+#endif
 
 static void mxs_mmc_hw_release_ssp0(void)
 {
-#if 0 // no WP pin and POWER pin in TionPro28
+#if 0
+	/* no WP pin and POWER pin in TionPro28 */
 	gpio_free(MMC0_POWER);
 	gpio_free(MMC0_WP);
 #endif
-
 }
 
 static void mxs_mmc_cmd_pullup_ssp0(int enable)
@@ -498,15 +506,23 @@ static unsigned long mxs_mmc_setclock_ssp0(unsigned long hz)
 
 static int mxs_mmc_get_wp_ssp1(void)
 {
-	return 0;//gpio_get_value(MMC1_WP);
+	return 0;
 }
 
+#if 1
+static int mxs_mmc_hw_init_ssp1(void)
+{
+	return 0;
+}
+
+#else
+
 static int mxs_mmc_hw_init_ssp1(void)
 {
 	int ret = 0;
 
 	/* Configure write protect GPIO pin */
-/*	ret = gpio_request(MMC1_WP, "mmc1_wp");
+	ret = gpio_request(MMC1_WP, "mmc1_wp");
 	if (ret)
 		goto out_wp;
 
@@ -514,25 +530,28 @@ static int mxs_mmc_hw_init_ssp1(void)
 	gpio_direction_input(MMC1_WP);
 
 	/* Configure POWER pin as gpio to drive power to MMC slot */
-/*	ret = gpio_request(MMC1_POWER, "mmc1_power");
+	ret = gpio_request(MMC1_POWER, "mmc1_power");
 	if (ret)
 		goto out_power;
 
 	gpio_direction_output(MMC1_POWER, 0);
-	mdelay(100);*/
+	mdelay(100);
 
 	return 0;
 
 out_power:
-	//gpio_free(MMC1_WP);
+	gpio_free(MMC1_WP);
 out_wp:
 	return ret;
 }
+#endif
 
 static void mxs_mmc_hw_release_ssp1(void)
 {
-	//gpio_free(MMC1_POWER);
-	//gpio_free(MMC1_WP);
+#if 0
+	gpio_free(MMC1_POWER);
+	gpio_free(MMC1_WP);
+#endif
 }
 
 static void mxs_mmc_cmd_pullup_ssp1(int enable)
@@ -651,7 +670,8 @@ static void __init mx28_init_mmc(void)
 		mxs_add_device(pdev, 2);
 	}
 
-/*	if (mxs_get_type(PINID_GPMI_RDY1) == PIN_FUN2) {
+#if 0
+	if (mxs_get_type(PINID_GPMI_RDY1) == PIN_FUN2) {
 		pdev = mxs_get_device("mxs-mmc", 1);
 		if (pdev == NULL || IS_ERR(pdev))
 			return;
@@ -659,7 +679,8 @@ static void __init mx28_init_mmc(void)
 		pdev->num_resources = ARRAY_SIZE(mmc1_resource);
 		pdev->dev.platform_data = &mmc1_data;
 		mxs_add_device(pdev, 2);
-	}*/
+	}
+#endif
 }
 #else
 static void mx28_init_mmc(void)
diff --git a/arch/arm/mach-mx28/emi_settings.c b/arch/arm/mach-mx28/emi_settings.c
index 918e39d..8771c2f 100644
--- a/arch/arm/mach-mx28/emi_settings.c
+++ b/arch/arm/mach-mx28/emi_settings.c
@@ -40,7 +40,7 @@ unsigned int *get_current_emidata()
 	return DRAM_REG;
 }
 
-void test_emi_change()
+void test_emi_change(void)
 {
 	struct mxs_emi_scaling_data emi;
 	void (*f) (struct mxs_emi_scaling_data *, unsigned int *);
diff --git a/arch/arm/mach-mx28/emi_settings.h b/arch/arm/mach-mx28/emi_settings.h
index d22261f..8ef17b2 100644
--- a/arch/arm/mach-mx28/emi_settings.h
+++ b/arch/arm/mach-mx28/emi_settings.h
@@ -27,14 +27,14 @@
 #define SCALING_DATA_NEW_FREQ_OFFSET    12
 
 #ifndef __ASSEMBLER__
-void mxs_ram_freq_scale_end();
+void mxs_ram_freq_scale_end(void);
 void DDR2EmiController_EDE1116_133MHz(void);
 void DDR2EmiController_EDE1116_166MHz(void);
 void DDR2EmiController_EDE1116_200MHz(void);
 void mDDREmiController_24MHz(void);
 void mDDREmiController_133MHz(void);
 void mDDREmiController_200MHz(void);
-unsigned int *get_current_emidata();
+unsigned int *get_current_emidata(void);
 #endif
 
 #endif
diff --git a/arch/arm/mach-mx28/mx28evk.c b/arch/arm/mach-mx28/mx28evk.c
index 47bd17b..d455a4d 100644
--- a/arch/arm/mach-mx28/mx28evk.c
+++ b/arch/arm/mach-mx28/mx28evk.c
@@ -83,14 +83,10 @@ static void __init fixup_board(struct machine_desc *desc, struct tag *tags,
 }
 
 #if defined(CONFIG_LEDS_MXS) || defined(CONFIG_LEDS_MXS_MODULE)
-static struct mxs_pwm_led  mx28evk_led_pwm[2] = {
+static struct mxs_pwm_led  mx28evk_led_pwm[1] = {
 	[0] = {
-		.name = "led-pwm0",
-		.pwm = 0,
-		},
-	[1] = {
-		.name = "led-pwm1",
-		.pwm = 1,
+		.name = "led-pwm4",
+		.pwm = 4,
 		},
 };
 
@@ -119,9 +115,32 @@ static void __init mx28evk_init_leds(void)
 	mxs_add_device(pdev, 3);
 }
 #else
+
+static struct gpio_led tion_pro28_leds[] = {
+	{
+		.name		 = "led:green:1",
+		.default_trigger = "heartbeat",
+		.gpio		 = MXS_PIN_TO_GPIO(MXS_PIN_ENCODE(3, 29)),
+		.active_low	 = 1,
+	},
+};
+
+static struct gpio_led_platform_data tion_pro28_leds_info = {
+	.leds		= tion_pro28_leds,
+	.num_leds	= ARRAY_SIZE(tion_pro28_leds),
+};
+
+static struct platform_device tion_pro28_leds_device = {
+	.name		= "leds-gpio",
+	.id		= -1,
+	.dev		= {
+		.platform_data	= &tion_pro28_leds_info,
+	},
+};
+
 static void __init mx28evk_init_leds(void)
 {
-	;
+	platform_device_register(&tion_pro28_leds_device);
 }
 #endif
 
diff --git a/arch/arm/mach-mx28/mx28evk_pins.c b/arch/arm/mach-mx28/mx28evk_pins.c
index 39a6232..792b8d3 100644
--- a/arch/arm/mach-mx28/mx28evk_pins.c
+++ b/arch/arm/mach-mx28/mx28evk_pins.c
@@ -86,7 +86,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP1_SCK,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -95,7 +95,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP1_CMD,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -104,7 +104,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP1_DATA0,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -113,7 +113,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP1_DATA3,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -144,7 +144,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP0_DATA4,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -153,7 +153,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP0_DATA5,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -162,7 +162,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP0_DATA6,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -171,7 +171,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id	= PINID_SSP0_DATA7,
 	 .fun	= PIN_GPIO,
 	 .strength	= PAD_4MA,
-	 .voltage	= PAD_3_3V,	 
+	 .voltage	= PAD_3_3V,
 	 .data		= 1,
 	 .output	= 1,
 	 },
@@ -187,7 +187,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .id    = PINID_AUART3_TX,
 	 .fun   = PIN_FUN1,
 	 },
-	/*{
+#if 0
+	{
 	 .name  = "AUART3.CTS",
 	 .id    = PINID_AUART3_CTS,
 	 .fun   = PIN_FUN1,
@@ -196,7 +197,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .name  = "AUART3.RTS",
 	 .id    = PINID_AUART3_RTS,
 	 .fun   = PIN_FUN1,
-	 },*/
+	 },
+#endif
 #endif
 	{
 	 .name = "usb0",
@@ -265,7 +267,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .drive 	= 1,
 	 .pull 		= 0,
 	 },
-	/*{
+#if 0
+	{
 	 .name	= "CAN_PWDN",
 	 .id	= PINID_SSP1_CMD,
 	 .fun	= PIN_GPIO,
@@ -276,7 +279,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .pull 		= 0,
 	 .data		= 0,
 	 .output	= 1,
-	 },*/
+	 },
+#endif
 
 #endif
 
@@ -444,7 +448,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .voltage	= PAD_3_3V,
 	 .drive	= 1,
 	 },
-	/*{
+#if 0
+	{
 	 .name  = "LCD_D18",
 	 .id	= PINID_LCD_D18,
 	 .fun	= PIN_FUN1,
@@ -491,7 +496,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .strength = PAD_8MA,
 	 .voltage	= PAD_3_3V,
 	 .drive	= 1,
-	 },*/
+	 },
 	{
 	 .name = "LCD_RESET",
 	 .id = PINID_LCD_RESET,
@@ -500,6 +505,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
 	 },
+#endif
 	{
 	 .name = "LCD_VSYNC",
 	 .id   = PINID_LCD_VSYNC,
@@ -583,7 +589,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .drive 	= 1,
 	 .pull 		= 1,
 	 },
-	/*{
+#if 0
+	{
 	 .name	= "SSP0_DATA4",
 	 .id	= PINID_SSP0_DATA4,
 	 .fun	= PIN_FUN1,
@@ -622,7 +629,8 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .pullup	= 1,
 	 .drive 	= 1,
 	 .pull 		= 1,
-	 },*/
+	 },
+#endif
 	{
 	 .name	= "SSP0_CMD",
 	 .id	= PINID_SSP0_CMD,
@@ -650,7 +658,7 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .strength	= PAD_12MA,
 	 .voltage	= PAD_3_3V,
 	 .pullup	= 0,
-	 .drive 	= 2,
+	 .drive 	= 1,
 	 .pull 		= 0,
 	 },
 #endif
@@ -666,15 +674,6 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .pull          = 1,
 	 },
 	{
-	 .name = "LEDS_PWM1",
-	 .id = PINID_PWM4,
-	 .fun           = PIN_FUN3,
-	 .strength      = PAD_8MA,
-	 .voltage       = PAD_3_3V,
-	 .pullup        = 1,
-	 .drive         = 1,
-	 .pull          = 1,
-	 },
 #endif
 #if defined(CONFIG_SND_MXS_SOC_DAI) || defined(CONFIG_SND_MXS_SOC_DAI_MODULE)
 	/* Configurations of SAIF0 port pins */
@@ -896,11 +895,11 @@ static struct pin_desc mx28evk_eth_pins[] = {
 	 .pullup = 1,
 	 .voltage = PAD_3_3V,
 	 .drive	= 1,
-	 },	
+	 },
 };
 #endif
 
-static int __initdata enable_ssp1 = { 0 };
+static int __initdata enable_ssp1 = 0;
 static int __init ssp1_setup(char *__unused)
 {
 	enable_ssp1 = 0; // no use SSP1 in TionPro28
@@ -1017,15 +1016,15 @@ static struct pin_desc mx28evk_ssp1_pins[] = {
 	 .strength	= PAD_12MA,
 	 .voltage	= PAD_3_3V,
 	 .pullup	= 0,
-	 .drive 	= 2,
+	 .drive 	= 1,
 	 .pull 		= 0,
 	 },
 };
 
 #ifdef CONFIG_MTD_NAND
-int enable_gpmi = { 1 };
+int enable_gpmi = 1;
 #else
-int enable_gpmi = { 0 };
+int enable_gpmi = 0;
 #endif
 static int __init gpmi_setup(char *__unused)
 {
@@ -1329,12 +1328,10 @@ void __init mx28evk_pins_init(void)
 
 	if (enable_ssp1) {
 		pr_info("Initializing SSP1 pins\n");
-		printk(KERN_WARNING "Initializing SSP1 pins\n");
 		mx28evk_init_pin_group(mx28evk_ssp1_pins,
 						ARRAY_SIZE(mx28evk_ssp1_pins));
 	} else if (enable_gpmi) {
 		pr_info("Initializing GPMI pins\n");
-		printk(KERN_WARNING "Initializing GPMI pins\n");
 		mx28evk_init_pin_group(mx28evk_gpmi_pins,
 						ARRAY_SIZE(mx28evk_gpmi_pins));
 	}
diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
index 29da3c7..b76ae5d 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
@@ -1661,7 +1661,7 @@ static void mil_partitions_exit(struct gpmi_nfc_data *this)
 
 		kfree(mil->ubi_partition_memory);
 
-	#endif
+#endif
 
 	/*
 	 * If we were told to register the MTD that represents the entire
diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c.rej b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c.rej
new file mode 100644
index 0000000..af2334e
--- /dev/null
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c.rej
@@ -0,0 +1,41 @@
+--- drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
++++ drivers/mtd/nand/gpmi-nfc/gpmi-nfc-mil.c
+@@ -1092,10 +1092,12 @@
+ 	struct physical_geometry  *physical = &this->physical_geometry;
+ 	struct nand_chip          *nand     = &mil->nand;
+ 	struct nand_device_info   *info     = &this->device_info;
++#if defined(DETAILED_INFO)
+ 	unsigned int              block_size_in_pages;
+ 	unsigned int              chip_size_in_blocks;
+ 	unsigned int              chip_size_in_pages;
+ 	uint64_t                  medium_size_in_bytes;
++#endif
+ 
+ 	/*
+ 	 * Record the number of physical chips that MTD found.
+@@ -1129,6 +1131,10 @@
+ 
+ 	physical->chip_size_in_bytes = info->chip_size_in_bytes;
+ 
++	/* Report. */
++
++#if defined(DETAILED_INFO)
++
+ 	/* Compute some interesting facts. */
+ 
+ 	block_size_in_pages  =
+@@ -1140,13 +1146,10 @@
+ 	chip_size_in_blocks  =
+ 			physical->chip_size_in_bytes >>
+ 				(fls(physical->block_size_in_bytes) - 1);
++
+ 	medium_size_in_bytes =
+ 			physical->chip_size_in_bytes * physical->chip_count;
+ 
+-	/* Report. */
+-
+-	#if defined(DETAILED_INFO)
+-
+ 	pr_info("-----------------\n");
+ 	pr_info("Physical Geometry\n");
+ 	pr_info("-----------------\n");
diff --git a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc.h b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc.h
index 3ba69d8..c73839f 100644
--- a/drivers/mtd/nand/gpmi-nfc/gpmi-nfc.h
+++ b/drivers/mtd/nand/gpmi-nfc/gpmi-nfc.h
@@ -58,7 +58,7 @@
 
 /* Define this macro to enable detailed information messages. */
 
-#define DETAILED_INFO
+/* #define DETAILED_INFO */
 
 /*
  *------------------------------------------------------------------------------
diff --git a/drivers/net/fec.c b/drivers/net/fec.c
index 311595a..095e2ba 100644
--- a/drivers/net/fec.c
+++ b/drivers/net/fec.c
@@ -1484,10 +1484,10 @@ fec_restart(struct net_device *dev, int duplex)
 	unsigned long reg;
 	int val;
 
-#ifdef CONFIG_ARCH_MXS
+/*#ifdef CONFIG_ARCH_MXS
 	if (pdata && pdata->init)
 		ret = pdata->init();
-#endif
+#endif*/
 
 	/* Whack a reset.  We should wait for this. */
 	writel(1, fep->hwp + FEC_ECNTRL);
diff --git a/drivers/video/mxs/lcd_tionpro28.c b/drivers/video/mxs/lcd_tionpro28.c
index add5e81..19443b10 100644
--- a/drivers/video/mxs/lcd_tionpro28.c
+++ b/drivers/video/mxs/lcd_tionpro28.c
@@ -1,62 +1,115 @@
 /*
  *   LCD panel driver
- *
- 
  */
 
 #include <linux/init.h>
 #include <linux/delay.h>
 #include <linux/clk.h>
+#include <linux/gpio.h>
 #include <linux/notifier.h>
 #include <linux/regulator/consumer.h>
 #include <linux/platform_device.h>
 
 #include <mach/device.h>
 #include <mach/lcdif.h>
+#include <mach/pinctrl.h>
 #include <mach/regs-pwm.h>
 #include <mach/system.h>
 
+struct dot_clk {
+	unsigned int is_via_dac;	/* Is via onboard DAC IC */
+	unsigned int cycle_time_ns;
+	unsigned int h_active;
+	unsigned int h_pulse_width;
+	unsigned int hf_porch;
+	unsigned int hb_porch;
+	unsigned int v_active;
+	unsigned int v_pulse_width;
+	unsigned int vf_porch;
+	unsigned int vb_porch;
+};
 
-/*//#if FALSE
-// 640x480 TFT
-#define DOTCLK_H_ACTIVE  640
-#define DOTCLK_H_PULSE_WIDTH 10
-#define DOTCLK_HF_PORCH  12
-#define DOTCLK_HB_PORCH  138
-#define DOTCLK_H_WAIT_CNT  (DOTCLK_H_PULSE_WIDTH + DOTCLK_HB_PORCH)
-#define DOTCLK_H_PERIOD (DOTCLK_H_WAIT_CNT + DOTCLK_HF_PORCH + DOTCLK_H_ACTIVE)
-
-#define DOTCLK_V_ACTIVE  480
-#define DOTCLK_V_PULSE_WIDTH  10
-#define DOTCLK_VF_PORCH  14
-#define DOTCLK_VB_PORCH  21
-#define DOTCLK_V_WAIT_CNT (DOTCLK_V_PULSE_WIDTH + DOTCLK_VB_PORCH)
-#define DOTCLK_V_PERIOD (DOTCLK_VF_PORCH + DOTCLK_V_ACTIVE + DOTCLK_V_WAIT_CNT)
-//#endif*/
-//#if TRUE
-// 640x480 VGA
-#define DOTCLK_H_ACTIVE  640
-#define DOTCLK_H_PULSE_WIDTH 96
-#define DOTCLK_HF_PORCH  16
-#define DOTCLK_HB_PORCH  48
-#define DOTCLK_H_WAIT_CNT  (DOTCLK_H_PULSE_WIDTH + DOTCLK_HB_PORCH)
-#define DOTCLK_H_PERIOD (DOTCLK_H_WAIT_CNT + DOTCLK_HF_PORCH + DOTCLK_H_ACTIVE)
-
-#define DOTCLK_V_ACTIVE  480
-#define DOTCLK_V_PULSE_WIDTH  2
-#define DOTCLK_VF_PORCH  13
-#define DOTCLK_VB_PORCH  31
-#define DOTCLK_V_WAIT_CNT (DOTCLK_V_PULSE_WIDTH + DOTCLK_VB_PORCH)
-#define DOTCLK_V_PERIOD (DOTCLK_VF_PORCH + DOTCLK_V_ACTIVE + DOTCLK_V_WAIT_CNT)
-//#endif
+static const struct dot_clk dot_clks[] = {
+/* 0 */	{	/* VGA */
+		1, 40,
+		640, 96, 16, 48,
+		480, 2, 13, 31,
+	},
+/* 1 */	{	/* TFT 5.7'' 640x480 */
+		0, 40,
+		640, 10, 12, 138,
+		480, 10, 14, 21,
+	},
+/* 2 */	{	/* TFT 3.5'' 320x240 */
+		0, 116,	/* 116 ns for 72 Hz */
+		320, 32, 32, 96,
+		240, 3, 3, 4,
+	}
+};
 
 static struct mxs_platform_bl_data bl_data;
 static struct clk *lcd_clk;
 
+static const unsigned int gpio_vga_dac_pwr_ena = MXS_PIN_TO_GPIO(MXS_PIN_ENCODE(1, 25));
+static const unsigned int gpio_lcd_pwr_ena = MXS_PIN_TO_GPIO(MXS_PIN_ENCODE(3, 30));
+
+static const unsigned int gpio_pwm = MXS_PIN_TO_GPIO(MXS_PIN_ENCODE(3, 28));
+static const int backlight_pwm_num = 3;
+
+static int is_via_dac = 0;
+
+static void pwm_set(int pwm_num, int active, int period);
+
+static const struct dot_clk *get_video_by_tag(void)
+{
+	const struct dot_clk *dot_clk;
+	const char tag_str[] = "tag=";
+	char *opt, *pos;
+
+	dot_clk = NULL;
+
+	/* Select display type from cmdline "video=mxs-fb:tag=vga" */
+	if (fb_get_options("mxs-fb", &opt) == 0
+	&& opt != NULL && *opt != '\0') {
+		pos = strstr(opt, tag_str);
+		if (pos != NULL) {
+			pos += strlen(tag_str);
+
+			if (NULL != strstr(pos, "vga")) {
+				dot_clk = dot_clks + 0;
+			} else if (NULL != strstr(pos, "3.5")) {
+				dot_clk = dot_clks + 2;
+			} else if (NULL != strstr(pos, "5.7")) {
+				dot_clk = dot_clks + 1;
+			}
+		}
+	}
+
+	return dot_clk;
+}
+
 static int init_panel(struct device *dev, dma_addr_t phys, int memsize,
 		      struct mxs_platform_fb_entry *pentry)
 {
 	int ret = 0;
+	const struct dot_clk *dot_clk;
+	unsigned int dotclk_h_wait_cnt, dotclk_h_period, dotclk_v_wait_cnt, dotclk_v_period;
+
+	gpio_request(gpio_lcd_pwr_ena, "lcd-pwr-ena");
+	gpio_direction_output(gpio_lcd_pwr_ena, 0);
+
+	gpio_request(gpio_vga_dac_pwr_ena, "vga-dac-pwr-ena");
+	gpio_direction_output(gpio_vga_dac_pwr_ena, 0);
+
+	dot_clk = get_video_by_tag();
+	if (!dot_clk) {
+		dev_warn(dev, "no panel tag specified\n");
+
+		return -ENODEV;
+	}
+
+	is_via_dac = dot_clk->is_via_dac;
+
 	lcd_clk = clk_get(dev, "dis_lcdif");
 	if (IS_ERR(lcd_clk)) {
 		ret = PTR_ERR(lcd_clk);
@@ -68,7 +121,7 @@ static int init_panel(struct device *dev, dma_addr_t phys, int memsize,
 		goto out;
 	}
 
-	ret = clk_set_rate(lcd_clk, 1000000 / pentry->cycle_time_ns);	/* kHz */
+	ret = clk_set_rate(lcd_clk, 1000000 / dot_clk->cycle_time_ns);	/* kHz */
 	if (ret) {
 		clk_disable(lcd_clk);
 		clk_put(lcd_clk);
@@ -94,25 +147,30 @@ static int init_panel(struct device *dev, dma_addr_t phys, int memsize,
 	__raw_writel(BM_LCDIF_CTRL1_RESET, REGS_LCDIF_BASE + HW_LCDIF_CTRL1_SET);	/* high */
 	mdelay(1);
 
-	setup_dotclk_panel(DOTCLK_V_PULSE_WIDTH, DOTCLK_V_PERIOD,
-			   DOTCLK_V_WAIT_CNT, DOTCLK_V_ACTIVE,
-			   DOTCLK_H_PULSE_WIDTH, DOTCLK_H_PERIOD,
-			   DOTCLK_H_WAIT_CNT, DOTCLK_H_ACTIVE, 0);
+	dotclk_h_wait_cnt = dot_clk->h_pulse_width + dot_clk->hb_porch;
+	dotclk_h_period = dotclk_h_wait_cnt + dot_clk->hf_porch + dot_clk->h_active;
+	dotclk_v_wait_cnt = dot_clk->v_pulse_width + dot_clk->vb_porch;
+	dotclk_v_period = dotclk_v_wait_cnt + dot_clk->vf_porch + dot_clk->v_active;
 
+	setup_dotclk_panel(dot_clk->v_pulse_width, dotclk_v_period,
+			dotclk_v_wait_cnt, dot_clk->v_active,
+			dot_clk->h_pulse_width, dotclk_h_period,
+			dotclk_h_wait_cnt, dot_clk->h_active, 0);
+
+#warning TODO
 	/* VSYNC & HSYNC polarity */
 	/*__raw_writel(BM_LCDIF_VDCTRL0_VSYNC_POL,
 		     REGS_LCDIF_BASE + HW_LCDIF_VDCTRL0_SET);	
 	__raw_writel(BM_LCDIF_VDCTRL0_HSYNC_POL,
 		     REGS_LCDIF_BASE + HW_LCDIF_VDCTRL0_SET);*/
 
-
-
 	ret = mxs_lcdif_dma_init(dev, phys, memsize);
 	if (ret)
 		goto out;
 
 	mxs_lcd_set_bl_pdata(pentry->bl_data);
 	mxs_lcdif_notify_clients(MXS_LCDIF_PANEL_INIT, pentry);
+
 	return 0;
 
 out:
@@ -122,6 +180,12 @@ out:
 static void release_panel(struct device *dev,
 			  struct mxs_platform_fb_entry *pentry)
 {
+	gpio_set_value(gpio_lcd_pwr_ena, 0);
+	gpio_free(gpio_lcd_pwr_ena);
+
+	gpio_set_value(gpio_vga_dac_pwr_ena, 0);
+	gpio_free(gpio_vga_dac_pwr_ena);
+
 	mxs_lcdif_notify_clients(MXS_LCDIF_PANEL_RELEASE, pentry);
 	release_dotclk_panel();
 	mxs_lcdif_dma_release();
@@ -138,6 +202,12 @@ static int blank_panel(int blank)
 	case FB_BLANK_VSYNC_SUSPEND:
 	case FB_BLANK_HSYNC_SUSPEND:
 	case FB_BLANK_POWERDOWN:
+		if (is_via_dac) {
+			gpio_set_value(gpio_vga_dac_pwr_ena, 0);
+		} else {
+			gpio_set_value(gpio_lcd_pwr_ena, 0);
+		}
+
 		__raw_writel(BM_LCDIF_CTRL_BYPASS_COUNT,
 			     REGS_LCDIF_BASE + HW_LCDIF_CTRL_CLR);
 		for (count = 10000; count; count--) {
@@ -151,6 +221,11 @@ static int blank_panel(int blank)
 	case FB_BLANK_UNBLANK:
 		__raw_writel(BM_LCDIF_CTRL_BYPASS_COUNT,
 			     REGS_LCDIF_BASE + HW_LCDIF_CTRL_SET);
+		if (is_via_dac) {
+			gpio_set_value(gpio_vga_dac_pwr_ena, 1);
+		} else {
+			gpio_set_value(gpio_lcd_pwr_ena, 1);
+		}
 		break;
 
 	default:
@@ -160,11 +235,7 @@ static int blank_panel(int blank)
 }
 
 static struct mxs_platform_fb_entry fb_entry = {
-	.name = "lcd_tionpro28",
-	.x_res = 480,
-	.y_res = 640,
-	.bpp = 16,
-	.cycle_time_ns = 40,
+	.name = "lcd_tion-pro28",
 	.lcd_type = MXS_LCD_PANEL_DOTCLK,
 	.init_panel = init_panel,
 	.release_panel = release_panel,
@@ -189,93 +260,52 @@ static int init_bl(struct mxs_platform_bl_data *data)
 	clk_enable(pwm_clk);
 	mxs_reset_block(REGS_PWM_BASE, 1);
 
-	__raw_writel(BF_PWM_ACTIVEn_INACTIVE(0) |
-		     BF_PWM_ACTIVEn_ACTIVE(0),
-		     REGS_PWM_BASE + HW_PWM_ACTIVEn(2));
-	__raw_writel(BF_PWM_PERIODn_CDIV(6) |	/* divide by 64 */
-		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* low */
-		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* high */
-		     BF_PWM_PERIODn_PERIOD(599),
-		     REGS_PWM_BASE + HW_PWM_PERIODn(2));
-	__raw_writel(BM_PWM_CTRL_PWM2_ENABLE, REGS_PWM_BASE + HW_PWM_CTRL_SET);
+
+	__raw_writel(1<<backlight_pwm_num, REGS_PWM_BASE + HW_PWM_CTRL_SET);
 
 	return 0;
 }
 
 static void free_bl(struct mxs_platform_bl_data *data)
 {
-	__raw_writel(BF_PWM_ACTIVEn_INACTIVE(0) |
-		     BF_PWM_ACTIVEn_ACTIVE(0),
-		     REGS_PWM_BASE + HW_PWM_ACTIVEn(2));
-	__raw_writel(BF_PWM_PERIODn_CDIV(6) |	/* divide by 64 */
-		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* low */
-		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* high */
-		     BF_PWM_PERIODn_PERIOD(599),
-		     REGS_PWM_BASE + HW_PWM_PERIODn(2));
-	__raw_writel(BM_PWM_CTRL_PWM2_ENABLE, REGS_PWM_BASE + HW_PWM_CTRL_CLR);
+	pwm_set(backlight_pwm_num, 0, 0);	/* Disable backlight */
+	__raw_writel(1<<backlight_pwm_num, REGS_PWM_BASE + HW_PWM_CTRL_CLR);
 
 	clk_disable(pwm_clk);
 	clk_put(pwm_clk);
 }
 
-static int values[] = { 0, 4, 9, 14, 20, 27, 35, 45, 57, 75, 100 };
-
-static int power[] = {
-	0, 1500, 3600, 6100, 10300,
-	15500, 74200, 114200, 155200,
-	190100, 191000
-};
-
-static int bl_to_power(int br)
+static void pwm_set(int pwm_num, int active, int period)
 {
-	int base;
-	int rem;
-
-	if (br > 100)
-		br = 100;
-	base = power[br / 10];
-	rem = br % 10;
-	if (!rem)
-		return base;
-	else
-		return base + (rem * (power[br / 10 + 1]) - base) / 10;
+	/* Firslty set PWM pulse width, this _must_ be done firslty */
+	__raw_writel(BF_PWM_ACTIVEn_ACTIVE(0)
+			| BF_PWM_ACTIVEn_INACTIVE(active),
+			REGS_PWM_BASE + HW_PWM_ACTIVEn(pwm_num));
+
+	/* Secondly */
+	__raw_writel(BF_PWM_PERIODn_CDIV(6) |		/* 5 -- divide 60kHz by 64 */
+		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* Inactive is low */
+		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* Active is high */
+		     BF_PWM_PERIODn_PERIOD(period),
+		     REGS_PWM_BASE + HW_PWM_PERIODn(pwm_num));
 }
 
-static int set_bl_intensity(struct mxs_platform_bl_data *data,
+static int set_bl_intensity(struct mxs_platform_bl_data *pdata,
 			    struct backlight_device *bd, int suspended)
 {
-	int intensity = bd->props.brightness;
-	int scaled_int;
+	int bright;
 
-	if (bd->props.power != FB_BLANK_UNBLANK)
-		intensity = 0;
-	if (bd->props.fb_blank != FB_BLANK_UNBLANK)
-		intensity = 0;
-	if (suspended)
-		intensity = 0;
+	bright = bd->props.brightness;
 
-	/*
-	 * This is not too cool but what can we do?
-	 * Luminance changes non-linearly...
-	 */
-	if (regulator_set_current_limit
-	    (data->regulator, bl_to_power(intensity), bl_to_power(intensity)))
-		return -EBUSY;
-
-	scaled_int = values[intensity / 10];
-	if (scaled_int < 100) {
-		int rem = intensity - 10 * (intensity / 10);	/* r = i % 10; */
-		scaled_int += rem * (values[intensity / 10 + 1] -
-				     values[intensity / 10]) / 10;
+	if (bd->props.power != FB_BLANK_UNBLANK
+	|| bd->props.fb_blank != FB_BLANK_UNBLANK
+	|| suspended
+	|| is_via_dac) {
+		bright = 0;
 	}
-	__raw_writel(BF_PWM_ACTIVEn_INACTIVE(scaled_int) |
-		     BF_PWM_ACTIVEn_ACTIVE(0),
-		     REGS_PWM_BASE + HW_PWM_ACTIVEn(2));
-	__raw_writel(BF_PWM_PERIODn_CDIV(6) |	/* divide by 64 */
-		     BF_PWM_PERIODn_INACTIVE_STATE(2) |	/* low */
-		     BF_PWM_PERIODn_ACTIVE_STATE(3) |	/* high */
-		     BF_PWM_PERIODn_PERIOD(399),
-		     REGS_PWM_BASE + HW_PWM_PERIODn(2));
+
+	pwm_set(backlight_pwm_num, bright, pdata->bl_max_intensity);
+
 	return 0;
 }
 
@@ -291,10 +321,22 @@ static struct mxs_platform_bl_data bl_data = {
 static int __init register_devices(void)
 {
 	struct platform_device *pdev;
+	const struct dot_clk *dot_clk;
+
+	dot_clk = get_video_by_tag();
+	if (!dot_clk) {
+		/* Use first entry for something to register */
+		dot_clk = dot_clks;
+	}
+
 	pdev = mxs_get_device("mxs-fb", 0);
 	if (pdev == NULL || IS_ERR(pdev))
 		return -ENODEV;
 
+	fb_entry.x_res = dot_clk->v_active;
+	fb_entry.y_res = dot_clk->h_active;
+	fb_entry.bpp = 16;
+
 	mxs_lcd_register_entry(&fb_entry, pdev->dev.platform_data);
 
 	return 0;
diff --git a/drivers/video/mxs/mxsfb.c b/drivers/video/mxs/mxsfb.c
index ea70ea2..bbbba91 100644
--- a/drivers/video/mxs/mxsfb.c
+++ b/drivers/video/mxs/mxsfb.c
@@ -44,9 +44,6 @@
 
 #define NUM_SCREENS	1
 
-#undef pr_debug
-#define pr_debug pr_warning
-
 enum {
 	F_DISABLE = 0,
 	F_ENABLE,
diff --git a/sound/soc/mxs/mxs-dai.c b/sound/soc/mxs/mxs-dai.c
index 42e5a5c..cdfcb6b 100644
--- a/sound/soc/mxs/mxs-dai.c
+++ b/sound/soc/mxs/mxs-dai.c
@@ -209,7 +209,6 @@ static int mxs_saif_set_dai_sysclk(struct snd_soc_dai *cpu_dai,
 				  int clk_id, unsigned int freq, int dir)
 {
 	struct clk *saif_clk;
-	u32 scr;
 	struct mxs_saif *saif_select = (struct mxs_saif *)cpu_dai->private_data;
 
 	switch (clk_id) {
-- 
1.9.1


From a976f272a06f89cee5debcca56185c89255718bd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Fri, 22 Aug 2014 15:47:55 +0400
Subject: [PATCH 04/14] =?UTF-8?q?=D0=9F=D1=80=D0=B8=D0=BC=D0=B5=D0=BD?=
 =?UTF-8?q?=D0=B8=D0=BB=20=D0=BF=D0=B0=D1=82=D1=87=20tion=5Fpro28=5Fsvn284?=
 =?UTF-8?q?0-2909?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/mach-mx28/mx28evk.c      | 68 +++++++++++++++++++++++++++++++++++++++
 arch/arm/mach-mx28/mx28evk_pins.c |  1 -
 drivers/i2c/busses/i2c-mxs.c      |  2 +-
 drivers/power/mxs/linux.c         |  3 +-
 drivers/video/mxs/lcd_tionpro28.c | 31 ++++++++++--------
 5 files changed, 89 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-mx28/mx28evk.c b/arch/arm/mach-mx28/mx28evk.c
index d455a4d..17b3fa3 100644
--- a/arch/arm/mach-mx28/mx28evk.c
+++ b/arch/arm/mach-mx28/mx28evk.c
@@ -38,9 +38,76 @@
 #include <linux/mtd/partitions.h>
 #include <linux/mtd/physmap.h>
 
+#include <linux/usb/g_hid.h>
+
 #include "device.h"
 #include "mx28evk.h"
 
+
+
+/* hid descriptor for a keyboard */
+static struct hidg_func_descriptor my_hid_data = {
+	.subclass       = 0, /* No subclass */
+	.protocol       = 1, /* Keyboard */
+	.report_length      = 8,
+	.report_desc_length = 63,
+	.report_desc        = {
+    0x05, 0x01, /* USAGE_PAGE (Generic Desktop)           */
+    0x09, 0x06, /* USAGE (Keyboard)                       */
+    0xa1, 0x01, /* COLLECTION (Application)               */
+    0x05, 0x07, /*   USAGE_PAGE (Keyboard)                */
+    0x19, 0xe0, /*   USAGE_MINIMUM (Keyboard LeftControl) */
+    0x29, 0xe7, /*   USAGE_MAXIMUM (Keyboard Right GUI)   */
+    0x15, 0x00, /*   LOGICAL_MINIMUM (0)                  */
+    0x25, 0x01, /*   LOGICAL_MAXIMUM (1)                  */
+    0x75, 0x01, /*   REPORT_SIZE (1)                      */
+    0x95, 0x08, /*   REPORT_COUNT (8)                     */
+    0x81, 0x02, /*   INPUT (Data,Var,Abs)                 */
+    0x95, 0x01, /*   REPORT_COUNT (1)                     */
+    0x75, 0x08, /*   REPORT_SIZE (8)                      */
+    0x81, 0x03, /*   INPUT (Cnst,Var,Abs)                 */
+    0x95, 0x05, /*   REPORT_COUNT (5)                     */
+    0x75, 0x01, /*   REPORT_SIZE (1)                      */
+    0x05, 0x08, /*   USAGE_PAGE (LEDs)                    */
+    0x19, 0x01, /*   USAGE_MINIMUM (Num Lock)             */
+    0x29, 0x05, /*   USAGE_MAXIMUM (Kana)                 */
+    0x91, 0x02, /*   OUTPUT (Data,Var,Abs)                */
+    0x95, 0x01, /*   REPORT_COUNT (1)                     */
+    0x75, 0x03, /*   REPORT_SIZE (3)                      */
+    0x91, 0x03, /*   OUTPUT (Cnst,Var,Abs)                */
+    0x95, 0x06, /*   REPORT_COUNT (6)                     */
+    0x75, 0x08, /*   REPORT_SIZE (8)                      */
+    0x15, 0x00, /*   LOGICAL_MINIMUM (0)                  */
+    0x25, 0x65, /*   LOGICAL_MAXIMUM (101)                */
+    0x05, 0x07, /*   USAGE_PAGE (Keyboard)                */
+    0x19, 0x00, /*   USAGE_MINIMUM (Reserved)             */
+    0x29, 0x65, /*   USAGE_MAXIMUM (Keyboard Application) */
+    0x81, 0x00, /*   INPUT (Data,Ary,Abs)                 */
+    0xc0        /* END_COLLECTION                         */
+	}
+};
+
+static struct platform_device my_hid = {
+	.name           = "hidg",
+	.id         = 0,
+	.num_resources      = 0,
+	.resource       = 0,
+	.dev = {
+	.platform_data  = &my_hid_data,
+	}, 
+};
+
+static void __init hidg_device_init(void)
+{
+	int ret;
+
+	ret = platform_device_register(&my_hid);
+
+	if (ret)
+    	printk("HID Gadget registration failed\n");
+
+} 
+
 static struct i2c_board_info __initdata mxs_i2c_device[] = {	
 	{ I2C_BOARD_INFO("sgtl5000-i2c", 0xa), .flags = I2C_M_TEN },
 	{ I2C_BOARD_INFO("m41t00", 0x68), }
@@ -150,6 +217,7 @@ static void __init mx28evk_device_init(void)
 	i2c_device_init();
 	spi_device_init();
 	mx28evk_init_leds();
+	hidg_device_init();
 }
 
 static void __init mx28evk_init_machine(void)
diff --git a/arch/arm/mach-mx28/mx28evk_pins.c b/arch/arm/mach-mx28/mx28evk_pins.c
index 792b8d3..d0943610 100644
--- a/arch/arm/mach-mx28/mx28evk_pins.c
+++ b/arch/arm/mach-mx28/mx28evk_pins.c
@@ -673,7 +673,6 @@ static struct pin_desc mx28evk_fixed_pins[] = {
 	 .drive         = 1,
 	 .pull          = 1,
 	 },
-	{
 #endif
 #if defined(CONFIG_SND_MXS_SOC_DAI) || defined(CONFIG_SND_MXS_SOC_DAI_MODULE)
 	/* Configurations of SAIF0 port pins */
diff --git a/drivers/i2c/busses/i2c-mxs.c b/drivers/i2c/busses/i2c-mxs.c
index a581eef..33de0c9 100644
--- a/drivers/i2c/busses/i2c-mxs.c
+++ b/drivers/i2c/busses/i2c-mxs.c
@@ -74,7 +74,7 @@ static void hw_i2c_dmachan_reset(struct mxs_i2c_dev *dev)
 	mxs_dma_ack_irq(dev->dma_chan);
 }
 
-static mxs_i2c_reset(struct mxs_i2c_dev *mxs_i2c)
+static void mxs_i2c_reset(struct mxs_i2c_dev *mxs_i2c)
 {
 	hw_i2c_dmachan_reset(mxs_i2c);
 	mxs_dma_enable_irq(mxs_i2c->dma_chan, 1);
diff --git a/drivers/power/mxs/linux.c b/drivers/power/mxs/linux.c
index 839393b..43c7a02 100644
--- a/drivers/power/mxs/linux.c
+++ b/drivers/power/mxs/linux.c
@@ -1219,13 +1219,14 @@ static struct fiq_handler power_fiq = {
 static struct pt_regs fiq_regs;
 extern char power_fiq_start[], power_fiq_end[];
 extern void lock_vector_tlb(void *);
-extern long power_fiq_count;
 static struct proc_dir_entry *power_fiq_proc;
 #endif
 
 static int __init mxs_bat_init(void)
 {
+#ifdef CONFIG_MXS_VBUS_CURRENT_DRAW
 	struct clk *cpu, *pll0;
+#endif
 	int ret;
     int no_battery = false;
 
diff --git a/drivers/video/mxs/lcd_tionpro28.c b/drivers/video/mxs/lcd_tionpro28.c
index 19443b10..f70a365 100644
--- a/drivers/video/mxs/lcd_tionpro28.c
+++ b/drivers/video/mxs/lcd_tionpro28.c
@@ -17,7 +17,8 @@
 #include <mach/system.h>
 
 struct dot_clk {
-	unsigned int is_via_dac;	/* Is via onboard DAC IC */
+	unsigned int dac_power_en;	/* power for onboard DAC IC */
+	unsigned int lcd_power_en;	/* power for lcd */
 	unsigned int cycle_time_ns;
 	unsigned int h_active;
 	unsigned int h_pulse_width;
@@ -31,17 +32,17 @@ struct dot_clk {
 
 static const struct dot_clk dot_clks[] = {
 /* 0 */	{	/* VGA */
-		1, 40,
+		1, 0, 40,
 		640, 96, 16, 48,
 		480, 2, 13, 31,
 	},
 /* 1 */	{	/* TFT 5.7'' 640x480 */
-		0, 40,
+		1, 1, 40,
 		640, 10, 12, 138,
 		480, 10, 14, 21,
 	},
 /* 2 */	{	/* TFT 3.5'' 320x240 */
-		0, 116,	/* 116 ns for 72 Hz */
+		1, 1, 116,	/* 116 ns for 72 Hz */
 		320, 32, 32, 96,
 		240, 3, 3, 4,
 	}
@@ -56,7 +57,8 @@ static const unsigned int gpio_lcd_pwr_ena = MXS_PIN_TO_GPIO(MXS_PIN_ENCODE(3, 3
 static const unsigned int gpio_pwm = MXS_PIN_TO_GPIO(MXS_PIN_ENCODE(3, 28));
 static const int backlight_pwm_num = 3;
 
-static int is_via_dac = 0;
+static int dac_power_en = 0;
+static int lcd_power_en = 0;
 
 static void pwm_set(int pwm_num, int active, int period);
 
@@ -66,7 +68,7 @@ static const struct dot_clk *get_video_by_tag(void)
 	const char tag_str[] = "tag=";
 	char *opt, *pos;
 
-	dot_clk = NULL;
+	dot_clk = dot_clks + 1; //default setting
 
 	/* Select display type from cmdline "video=mxs-fb:tag=vga" */
 	if (fb_get_options("mxs-fb", &opt) == 0
@@ -108,7 +110,9 @@ static int init_panel(struct device *dev, dma_addr_t phys, int memsize,
 		return -ENODEV;
 	}
 
-	is_via_dac = dot_clk->is_via_dac;
+	dac_power_en = dot_clk->dac_power_en;
+	lcd_power_en = dot_clk->lcd_power_en;
+	
 
 	lcd_clk = clk_get(dev, "dis_lcdif");
 	if (IS_ERR(lcd_clk)) {
@@ -202,9 +206,10 @@ static int blank_panel(int blank)
 	case FB_BLANK_VSYNC_SUSPEND:
 	case FB_BLANK_HSYNC_SUSPEND:
 	case FB_BLANK_POWERDOWN:
-		if (is_via_dac) {
+		if (dac_power_en) {
 			gpio_set_value(gpio_vga_dac_pwr_ena, 0);
-		} else {
+		}
+		if (lcd_power_en){
 			gpio_set_value(gpio_lcd_pwr_ena, 0);
 		}
 
@@ -221,9 +226,10 @@ static int blank_panel(int blank)
 	case FB_BLANK_UNBLANK:
 		__raw_writel(BM_LCDIF_CTRL_BYPASS_COUNT,
 			     REGS_LCDIF_BASE + HW_LCDIF_CTRL_SET);
-		if (is_via_dac) {
+		if (dac_power_en) {
 			gpio_set_value(gpio_vga_dac_pwr_ena, 1);
-		} else {
+		}
+		if (lcd_power_en){
 			gpio_set_value(gpio_lcd_pwr_ena, 1);
 		}
 		break;
@@ -299,8 +305,7 @@ static int set_bl_intensity(struct mxs_platform_bl_data *pdata,
 
 	if (bd->props.power != FB_BLANK_UNBLANK
 	|| bd->props.fb_blank != FB_BLANK_UNBLANK
-	|| suspended
-	|| is_via_dac) {
+	|| suspended) {
 		bright = 0;
 	}
 
-- 
1.9.1


From 09b47ef60da1f50aca344d1abf6128ee5fb1489c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Fri, 22 Aug 2014 17:12:22 +0400
Subject: [PATCH 05/14] =?UTF-8?q?=D0=A3=D0=B1=D1=80=D0=B0=D0=BB=202-=D0=BE?=
 =?UTF-8?q?=D0=B5=20=D0=BF=D1=80=D0=B8=D0=BC=D0=B8=D0=BD=D0=B5=D0=BD=D0=B8?=
 =?UTF-8?q?=D0=B5=20=D0=BF=D0=B0=D1=82=D1=87=D0=B5=D0=B9=20=D0=BE=D1=82=20?=
 =?UTF-8?q?tion=5Fpro28=5Fsvn2203-2461.patch?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/mach-mx28/device.c |  44 -----
 arch/arm/mach-mx28/pm.c     |  13 --
 arch/arm/mach-mx28/sleep.S  |  20 ---
 drivers/misc/mxs-perfmon.c  | 395 --------------------------------------------
 include/linux/fsl_devices.h |  11 --
 5 files changed, 483 deletions(-)

diff --git a/arch/arm/mach-mx28/device.c b/arch/arm/mach-mx28/device.c
index 9484a12..6a1474d 100644
--- a/arch/arm/mach-mx28/device.c
+++ b/arch/arm/mach-mx28/device.c
@@ -1580,50 +1580,6 @@ static void mx28_init_persistent()
 }
 #endif
 
-#if defined(CONFIG_MXS_PERFMON)
-
-static struct mxs_perfmon_bit_config
-mx28_perfmon_bit_config[] = {
-	{.field = (1 << 0),	.name = "MID0-PXP" },
-	{.field = (1 << 1),	.name = "MID1-LCDIF" },
-	{.field = (1 << 2),	.name = "MID2-BCH" },
-	{.field = (1 << 3),	.name = "MID3-DCP" }
-};
-
-static struct mxs_platform_perfmon_data mx28_perfmon_data = {
-	.bit_config_tab = mx28_perfmon_bit_config,
-	.bit_config_cnt = ARRAY_SIZE(mx28_perfmon_bit_config),
-};
-
-static struct resource mx28_perfmon_res[] = {
-	{
-	 .flags = IORESOURCE_MEM,
-	 .start = PERFMON_PHYS_ADDR,
-	 .end   = PERFMON_PHYS_ADDR + 0x1000 - 1,
-    },
-};
-
-static void mx28_init_perfmon(void)
-{
-	struct platform_device *pdev;
-
-	pdev = mxs_get_device("mxs-perfmon", 0);
-	if (pdev == NULL || IS_ERR(pdev))
-		return;
-	pdev->dev.platform_data = &mx28_perfmon_data;
-	pdev->resource = mx28_perfmon_res,
-	pdev->num_resources = ARRAY_SIZE(mx28_perfmon_res),
-	mxs_add_device(pdev, 3);
-}
-
-#else
-
-static void mx28_init_perfmon()
-{
-}
-
-#endif
-
 
 #if defined(CONFIG_MXS_PERFMON)
 
diff --git a/arch/arm/mach-mx28/pm.c b/arch/arm/mach-mx28/pm.c
index c7d885c..dfd6539 100644
--- a/arch/arm/mach-mx28/pm.c
+++ b/arch/arm/mach-mx28/pm.c
@@ -447,19 +447,6 @@ static void mx28_pm_recover(void)
 		REGS_POWER_BASE + HW_POWER_CTRL_SET);
 }
 
-static void mx28_pm_recover(void)
-{
-	/*
-	 * The PSWITCH interrupt is enabled at do_standby, if the deivce
-	 * suspend failed, the enable operation will not be executed, in that
-	 * case, the POWER key will not be active again.
-	 */
-	__raw_writel(BM_POWER_CTRL_PSWITCH_IRQ,
-		REGS_POWER_BASE + HW_POWER_CTRL_CLR);
-	__raw_writel(BM_POWER_CTRL_ENIRQ_PSWITCH,
-		REGS_POWER_BASE + HW_POWER_CTRL_SET);
-}
-
 static void mx28_pm_end(void)
 {
 	if (saved_state == PM_SUSPEND_MEM) {
diff --git a/arch/arm/mach-mx28/sleep.S b/arch/arm/mach-mx28/sleep.S
index 67b36fb..08039bf 100644
--- a/arch/arm/mach-mx28/sleep.S
+++ b/arch/arm/mach-mx28/sleep.S
@@ -160,10 +160,6 @@ ENTRY(mx28_cpu_standby)
 __mx28_temp_stack:
 	.space	128
 
-	.space	0x100
-__mx28_temp_stack:
-	.space	128
-
 	adr	r9, __mx28_temp_stack
 
 	@ clean cache
@@ -310,15 +306,6 @@ __mx28_temp_stack:
 	mov r1, #(0x1F)
 	str r1, [r0, #4]
 
-	@ div hbus to lowest
-	mov r0, #(HW_CLKCTRL_HBUS_ADDR & 0x000000FF)
-	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x0000FF00)
-	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x00FF0000)
-	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0xFF000000)
-	ldr r3, [r0]
-	mov r1, #(0x1F)
-	str r1, [r0, #4]
-
 	@ do enter standby
 	mov	r0, #(HW_CLKCTRL_CPU_ADDR & 0x000000FF)
 	orr	r0, r0, #(HW_CLKCTRL_CPU_ADDR & 0x0000FF00)
@@ -345,13 +332,6 @@ __mx28_temp_stack:
 	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0xFF000000)
 	str r3, [r0]
 
-	@ restore hbus
-	mov r0, #(HW_CLKCTRL_HBUS_ADDR & 0x000000FF)
-	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x0000FF00)
-	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0x00FF0000)
-	orr r0, r0, #(HW_CLKCTRL_HBUS_ADDR & 0xFF000000)
-	str r3, [r0]
-
 	mov	r2, #(HW_POWER_STS_ADDR & 0x000000FF)
 	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x0000FF00)
 	orr	r2, r2, #(HW_POWER_STS_ADDR & 0x00FF0000)
diff --git a/drivers/misc/mxs-perfmon.c b/drivers/misc/mxs-perfmon.c
index cece3af..51228ec 100644
--- a/drivers/misc/mxs-perfmon.c
+++ b/drivers/misc/mxs-perfmon.c
@@ -393,398 +393,3 @@ MODULE_LICENSE("GPL");
 
 module_init(mxs_perfmon_init);
 module_exit(mxs_perfmon_exit);
-/*
- * Copyright (C) 2011 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
-
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
-
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
- */
-
-#include <linux/slab.h>
-#include <linux/module.h>
-#include <linux/kernel.h>
-#include <linux/errno.h>
-#include <linux/sysdev.h>
-#include <linux/bitops.h>
-#include <linux/platform_device.h>
-#include <linux/sysfs.h>
-#include <linux/io.h>
-#include <mach/hardware.h>
-#include <asm/irq.h>
-#include <linux/fsl_devices.h>
-#include <mach/system.h>
-#include "regs-perfmon.h"
-
-#define MONITOR		 "Monitor"
-
-struct mxs_perfmon_cmd_config {
-	int field;
-	int val;
-	const char *cmd;
-};
-
-static struct mxs_perfmon_cmd_config
-common_perfmon_cmd_config[] = {
-	{.val = 1,	.cmd = "start",	.field = BM_PERFMON_CTRL_RUN },
-	{.val = 0,	.cmd = "stop",	.field = BM_PERFMON_CTRL_RUN },
-	{.val = 1,	.cmd = "fetch",	.field = BM_PERFMON_CTRL_SNAP },
-	{.val = 1,	.cmd = "clear",	.field = BM_PERFMON_CTRL_CLR },
-	{.val = 1,	.cmd = "read",	.field = BM_PERFMON_CTRL_READ_EN },
-	{.val = 0,	.cmd = "write",	.field = BM_PERFMON_CTRL_READ_EN }
-};
-
-static struct mxs_perfmon_bit_config
-common_perfmon_bit_config[] = {
-	{.reg = HW_PERFMON_CTRL,		.name = MONITOR,
-	.field = ~0 },
-	{.reg = HW_PERFMON_CTRL,		.name = "Trap-En",
-	.field = BM_PERFMON_CTRL_TRAP_ENABLE },
-	{.reg = HW_PERFMON_CTRL,		.name = "Trap-In-Range",
-	.field = BM_PERFMON_CTRL_TRAP_IN_RANGE },
-	{.reg = HW_PERFMON_CTRL,		.name = "Latency-En",
-	.field = BM_PERFMON_CTRL_LATENCY_ENABLE },
-	{.reg = HW_PERFMON_CTRL,		.name = "Trap-IRQ",
-	.field = BM_PERFMON_CTRL_TRAP_IRQ },
-	{.reg = HW_PERFMON_CTRL,		.name = "Latency-IRQ",
-	.field = BM_PERFMON_CTRL_LATENCY_IRQ },
-	{.reg = HW_PERFMON_TRAP_ADDR_LOW,	.name = "Trap-Low",
-	.field = BM_PERFMON_TRAP_ADDR_LOW_ADDR },
-	{.reg = HW_PERFMON_TRAP_ADDR_HIGH,	.name = "Trap-High",
-	.field = BM_PERFMON_TRAP_ADDR_HIGH_ADDR },
-	{.reg = HW_PERFMON_LAT_THRESHOLD,	.name = "Latency-Threshold",
-	.field = BM_PERFMON_LAT_THRESHOLD_VALUE },
-	{.reg = HW_PERFMON_ACTIVE_CYCLE,	.name = "Active-Cycle",
-	.field = BM_PERFMON_ACTIVE_CYCLE_COUNT },
-	{.reg = HW_PERFMON_TRANSFER_COUNT,	.name = "Transfer-count",
-	.field = BM_PERFMON_TRANSFER_COUNT_VALUE },
-	{.reg = HW_PERFMON_TOTAL_LATENCY,	.name = "Latency-count",
-	.field = BM_PERFMON_TOTAL_LATENCY_COUNT },
-	{.reg = HW_PERFMON_DATA_COUNT,		.name = "Data-count",
-	.field = BM_PERFMON_DATA_COUNT_COUNT },
-	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "ABurst",
-	.field = BM_PERFMON_MAX_LATENCY_ABURST },
-	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "ALen",
-	.field = BM_PERFMON_MAX_LATENCY_ALEN },
-	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "ASize",
-	.field = BM_PERFMON_MAX_LATENCY_ASIZE },
-	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "TAGID",
-	.field = BM_PERFMON_MAX_LATENCY_TAGID },
-	{.reg = HW_PERFMON_MAX_LATENCY,		.name = "Max-Count",
-	.field = BM_PERFMON_MAX_LATENCY_COUNT }
-};
-
-static struct mxs_platform_perfmon_data common_perfmon_data = {
-	.bit_config_tab = common_perfmon_bit_config,
-	.bit_config_cnt = ARRAY_SIZE(common_perfmon_bit_config),
-};
-
-struct mxs_perfmon_data {
-	struct device *dev;
-	struct mxs_platform_perfmon_data *pdata;
-	struct mxs_platform_perfmon_data *pdata_common;
-	int count;
-	struct attribute_group attr_group;
-	unsigned int base;
-	unsigned int initial;
-	/* attribute ** follow */
-	/* device_attribute follow */
-};
-
-#define pd_attribute_ptr(x) \
-	((struct attribute **)((x) + 1))
-#define pd_device_attribute_ptr(x) \
-	((struct device_attribute *)(pd_attribute_ptr(x) + (x)->count + 1))
-
-static inline u32 perfmon_reg_read(struct mxs_perfmon_data *pdata,
-						int reg)
-{
-	return __raw_readl(pdata->base + reg);
-}
-
-static inline void perfmon_reg_write(struct mxs_perfmon_data *pdata,
-				u32 val, int reg)
-{
-	__raw_writel(val, pdata->base + reg);
-}
-
-static int get_offset_form_field(int field)
-{
-	int offset = 0;
-
-	if (!field)
-		return offset;
-
-	while (!(field & 0x1)) {
-		field >>= 1;
-		offset++;
-	}
-
-	return offset;
-}
-
-static ssize_t
-perfmon_show(struct device *dev, struct device_attribute *attr, char *buf)
-{
-	struct platform_device *pdev = to_platform_device(dev);
-	struct mxs_perfmon_data *pd = platform_get_drvdata(pdev);
-	struct device_attribute *devattr = pd_device_attribute_ptr(pd);
-	struct mxs_perfmon_bit_config *pb;
-	int idx;
-	u32 val;
-	ssize_t result = 0;
-
-	idx = attr - devattr;
-	if ((unsigned int)idx >= pd->count)
-		return -EINVAL;
-
-	if (idx < pd->pdata->bit_config_cnt) {
-		pb = &pd->pdata->bit_config_tab[idx];
-		pb->reg = HW_PERFMON_MASTER_EN;
-	} else
-		pb = &pd->pdata_common->bit_config_tab \
-				[idx - pd->pdata->bit_config_cnt];
-
-	if (!pd->initial) {
-		mxs_reset_block((void *)pd->base, true);
-		pd->initial = true;
-	}
-
-	if (!memcmp(pb->name, MONITOR, sizeof(MONITOR))) {
-		/* cat monitor command, we return monitor status */
-		val = perfmon_reg_read(pd, pb->reg);
-
-		if (val & BV_PERFMON_CTRL_RUN__RUN)
-			result += sprintf(buf, "Run mode\r\n");
-		else
-			result += sprintf(buf, "Stop mode\r\n");
-
-		if (val & BM_PERFMON_CTRL_READ_EN)
-			result += \
-			sprintf(buf + result, "PM Read Activities\r\n");
-		else
-			result += \
-			sprintf(buf + result, "PM Write Activities\r\n");
-
-		return result;
-	}
-
-	/* read value and shift */
-	val = perfmon_reg_read(pd, pb->reg);
-	val &= pb->field;
-	val >>= get_offset_form_field(pb->field);
-
-	return sprintf(buf, "0x%x\n", val);
-}
-
-static ssize_t
-perfmon_store(struct device *dev, struct device_attribute *attr,
-		const char *buf, size_t count)
-{
-	struct platform_device *pdev = to_platform_device(dev);
-	struct mxs_perfmon_data *pd = platform_get_drvdata(pdev);
-	struct device_attribute *devattr = pd_device_attribute_ptr(pd);
-	struct mxs_perfmon_bit_config *pb;
-	int idx, r;
-	unsigned long val, newval;
-
-	idx = attr - devattr;
-	if ((unsigned int)idx >= pd->count)
-		return -EINVAL;
-
-	if (!buf)
-		return -EINVAL;
-
-	if (idx < pd->pdata->bit_config_cnt) {
-		pb = &pd->pdata->bit_config_tab[idx];
-		pb->reg = HW_PERFMON_MASTER_EN;
-	} else
-		pb = &pd->pdata_common->bit_config_tab \
-		[idx - pd->pdata->bit_config_cnt];
-
-	if (!pd->initial) {
-		mxs_reset_block((void *)pd->base, true);
-		pd->initial = true;
-	}
-
-	if (!memcmp(pb->name, MONITOR, sizeof(MONITOR))) {
-		/* it's a cmd */
-		int scan, size;
-		const struct mxs_perfmon_cmd_config *pcfg;
-
-		size = ARRAY_SIZE(common_perfmon_cmd_config);
-		for (scan = 0; scan < size; scan++) {
-			pcfg = &common_perfmon_cmd_config[scan];
-			if (!memcmp(buf, pcfg->cmd, strlen(pcfg->cmd))) {
-				val = perfmon_reg_read(pd, HW_PERFMON_CTRL);
-				val &= ~pcfg->field;
-				val |= \
-				pcfg->val << get_offset_form_field(pcfg->field);
-				perfmon_reg_write(pd, val, HW_PERFMON_CTRL);
-
-				return count;
-			}
-		}
-		if (scan == ARRAY_SIZE(common_perfmon_cmd_config))
-			return -EINVAL;
-	}
-	/* get value to write */
-	if (buf && (count >= 2) && buf[0] == '0' && buf[1] == 'x')
-		r = strict_strtoul(buf, 16, &val);
-	else
-		r = strict_strtoul(buf, 10, &val);
-
-	if (r != 0)
-		return r;
-
-	/* verify it fits */
-	if ((unsigned int)val > (pb->field >> get_offset_form_field(pb->field)))
-		return -EINVAL;
-
-	newval = perfmon_reg_read(pd, pb->reg);
-	newval &= ~pb->field;
-	newval |= val << get_offset_form_field(pb->field);
-	perfmon_reg_write(pd, newval, pb->reg);
-
-	return count;
-}
-
-
-static int __devinit mxs_perfmon_probe(struct platform_device *pdev)
-{
-	struct mxs_perfmon_data *pd;
-	struct mxs_platform_perfmon_data *pdata;
-	struct mxs_platform_perfmon_data *pdata_common;
-	struct resource *res;
-	struct mxs_perfmon_bit_config *pb;
-	struct attribute **attr;
-	struct device_attribute *devattr;
-	int i, cnt, size;
-	int err;
-
-	pdata = pdev->dev.platform_data;
-	if (pdata == NULL)
-		return -ENODEV;
-
-	pdata_common = &common_perfmon_data;
-
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	if (res == NULL)
-		return -ENODEV;
-
-	cnt = pdata->bit_config_cnt + pdata_common->bit_config_cnt;
-	size = sizeof(*pd) +
-		 (cnt + 1) * sizeof(struct atrribute *) +
-		 cnt * sizeof(struct device_attribute);
-	pd = kzalloc(size, GFP_KERNEL);
-	if (pd == NULL)
-		return -ENOMEM;
-	pd->dev = &pdev->dev;
-	pd->pdata = pdata;
-	pd->pdata_common = pdata_common;
-	pd->base =  (unsigned int)ioremap(res->start, res->end - res->start);
-	pd->initial = false;
-
-	platform_set_drvdata(pdev, pd);
-	pd->count = cnt;
-	attr = pd_attribute_ptr(pd);
-	devattr = pd_device_attribute_ptr(pd);
-
-	/* build the attributes structures */
-	pd->attr_group.attrs = attr;
-	pb = pdata->bit_config_tab;
-	for (i = 0; i < pdata->bit_config_cnt; i++) {
-		devattr[i].attr.name = pb[i].name;
-		devattr[i].attr.mode = S_IWUSR | S_IRUGO;
-		devattr[i].show = perfmon_show;
-		devattr[i].store = perfmon_store;
-		attr[i] = &devattr[i].attr;
-	}
-	pb = pdata_common->bit_config_tab;
-	for (i = 0; i < pdata_common->bit_config_cnt; i++) {
-		devattr[i + pdata->bit_config_cnt].attr.name = pb[i].name;
-		devattr[i + pdata->bit_config_cnt].attr.mode = \
-			S_IWUSR | S_IRUGO;
-		devattr[i + pdata->bit_config_cnt].show = perfmon_show;
-		devattr[i + pdata->bit_config_cnt].store = perfmon_store;
-		attr[i + pdata->bit_config_cnt] = \
-			&devattr[i + pdata->bit_config_cnt].attr;
-	}
-
-	err = sysfs_create_group(&pdev->dev.kobj, &pd->attr_group);
-	if (err != 0) {
-		platform_set_drvdata(pdev, NULL);
-		kfree(pd);
-		return err;
-	}
-
-	return 0;
-}
-
-static int __devexit mxs_perfmon_remove(struct platform_device *pdev)
-{
-	struct mxs_perfmon_data *pd;
-
-	pd = platform_get_drvdata(pdev);
-	sysfs_remove_group(&pdev->dev.kobj, &pd->attr_group);
-	platform_set_drvdata(pdev, NULL);
-	kfree(pd);
-
-	return 0;
-}
-
-#ifdef CONFIG_PM
-static int
-mxs_perfmon_suspend(struct platform_device *pdev, pm_message_t state)
-{
-	return 0;
-}
-
-static int mxs_perfmon_resume(struct platform_device *pdev)
-{
-	return 0;
-}
-#else
-#define mxs_perfmon_suspend	NULL
-#define	mxs_perfmon_resume	NULL
-#endif
-
-static struct platform_driver mxs_perfmon_driver = {
-	.probe		= mxs_perfmon_probe,
-	.remove		= __exit_p(mxs_perfmon_remove),
-	.suspend	= mxs_perfmon_suspend,
-	.resume		= mxs_perfmon_resume,
-	.driver		= {
-		.name   = "mxs-perfmon",
-		.owner	= THIS_MODULE,
-	},
-};
-
-static int __init mxs_perfmon_init(void)
-{
-	return platform_driver_register(&mxs_perfmon_driver);
-}
-
-static void __exit mxs_perfmon_exit(void)
-{
-	platform_driver_unregister(&mxs_perfmon_driver);
-}
-
-MODULE_AUTHOR("Freescale Semiconductor, Inc.");
-MODULE_DESCRIPTION("Performance Monitor user-access driver");
-MODULE_LICENSE("GPL");
-
-module_init(mxs_perfmon_init);
-module_exit(mxs_perfmon_exit);
diff --git a/include/linux/fsl_devices.h b/include/linux/fsl_devices.h
index 3e13183..b5cc307 100644
--- a/include/linux/fsl_devices.h
+++ b/include/linux/fsl_devices.h
@@ -677,15 +677,4 @@ struct mxs_platform_perfmon_data {
 	int bit_config_cnt;
 };
 
-struct mxs_perfmon_bit_config {
-	int reg;
-	int field;
-	const char *name;
-};
-
-struct mxs_platform_perfmon_data {
-	struct mxs_perfmon_bit_config *bit_config_tab;
-	int bit_config_cnt;
-};
-
 #endif /* _FSL_DEVICE_H_ */
-- 
1.9.1


From ee828cb7dec8c644b47879ff225b05abd5074bfa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Mon, 25 Aug 2014 16:34:26 +0400
Subject: [PATCH 06/14] =?UTF-8?q?task=20#3529:=20=D0=9F=D1=80=D0=B0=D0=B2?=
 =?UTF-8?q?=D0=B8=D0=BB=D1=8C=D0=BD=D1=8B=D0=B9=20=D0=BA=D0=BE=D0=BD=D1=84?=
 =?UTF-8?q?=D0=B8=D0=B3=20=D0=B4=D0=BB=D1=8F=20rtc?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .config    | 2134 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 .gitignore |    1 +
 2 files changed, 2135 insertions(+)
 create mode 100644 .config

diff --git a/.config b/.config
new file mode 100644
index 0000000..496b4f4
--- /dev/null
+++ b/.config
@@ -0,0 +1,2134 @@
+#
+# Automatically generated make config: don't edit
+# Linux kernel version: 2.6.35.3
+#
+CONFIG_ARM=y
+CONFIG_SYS_SUPPORTS_APM_EMULATION=y
+CONFIG_GENERIC_GPIO=y
+CONFIG_GENERIC_TIME=y
+# CONFIG_ARCH_USES_GETTIMEOFFSET is not set
+CONFIG_GENERIC_CLOCKEVENTS=y
+CONFIG_HAVE_PROC_CPU=y
+CONFIG_GENERIC_HARDIRQS=y
+CONFIG_STACKTRACE_SUPPORT=y
+CONFIG_HAVE_LATENCYTOP_SUPPORT=y
+CONFIG_LOCKDEP_SUPPORT=y
+CONFIG_TRACE_IRQFLAGS_SUPPORT=y
+CONFIG_HARDIRQS_SW_RESEND=y
+CONFIG_GENERIC_IRQ_PROBE=y
+CONFIG_RWSEM_GENERIC_SPINLOCK=y
+CONFIG_ARCH_HAS_CPUFREQ=y
+CONFIG_GENERIC_HWEIGHT=y
+CONFIG_GENERIC_CALIBRATE_DELAY=y
+CONFIG_ZONE_DMA=y
+CONFIG_NEED_DMA_MAP_STATE=y
+CONFIG_FIQ=y
+CONFIG_GENERIC_HARDIRQS_NO__DO_IRQ=y
+CONFIG_VECTORS_BASE=0xffff0000
+CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
+CONFIG_CONSTRUCTORS=y
+
+#
+# General setup
+#
+CONFIG_EXPERIMENTAL=y
+CONFIG_BROKEN_ON_SMP=y
+CONFIG_LOCK_KERNEL=y
+CONFIG_INIT_ENV_ARG_LIMIT=32
+CONFIG_CROSS_COMPILE=""
+CONFIG_LOCALVERSION=""
+CONFIG_LOCALVERSION_AUTO=y
+CONFIG_HAVE_KERNEL_GZIP=y
+CONFIG_HAVE_KERNEL_LZMA=y
+CONFIG_HAVE_KERNEL_LZO=y
+CONFIG_KERNEL_GZIP=y
+# CONFIG_KERNEL_BZIP2 is not set
+# CONFIG_KERNEL_LZMA is not set
+# CONFIG_KERNEL_LZO is not set
+CONFIG_SWAP=y
+CONFIG_SYSVIPC=y
+CONFIG_SYSVIPC_SYSCTL=y
+CONFIG_POSIX_MQUEUE=y
+CONFIG_POSIX_MQUEUE_SYSCTL=y
+CONFIG_BSD_PROCESS_ACCT=y
+# CONFIG_BSD_PROCESS_ACCT_V3 is not set
+# CONFIG_TASKSTATS is not set
+CONFIG_AUDIT=y
+
+#
+# RCU Subsystem
+#
+CONFIG_TREE_RCU=y
+# CONFIG_TREE_PREEMPT_RCU is not set
+# CONFIG_TINY_RCU is not set
+# CONFIG_RCU_TRACE is not set
+CONFIG_RCU_FANOUT=32
+# CONFIG_RCU_FANOUT_EXACT is not set
+# CONFIG_TREE_RCU_TRACE is not set
+# CONFIG_IKCONFIG is not set
+CONFIG_LOG_BUF_SHIFT=17
+# CONFIG_CGROUPS is not set
+# CONFIG_SYSFS_DEPRECATED_V2 is not set
+# CONFIG_RELAY is not set
+CONFIG_NAMESPACES=y
+# CONFIG_UTS_NS is not set
+# CONFIG_IPC_NS is not set
+# CONFIG_USER_NS is not set
+# CONFIG_PID_NS is not set
+# CONFIG_NET_NS is not set
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_INITRAMFS_SOURCE=""
+CONFIG_RD_GZIP=y
+CONFIG_RD_BZIP2=y
+CONFIG_RD_LZMA=y
+CONFIG_RD_LZO=y
+CONFIG_CC_OPTIMIZE_FOR_SIZE=y
+CONFIG_SYSCTL=y
+CONFIG_ANON_INODES=y
+# CONFIG_EMBEDDED is not set
+CONFIG_UID16=y
+CONFIG_SYSCTL_SYSCALL=y
+CONFIG_KALLSYMS=y
+CONFIG_KALLSYMS_EXTRA_PASS=y
+CONFIG_HOTPLUG=y
+CONFIG_PRINTK=y
+CONFIG_BUG=y
+CONFIG_ELF_CORE=y
+CONFIG_BASE_FULL=y
+CONFIG_FUTEX=y
+CONFIG_EPOLL=y
+CONFIG_SIGNALFD=y
+CONFIG_TIMERFD=y
+CONFIG_EVENTFD=y
+CONFIG_SHMEM=y
+# CONFIG_ASHMEM is not set
+CONFIG_AIO=y
+CONFIG_HAVE_PERF_EVENTS=y
+CONFIG_PERF_USE_VMALLOC=y
+
+#
+# Kernel Performance Events And Counters
+#
+CONFIG_PERF_EVENTS=y
+# CONFIG_PERF_COUNTERS is not set
+CONFIG_VM_EVENT_COUNTERS=y
+CONFIG_SLUB_DEBUG=y
+CONFIG_COMPAT_BRK=y
+# CONFIG_SLAB is not set
+CONFIG_SLUB=y
+# CONFIG_SLOB is not set
+CONFIG_PROFILING=y
+CONFIG_OPROFILE=m
+CONFIG_HAVE_OPROFILE=y
+CONFIG_KPROBES=y
+CONFIG_KRETPROBES=y
+CONFIG_HAVE_KPROBES=y
+CONFIG_HAVE_KRETPROBES=y
+CONFIG_HAVE_CLK=y
+
+#
+# GCOV-based kernel profiling
+#
+# CONFIG_GCOV_KERNEL is not set
+# CONFIG_SLOW_WORK is not set
+CONFIG_HAVE_GENERIC_DMA_COHERENT=y
+CONFIG_SLABINFO=y
+CONFIG_RT_MUTEXES=y
+CONFIG_BASE_SMALL=0
+CONFIG_MODULES=y
+# CONFIG_MODULE_FORCE_LOAD is not set
+CONFIG_MODULE_UNLOAD=y
+# CONFIG_MODULE_FORCE_UNLOAD is not set
+CONFIG_MODVERSIONS=y
+# CONFIG_MODULE_SRCVERSION_ALL is not set
+CONFIG_BLOCK=y
+CONFIG_LBDAF=y
+CONFIG_BLK_DEV_BSG=y
+# CONFIG_BLK_DEV_INTEGRITY is not set
+
+#
+# IO Schedulers
+#
+CONFIG_IOSCHED_NOOP=y
+CONFIG_IOSCHED_DEADLINE=y
+CONFIG_IOSCHED_CFQ=y
+# CONFIG_DEFAULT_DEADLINE is not set
+CONFIG_DEFAULT_CFQ=y
+# CONFIG_DEFAULT_NOOP is not set
+CONFIG_DEFAULT_IOSCHED="cfq"
+# CONFIG_INLINE_SPIN_TRYLOCK is not set
+# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK is not set
+# CONFIG_INLINE_SPIN_LOCK_BH is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_SPIN_UNLOCK is not set
+# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQ is not set
+# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_READ_TRYLOCK is not set
+# CONFIG_INLINE_READ_LOCK is not set
+# CONFIG_INLINE_READ_LOCK_BH is not set
+# CONFIG_INLINE_READ_LOCK_IRQ is not set
+# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_READ_UNLOCK is not set
+# CONFIG_INLINE_READ_UNLOCK_BH is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQ is not set
+# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
+# CONFIG_INLINE_WRITE_TRYLOCK is not set
+# CONFIG_INLINE_WRITE_LOCK is not set
+# CONFIG_INLINE_WRITE_LOCK_BH is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
+# CONFIG_INLINE_WRITE_UNLOCK is not set
+# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQ is not set
+# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
+# CONFIG_MUTEX_SPIN_ON_OWNER is not set
+CONFIG_FREEZER=y
+
+#
+# System Type
+#
+CONFIG_MMU=y
+# CONFIG_ARCH_AAEC2000 is not set
+# CONFIG_ARCH_INTEGRATOR is not set
+# CONFIG_ARCH_REALVIEW is not set
+# CONFIG_ARCH_VERSATILE is not set
+# CONFIG_ARCH_VEXPRESS is not set
+# CONFIG_ARCH_AT91 is not set
+# CONFIG_ARCH_BCMRING is not set
+# CONFIG_ARCH_CLPS711X is not set
+# CONFIG_ARCH_CNS3XXX is not set
+# CONFIG_ARCH_GEMINI is not set
+# CONFIG_ARCH_EBSA110 is not set
+# CONFIG_ARCH_EP93XX is not set
+# CONFIG_ARCH_FOOTBRIDGE is not set
+# CONFIG_ARCH_MXC is not set
+# CONFIG_ARCH_STMP3XXX is not set
+CONFIG_ARCH_MXS=y
+# CONFIG_ARCH_NETX is not set
+# CONFIG_ARCH_H720X is not set
+# CONFIG_ARCH_IOP13XX is not set
+# CONFIG_ARCH_IOP32X is not set
+# CONFIG_ARCH_IOP33X is not set
+# CONFIG_ARCH_IXP23XX is not set
+# CONFIG_ARCH_IXP2000 is not set
+# CONFIG_ARCH_IXP4XX is not set
+# CONFIG_ARCH_L7200 is not set
+# CONFIG_ARCH_DOVE is not set
+# CONFIG_ARCH_KIRKWOOD is not set
+# CONFIG_ARCH_LOKI is not set
+# CONFIG_ARCH_MV78XX0 is not set
+# CONFIG_ARCH_ORION5X is not set
+# CONFIG_ARCH_MMP is not set
+# CONFIG_ARCH_KS8695 is not set
+# CONFIG_ARCH_NS9XXX is not set
+# CONFIG_ARCH_W90X900 is not set
+# CONFIG_ARCH_NUC93X is not set
+# CONFIG_ARCH_PNX4008 is not set
+# CONFIG_ARCH_PXA is not set
+# CONFIG_ARCH_MSM is not set
+# CONFIG_ARCH_SHMOBILE is not set
+# CONFIG_ARCH_RPC is not set
+# CONFIG_ARCH_SA1100 is not set
+# CONFIG_ARCH_S3C2410 is not set
+# CONFIG_ARCH_S3C64XX is not set
+# CONFIG_ARCH_S5P6440 is not set
+# CONFIG_ARCH_S5P6442 is not set
+# CONFIG_ARCH_S5PC100 is not set
+# CONFIG_ARCH_S5PV210 is not set
+# CONFIG_ARCH_SHARK is not set
+# CONFIG_ARCH_LH7A40X is not set
+# CONFIG_ARCH_U300 is not set
+# CONFIG_ARCH_U8500 is not set
+# CONFIG_ARCH_NOMADIK is not set
+# CONFIG_ARCH_DAVINCI is not set
+# CONFIG_ARCH_OMAP is not set
+# CONFIG_PLAT_SPEAR is not set
+CONFIG_IRAM_ALLOC=y
+CONFIG_DMA_ZONE_SIZE=16
+
+#
+# Freescale i.MXS implementations
+#
+CONFIG_ARCH_MX28=y
+# CONFIG_ARCH_MX23 is not set
+CONFIG_MACH_MX28EVK=y
+CONFIG_VECTORS_PHY_ADDR=0
+CONFIG_MXS_TIMER_WITH_MACH=y
+# CONFIG_MEM_mDDR is not set
+# CONFIG_MX28_SUSPEND_TO_RAM is not set
+CONFIG_WORKAROUND_ARCUSB_REG_RW=y
+CONFIG_MXS_ICOLL=y
+CONFIG_MXS_EARLY_CONSOLE=y
+CONFIG_MXS_DMA_ENGINE=y
+CONFIG_MXS_LRADC=y
+CONFIG_MXS_PWM_CHANNELS=8
+
+#
+# Freescale Application UART:
+#
+CONFIG_MXS_AUART_DMA_SUPPORT=y
+CONFIG_MXS_AUART_PORTS=5
+CONFIG_MXS_AUART0_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART0_DMA_ENABLE is not set
+CONFIG_MXS_AUART1_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART1_DMA_ENABLE is not set
+CONFIG_MXS_AUART2_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART2_DMA_ENABLE is not set
+CONFIG_MXS_AUART3_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART3_DMA_ENABLE is not set
+CONFIG_MXS_AUART4_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART4_DMA_ENABLE is not set
+CONFIG_MXS_RAM_FREQ_SCALING=y
+# CONFIG_MXS_RAM_MDDR is not set
+# CONFIG_MXS_RAM_DDR is not set
+
+#
+# Processor Type
+#
+CONFIG_CPU_ARM926T=y
+CONFIG_CPU_32v5=y
+CONFIG_CPU_ABRT_EV5TJ=y
+CONFIG_CPU_PABRT_LEGACY=y
+CONFIG_CPU_CACHE_VIVT=y
+CONFIG_CPU_COPY_V4WB=y
+CONFIG_CPU_TLB_V4WBI=y
+CONFIG_CPU_CP15=y
+CONFIG_CPU_CP15_MMU=y
+
+#
+# Processor Features
+#
+CONFIG_ARM_THUMB=y
+# CONFIG_CPU_ICACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_DISABLE is not set
+# CONFIG_CPU_DCACHE_WRITETHROUGH is not set
+# CONFIG_CPU_CACHE_ROUND_ROBIN is not set
+CONFIG_ARM_L1_CACHE_SHIFT=5
+CONFIG_COMMON_CLKDEV=y
+
+#
+# Bus support
+#
+# CONFIG_PCI_SYSCALL is not set
+# CONFIG_ARCH_SUPPORTS_MSI is not set
+# CONFIG_PCCARD is not set
+
+#
+# Kernel Features
+#
+CONFIG_TICK_ONESHOT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
+CONFIG_VMSPLIT_3G=y
+# CONFIG_VMSPLIT_2G is not set
+# CONFIG_VMSPLIT_1G is not set
+CONFIG_PAGE_OFFSET=0xC0000000
+# CONFIG_PREEMPT_NONE is not set
+# CONFIG_PREEMPT_VOLUNTARY is not set
+CONFIG_PREEMPT=y
+CONFIG_HZ=100
+CONFIG_AEABI=y
+CONFIG_OABI_COMPAT=y
+# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
+# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
+# CONFIG_HIGHMEM is not set
+CONFIG_SELECT_MEMORY_MODEL=y
+CONFIG_FLATMEM_MANUAL=y
+# CONFIG_DISCONTIGMEM_MANUAL is not set
+# CONFIG_SPARSEMEM_MANUAL is not set
+CONFIG_FLATMEM=y
+CONFIG_FLAT_NODE_MEM_MAP=y
+CONFIG_PAGEFLAGS_EXTENDED=y
+CONFIG_SPLIT_PTLOCK_CPUS=999999
+# CONFIG_PHYS_ADDR_T_64BIT is not set
+CONFIG_ZONE_DMA_FLAG=1
+CONFIG_BOUNCE=y
+CONFIG_VIRT_TO_BUS=y
+# CONFIG_KSM is not set
+CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
+CONFIG_ALIGNMENT_TRAP=y
+# CONFIG_UACCESS_WITH_MEMCPY is not set
+
+#
+# Boot options
+#
+CONFIG_ZBOOT_ROM_TEXT=0
+CONFIG_ZBOOT_ROM_BSS=0
+CONFIG_CMDLINE=""
+# CONFIG_XIP_KERNEL is not set
+# CONFIG_KEXEC is not set
+
+#
+# CPU Power Management
+#
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_TABLE=y
+# CONFIG_CPU_FREQ_DEBUG is not set
+CONFIG_CPU_FREQ_STAT=y
+# CONFIG_CPU_FREQ_STAT_DETAILS is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
+CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
+# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
+# CONFIG_CPU_IDLE is not set
+
+#
+# Floating point emulation
+#
+
+#
+# At least one emulation must be selected
+#
+# CONFIG_FPE_NWFPE is not set
+# CONFIG_FPE_FASTFPE is not set
+# CONFIG_VFP is not set
+
+#
+# Userspace binary formats
+#
+CONFIG_BINFMT_ELF=y
+# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
+CONFIG_HAVE_AOUT=y
+# CONFIG_BINFMT_AOUT is not set
+CONFIG_BINFMT_MISC=y
+
+#
+# Power management options
+#
+CONFIG_PM=y
+# CONFIG_PM_DEBUG is not set
+CONFIG_PM_SLEEP=y
+CONFIG_SUSPEND_NVS=y
+CONFIG_SUSPEND=y
+CONFIG_SUSPEND_FREEZER=y
+# CONFIG_APM_EMULATION is not set
+CONFIG_PM_RUNTIME=y
+CONFIG_PM_OPS=y
+CONFIG_ARCH_SUSPEND_POSSIBLE=y
+CONFIG_NET=y
+
+#
+# Networking options
+#
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+CONFIG_XFRM=y
+# CONFIG_XFRM_USER is not set
+# CONFIG_XFRM_SUB_POLICY is not set
+# CONFIG_XFRM_MIGRATE is not set
+# CONFIG_XFRM_STATISTICS is not set
+# CONFIG_NET_KEY is not set
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+# CONFIG_IP_ADVANCED_ROUTER is not set
+CONFIG_IP_FIB_HASH=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+# CONFIG_IP_PNP_RARP is not set
+# CONFIG_NET_IPIP is not set
+# CONFIG_NET_IPGRE is not set
+# CONFIG_IP_MROUTE is not set
+# CONFIG_ARPD is not set
+# CONFIG_SYN_COOKIES is not set
+# CONFIG_INET_AH is not set
+# CONFIG_INET_ESP is not set
+# CONFIG_INET_IPCOMP is not set
+# CONFIG_INET_XFRM_TUNNEL is not set
+# CONFIG_INET_TUNNEL is not set
+CONFIG_INET_XFRM_MODE_TRANSPORT=y
+CONFIG_INET_XFRM_MODE_TUNNEL=y
+CONFIG_INET_XFRM_MODE_BEET=y
+# CONFIG_INET_LRO is not set
+CONFIG_INET_DIAG=y
+CONFIG_INET_TCP_DIAG=y
+# CONFIG_TCP_CONG_ADVANCED is not set
+CONFIG_TCP_CONG_CUBIC=y
+CONFIG_DEFAULT_TCP_CONG="cubic"
+# CONFIG_TCP_MD5SIG is not set
+# CONFIG_IPV6 is not set
+# CONFIG_NETLABEL is not set
+CONFIG_NETWORK_SECMARK=y
+# CONFIG_NETFILTER is not set
+# CONFIG_IP_DCCP is not set
+# CONFIG_IP_SCTP is not set
+# CONFIG_RDS is not set
+# CONFIG_TIPC is not set
+# CONFIG_ATM is not set
+# CONFIG_L2TP is not set
+# CONFIG_BRIDGE is not set
+# CONFIG_NET_DSA is not set
+# CONFIG_VLAN_8021Q is not set
+# CONFIG_DECNET is not set
+# CONFIG_LLC2 is not set
+# CONFIG_IPX is not set
+# CONFIG_ATALK is not set
+# CONFIG_X25 is not set
+# CONFIG_LAPB is not set
+# CONFIG_ECONET is not set
+# CONFIG_WAN_ROUTER is not set
+# CONFIG_PHONET is not set
+# CONFIG_IEEE802154 is not set
+# CONFIG_NET_SCHED is not set
+# CONFIG_DCB is not set
+
+#
+# Network testing
+#
+# CONFIG_NET_PKTGEN is not set
+# CONFIG_NET_TCPPROBE is not set
+# CONFIG_HAMRADIO is not set
+CONFIG_CAN=y
+CONFIG_CAN_RAW=y
+# CONFIG_CAN_BCM is not set
+
+#
+# CAN Device Drivers
+#
+# CONFIG_CAN_VCAN is not set
+# CONFIG_CAN_DEV is not set
+# CONFIG_CAN_DEBUG_DEVICES is not set
+CONFIG_CAN_FLEXCAN=m
+# CONFIG_IRDA is not set
+# CONFIG_BT is not set
+# CONFIG_AF_RXRPC is not set
+CONFIG_WIRELESS=y
+CONFIG_WIRELESS_EXT=y
+CONFIG_WEXT_CORE=y
+CONFIG_WEXT_PROC=y
+CONFIG_WEXT_SPY=y
+CONFIG_WEXT_PRIV=y
+# CONFIG_CFG80211 is not set
+CONFIG_WIRELESS_EXT_SYSFS=y
+# CONFIG_LIB80211 is not set
+
+#
+# CFG80211 needs to be enabled for MAC80211
+#
+
+#
+# Some wireless drivers require a rate control algorithm
+#
+# CONFIG_WIMAX is not set
+CONFIG_RFKILL=y
+CONFIG_RFKILL_INPUT=y
+# CONFIG_NET_9P is not set
+# CONFIG_CAIF is not set
+
+#
+# Device Drivers
+#
+
+#
+# Generic Driver Options
+#
+CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
+# CONFIG_DEVTMPFS is not set
+CONFIG_STANDALONE=y
+CONFIG_PREVENT_FIRMWARE_BUILD=y
+CONFIG_FW_LOADER=y
+CONFIG_FIRMWARE_IN_KERNEL=y
+CONFIG_EXTRA_FIRMWARE=""
+# CONFIG_SYS_HYPERVISOR is not set
+# CONFIG_CONNECTOR is not set
+CONFIG_MTD=y
+# CONFIG_MTD_DEBUG is not set
+# CONFIG_MTD_TESTS is not set
+CONFIG_MTD_CONCAT=y
+CONFIG_MTD_PARTITIONS=y
+# CONFIG_MTD_REDBOOT_PARTS is not set
+CONFIG_MTD_CMDLINE_PARTS=y
+# CONFIG_MTD_AFS_PARTS is not set
+# CONFIG_MTD_AR7_PARTS is not set
+
+#
+# User Modules And Translation Layers
+#
+CONFIG_MTD_CHAR=y
+CONFIG_MTD_BLKDEVS=y
+CONFIG_MTD_BLOCK=y
+# CONFIG_FTL is not set
+# CONFIG_NFTL is not set
+# CONFIG_INFTL is not set
+# CONFIG_RFD_FTL is not set
+# CONFIG_SSFDC is not set
+# CONFIG_SM_FTL is not set
+# CONFIG_MTD_OOPS is not set
+
+#
+# RAM/ROM/Flash chip drivers
+#
+# CONFIG_MTD_CFI is not set
+# CONFIG_MTD_JEDECPROBE is not set
+CONFIG_MTD_MAP_BANK_WIDTH_1=y
+CONFIG_MTD_MAP_BANK_WIDTH_2=y
+CONFIG_MTD_MAP_BANK_WIDTH_4=y
+# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
+# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
+CONFIG_MTD_CFI_I1=y
+CONFIG_MTD_CFI_I2=y
+# CONFIG_MTD_CFI_I4 is not set
+# CONFIG_MTD_CFI_I8 is not set
+# CONFIG_MTD_RAM is not set
+# CONFIG_MTD_ROM is not set
+# CONFIG_MTD_ABSENT is not set
+
+#
+# Mapping drivers for chip access
+#
+# CONFIG_MTD_COMPLEX_MAPPINGS is not set
+# CONFIG_MTD_PLATRAM is not set
+
+#
+# Self-contained MTD device drivers
+#
+# CONFIG_MTD_DATAFLASH is not set
+# CONFIG_MTD_MXC_DATAFLASH is not set
+CONFIG_MTD_M25P80=m
+CONFIG_M25PXX_USE_FAST_READ=y
+# CONFIG_MTD_SST25L is not set
+# CONFIG_MTD_SLRAM is not set
+# CONFIG_MTD_PHRAM is not set
+# CONFIG_MTD_MTDRAM is not set
+# CONFIG_MTD_BLOCK2MTD is not set
+
+#
+# Disk-On-Chip Device Drivers
+#
+# CONFIG_MTD_DOC2000 is not set
+# CONFIG_MTD_DOC2001 is not set
+# CONFIG_MTD_DOC2001PLUS is not set
+CONFIG_MTD_NAND_ECC=y
+# CONFIG_MTD_NAND_ECC_SMC is not set
+CONFIG_MTD_NAND=y
+# CONFIG_MTD_NAND_VERIFY_WRITE is not set
+# CONFIG_MTD_SM_COMMON is not set
+# CONFIG_MTD_NAND_MUSEUM_IDS is not set
+CONFIG_MTD_NAND_DENALI_SCRATCH_REG_ADDR=0xFF108018
+# CONFIG_MTD_NAND_GPIO is not set
+CONFIG_MTD_NAND_IDS=y
+# CONFIG_MTD_NAND_DISKONCHIP is not set
+# CONFIG_MTD_NAND_NANDSIM is not set
+CONFIG_MTD_NAND_GPMI_NFC=y
+# CONFIG_MTD_NAND_PLATFORM is not set
+# CONFIG_MTD_ALAUDA is not set
+# CONFIG_MTD_ONENAND is not set
+
+#
+# LPDDR flash memory drivers
+#
+# CONFIG_MTD_LPDDR is not set
+
+#
+# UBI - Unsorted block images
+#
+CONFIG_MTD_UBI=y
+CONFIG_MTD_UBI_WL_THRESHOLD=4096
+CONFIG_MTD_UBI_BEB_RESERVE=1
+# CONFIG_MTD_UBI_GLUEBI is not set
+
+#
+# UBI debugging options
+#
+# CONFIG_MTD_UBI_DEBUG is not set
+CONFIG_MTD_UBI_BLOCK=y
+# CONFIG_PARPORT is not set
+CONFIG_BLK_DEV=y
+# CONFIG_BLK_DEV_COW_COMMON is not set
+CONFIG_BLK_DEV_LOOP=y
+# CONFIG_BLK_DEV_CRYPTOLOOP is not set
+
+#
+# DRBD disabled because PROC_FS, INET or CONNECTOR not selected
+#
+# CONFIG_BLK_DEV_NBD is not set
+# CONFIG_BLK_DEV_UB is not set
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_COUNT=4
+CONFIG_BLK_DEV_RAM_SIZE=16384
+# CONFIG_BLK_DEV_XIP is not set
+# CONFIG_CDROM_PKTCDVD is not set
+# CONFIG_ATA_OVER_ETH is not set
+# CONFIG_MG_DISK is not set
+CONFIG_MISC_DEVICES=y
+# CONFIG_AD525X_DPOT is not set
+# CONFIG_ICS932S401 is not set
+# CONFIG_ENCLOSURE_SERVICES is not set
+# CONFIG_ISL29003 is not set
+# CONFIG_SENSORS_TSL2550 is not set
+# CONFIG_DS1682 is not set
+# CONFIG_TI_DAC7512 is not set
+CONFIG_MXS_PERSISTENT=y
+CONFIG_MXS_PERFMON=y
+# CONFIG_ANDROID_PMEM is not set
+# CONFIG_UID_STAT is not set
+# CONFIG_C2PORT is not set
+
+#
+# EEPROM support
+#
+# CONFIG_EEPROM_AT24 is not set
+# CONFIG_EEPROM_AT25 is not set
+# CONFIG_EEPROM_LEGACY is not set
+# CONFIG_EEPROM_MAX6875 is not set
+# CONFIG_EEPROM_93CX6 is not set
+# CONFIG_IWMC3200TOP is not set
+CONFIG_HAVE_IDE=y
+# CONFIG_IDE is not set
+
+#
+# SCSI device support
+#
+CONFIG_SCSI_MOD=y
+# CONFIG_RAID_ATTRS is not set
+CONFIG_SCSI=y
+CONFIG_SCSI_DMA=y
+# CONFIG_SCSI_TGT is not set
+CONFIG_SCSI_NETLINK=y
+CONFIG_SCSI_PROC_FS=y
+
+#
+# SCSI support type (disk, tape, CD-ROM)
+#
+CONFIG_BLK_DEV_SD=y
+# CONFIG_CHR_DEV_ST is not set
+# CONFIG_CHR_DEV_OSST is not set
+# CONFIG_BLK_DEV_SR is not set
+# CONFIG_CHR_DEV_SG is not set
+# CONFIG_CHR_DEV_SCH is not set
+CONFIG_SCSI_MULTI_LUN=y
+# CONFIG_SCSI_CONSTANTS is not set
+# CONFIG_SCSI_LOGGING is not set
+# CONFIG_SCSI_SCAN_ASYNC is not set
+CONFIG_SCSI_WAIT_SCAN=m
+
+#
+# SCSI Transports
+#
+CONFIG_SCSI_SPI_ATTRS=m
+CONFIG_SCSI_FC_ATTRS=m
+CONFIG_SCSI_ISCSI_ATTRS=m
+# CONFIG_SCSI_SAS_ATTRS is not set
+# CONFIG_SCSI_SAS_LIBSAS is not set
+# CONFIG_SCSI_SRP_ATTRS is not set
+CONFIG_SCSI_LOWLEVEL=y
+# CONFIG_ISCSI_TCP is not set
+# CONFIG_LIBFC is not set
+# CONFIG_LIBFCOE is not set
+# CONFIG_SCSI_DEBUG is not set
+# CONFIG_SCSI_DH is not set
+# CONFIG_SCSI_OSD_INITIATOR is not set
+# CONFIG_ATA is not set
+# CONFIG_MD is not set
+CONFIG_NETDEVICES=y
+# CONFIG_DUMMY is not set
+# CONFIG_BONDING is not set
+# CONFIG_MACVLAN is not set
+# CONFIG_EQUALIZER is not set
+# CONFIG_TUN is not set
+# CONFIG_VETH is not set
+CONFIG_PHYLIB=y
+
+#
+# MII PHY device drivers
+#
+# CONFIG_MARVELL_PHY is not set
+# CONFIG_DAVICOM_PHY is not set
+# CONFIG_QSEMI_PHY is not set
+# CONFIG_LXT_PHY is not set
+# CONFIG_CICADA_PHY is not set
+# CONFIG_VITESSE_PHY is not set
+# CONFIG_SMSC_PHY is not set
+# CONFIG_BROADCOM_PHY is not set
+# CONFIG_ICPLUS_PHY is not set
+# CONFIG_REALTEK_PHY is not set
+# CONFIG_NATIONAL_PHY is not set
+# CONFIG_STE10XP is not set
+# CONFIG_LSI_ET1011C_PHY is not set
+# CONFIG_MICREL_PHY is not set
+# CONFIG_FIXED_PHY is not set
+# CONFIG_MDIO_BITBANG is not set
+CONFIG_NET_ETHERNET=y
+CONFIG_MII=y
+# CONFIG_AX88796 is not set
+# CONFIG_SMC91X is not set
+# CONFIG_DM9000 is not set
+# CONFIG_ENC28J60 is not set
+# CONFIG_ETHOC is not set
+# CONFIG_SMC911X is not set
+# CONFIG_SMSC911X is not set
+# CONFIG_DNET is not set
+# CONFIG_IBM_NEW_EMAC_ZMII is not set
+# CONFIG_IBM_NEW_EMAC_RGMII is not set
+# CONFIG_IBM_NEW_EMAC_TAH is not set
+# CONFIG_IBM_NEW_EMAC_EMAC4 is not set
+# CONFIG_IBM_NEW_EMAC_NO_FLOW_CTRL is not set
+# CONFIG_IBM_NEW_EMAC_MAL_CLR_ICINTSTAT is not set
+# CONFIG_IBM_NEW_EMAC_MAL_COMMON_ERR is not set
+# CONFIG_B44 is not set
+# CONFIG_KS8842 is not set
+# CONFIG_KS8851 is not set
+# CONFIG_KS8851_MLL is not set
+CONFIG_FEC=y
+# CONFIG_FEC_1588 is not set
+# CONFIG_FEC2 is not set
+# CONFIG_NETDEV_1000 is not set
+# CONFIG_NETDEV_10000 is not set
+CONFIG_WLAN=y
+# CONFIG_USB_ZD1201 is not set
+# CONFIG_HOSTAP is not set
+CONFIG_ATH6K_LEGACY=m
+CONFIG_AR600x_SD31_XXX=y
+# CONFIG_AR600x_WB31_XXX is not set
+# CONFIG_AR600x_SD32_XXX is not set
+# CONFIG_AR600x_CUSTOM_XXX is not set
+# CONFIG_ATH6KL_ENABLE_COEXISTENCE is not set
+# CONFIG_ATH6KL_HCI_BRIDGE is not set
+# CONFIG_ATH6KL_CFG80211 is not set
+# CONFIG_ATH6KL_HTC_RAW_INTERFACE is not set
+# CONFIG_ATH6KL_VIRTUAL_SCATTER_GATHER is not set
+# CONFIG_ATH6KL_DEBUG is not set
+
+#
+# Enable WiMAX (Networking options) to see the WiMAX drivers
+#
+
+#
+# USB Network Adapters
+#
+# CONFIG_USB_CATC is not set
+# CONFIG_USB_KAWETH is not set
+# CONFIG_USB_PEGASUS is not set
+# CONFIG_USB_RTL8150 is not set
+# CONFIG_USB_USBNET is not set
+# CONFIG_USB_HSO is not set
+# CONFIG_USB_IPHETH is not set
+# CONFIG_WAN is not set
+# CONFIG_PPP is not set
+# CONFIG_SLIP is not set
+# CONFIG_NETCONSOLE is not set
+# CONFIG_NETPOLL is not set
+# CONFIG_NET_POLL_CONTROLLER is not set
+# CONFIG_ISDN is not set
+# CONFIG_PHONE is not set
+
+#
+# Input device support
+#
+CONFIG_INPUT=y
+CONFIG_INPUT_FF_MEMLESS=y
+# CONFIG_INPUT_POLLDEV is not set
+# CONFIG_INPUT_SPARSEKMAP is not set
+
+#
+# Userland interfaces
+#
+CONFIG_INPUT_MOUSEDEV=y
+CONFIG_INPUT_MOUSEDEV_PSAUX=y
+CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
+CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
+CONFIG_INPUT_JOYDEV=m
+CONFIG_INPUT_EVDEV=y
+# CONFIG_INPUT_EVBUG is not set
+
+#
+# Input Device Drivers
+#
+CONFIG_INPUT_KEYBOARD=y
+# CONFIG_KEYBOARD_ADP5588 is not set
+CONFIG_KEYBOARD_ATKBD=y
+# CONFIG_KEYBOARD_QT2160 is not set
+# CONFIG_KEYBOARD_LKKBD is not set
+# CONFIG_KEYBOARD_GPIO is not set
+# CONFIG_KEYBOARD_TCA6416 is not set
+# CONFIG_KEYBOARD_MATRIX is not set
+# CONFIG_KEYBOARD_LM8323 is not set
+# CONFIG_KEYBOARD_MAX7359 is not set
+# CONFIG_KEYBOARD_NEWTON is not set
+# CONFIG_KEYBOARD_OPENCORES is not set
+# CONFIG_KEYBOARD_STOWAWAY is not set
+# CONFIG_KEYBOARD_SUNKBD is not set
+# CONFIG_KEYBOARD_XTKBD is not set
+CONFIG_KEYBOARD_MXS=y
+CONFIG_INPUT_MOUSE=y
+CONFIG_MOUSE_PS2=y
+CONFIG_MOUSE_PS2_ALPS=y
+CONFIG_MOUSE_PS2_LOGIPS2PP=y
+CONFIG_MOUSE_PS2_SYNAPTICS=y
+CONFIG_MOUSE_PS2_TRACKPOINT=y
+# CONFIG_MOUSE_PS2_ELANTECH is not set
+# CONFIG_MOUSE_PS2_SENTELIC is not set
+# CONFIG_MOUSE_PS2_TOUCHKIT is not set
+CONFIG_MOUSE_SERIAL=m
+# CONFIG_MOUSE_APPLETOUCH is not set
+# CONFIG_MOUSE_BCM5974 is not set
+CONFIG_MOUSE_VSXXXAA=m
+# CONFIG_MOUSE_GPIO is not set
+# CONFIG_MOUSE_SYNAPTICS_I2C is not set
+CONFIG_INPUT_JOYSTICK=y
+# CONFIG_JOYSTICK_ANALOG is not set
+# CONFIG_JOYSTICK_A3D is not set
+# CONFIG_JOYSTICK_ADI is not set
+# CONFIG_JOYSTICK_COBRA is not set
+# CONFIG_JOYSTICK_GF2K is not set
+# CONFIG_JOYSTICK_GRIP is not set
+# CONFIG_JOYSTICK_GRIP_MP is not set
+# CONFIG_JOYSTICK_GUILLEMOT is not set
+# CONFIG_JOYSTICK_INTERACT is not set
+# CONFIG_JOYSTICK_SIDEWINDER is not set
+# CONFIG_JOYSTICK_TMDC is not set
+# CONFIG_JOYSTICK_IFORCE is not set
+# CONFIG_JOYSTICK_WARRIOR is not set
+# CONFIG_JOYSTICK_MAGELLAN is not set
+# CONFIG_JOYSTICK_SPACEORB is not set
+# CONFIG_JOYSTICK_SPACEBALL is not set
+# CONFIG_JOYSTICK_STINGER is not set
+# CONFIG_JOYSTICK_TWIDJOY is not set
+# CONFIG_JOYSTICK_ZHENHUA is not set
+# CONFIG_JOYSTICK_JOYDUMP is not set
+# CONFIG_JOYSTICK_XPAD is not set
+# CONFIG_INPUT_TABLET is not set
+CONFIG_INPUT_TOUCHSCREEN=y
+# CONFIG_TOUCHSCREEN_ADS7846 is not set
+# CONFIG_TOUCHSCREEN_AD7877 is not set
+# CONFIG_TOUCHSCREEN_AD7879_I2C is not set
+# CONFIG_TOUCHSCREEN_AD7879_SPI is not set
+# CONFIG_TOUCHSCREEN_AD7879 is not set
+# CONFIG_TOUCHSCREEN_DYNAPRO is not set
+# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
+# CONFIG_TOUCHSCREEN_EETI is not set
+# CONFIG_TOUCHSCREEN_FUJITSU is not set
+CONFIG_TOUCHSCREEN_GUNZE=m
+# CONFIG_TOUCHSCREEN_ELO is not set
+# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
+# CONFIG_TOUCHSCREEN_MCS5000 is not set
+# CONFIG_TOUCHSCREEN_MTOUCH is not set
+# CONFIG_TOUCHSCREEN_INEXIO is not set
+# CONFIG_TOUCHSCREEN_MK712 is not set
+CONFIG_TOUCHSCREEN_MXS=y
+# CONFIG_TOUCHSCREEN_PENMOUNT is not set
+# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
+# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
+# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
+# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
+# CONFIG_TOUCHSCREEN_TSC2007 is not set
+# CONFIG_TOUCHSCREEN_W90X900 is not set
+# CONFIG_TOUCHSCREEN_TPS6507X is not set
+CONFIG_INPUT_MISC=y
+# CONFIG_INPUT_AD714X is not set
+# CONFIG_INPUT_ATI_REMOTE is not set
+# CONFIG_INPUT_ATI_REMOTE2 is not set
+# CONFIG_INPUT_KEYSPAN_REMOTE is not set
+# CONFIG_INPUT_POWERMATE is not set
+# CONFIG_INPUT_YEALINK is not set
+# CONFIG_INPUT_CM109 is not set
+CONFIG_INPUT_UINPUT=m
+# CONFIG_INPUT_PCF8574 is not set
+# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
+
+#
+# Hardware I/O ports
+#
+CONFIG_SERIO=y
+CONFIG_SERIO_SERPORT=y
+CONFIG_SERIO_LIBPS2=y
+# CONFIG_SERIO_RAW is not set
+# CONFIG_SERIO_ALTERA_PS2 is not set
+# CONFIG_GAMEPORT is not set
+
+#
+# Character devices
+#
+CONFIG_VT=y
+CONFIG_CONSOLE_TRANSLATIONS=y
+CONFIG_VT_CONSOLE=y
+CONFIG_HW_CONSOLE=y
+# CONFIG_VT_HW_CONSOLE_BINDING is not set
+CONFIG_DEVKMEM=y
+CONFIG_SERIAL_NONSTANDARD=y
+# CONFIG_N_HDLC is not set
+# CONFIG_N_GSM is not set
+# CONFIG_RISCOM8 is not set
+# CONFIG_SPECIALIX is not set
+CONFIG_STALDRV=y
+CONFIG_MXS_VIIM=y
+
+#
+# Serial drivers
+#
+# CONFIG_SERIAL_8250 is not set
+
+#
+# Non-8250 serial port support
+#
+CONFIG_SERIAL_MXS_DUART=y
+CONFIG_SERIAL_MXS_AUART=y
+# CONFIG_SERIAL_MXS_AUART_CONSOLE is not set
+CONFIG_SERIAL_MXS_DUART_CONSOLE=y
+# CONFIG_SERIAL_MAX3100 is not set
+CONFIG_SERIAL_CORE=y
+CONFIG_SERIAL_CORE_CONSOLE=y
+# CONFIG_SERIAL_TIMBERDALE is not set
+# CONFIG_SERIAL_ALTERA_JTAGUART is not set
+# CONFIG_SERIAL_ALTERA_UART is not set
+CONFIG_UNIX98_PTYS=y
+# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
+CONFIG_LEGACY_PTYS=y
+CONFIG_LEGACY_PTY_COUNT=256
+# CONFIG_FSL_OTP is not set
+CONFIG_IPMI_HANDLER=m
+# CONFIG_IPMI_PANIC_EVENT is not set
+CONFIG_IPMI_DEVICE_INTERFACE=m
+CONFIG_IPMI_SI=m
+CONFIG_IPMI_WATCHDOG=m
+CONFIG_IPMI_POWEROFF=m
+CONFIG_HW_RANDOM=m
+# CONFIG_HW_RANDOM_TIMERIOMEM is not set
+# CONFIG_R3964 is not set
+CONFIG_RAW_DRIVER=y
+CONFIG_MAX_RAW_DEVS=8192
+# CONFIG_TCG_TPM is not set
+# CONFIG_RAMOOPS is not set
+CONFIG_I2C=y
+CONFIG_I2C_BOARDINFO=y
+CONFIG_I2C_COMPAT=y
+# CONFIG_I2C_CHARDEV is not set
+CONFIG_I2C_HELPER_AUTO=y
+
+#
+# I2C Hardware Bus support
+#
+
+#
+# I2C system bus drivers (mostly embedded / system-on-chip)
+#
+# CONFIG_I2C_DESIGNWARE is not set
+# CONFIG_I2C_GPIO is not set
+CONFIG_I2C_MXS=y
+CONFIG_I2C_MXS_SELECT0=y
+# CONFIG_I2C_MXS_SELECT0_PIOQUEUE_MODE is not set
+# CONFIG_I2C_MXS_SELECT1 is not set
+# CONFIG_I2C_OCORES is not set
+# CONFIG_I2C_PCA_PLATFORM is not set
+# CONFIG_I2C_SIMTEC is not set
+# CONFIG_I2C_XILINX is not set
+
+#
+# External I2C/SMBus adapter drivers
+#
+# CONFIG_I2C_PARPORT_LIGHT is not set
+# CONFIG_I2C_TAOS_EVM is not set
+# CONFIG_I2C_TINY_USB is not set
+
+#
+# Other I2C/SMBus bus drivers
+#
+# CONFIG_I2C_STUB is not set
+# CONFIG_I2C_DEBUG_CORE is not set
+# CONFIG_I2C_DEBUG_ALGO is not set
+# CONFIG_I2C_DEBUG_BUS is not set
+CONFIG_SPI=y
+CONFIG_SPI_MASTER=y
+
+#
+# SPI Master Controller Drivers
+#
+# CONFIG_SPI_BITBANG is not set
+# CONFIG_SPI_GPIO is not set
+# CONFIG_SPI_XILINX is not set
+CONFIG_SPI_MXS=y
+# CONFIG_SPI_DESIGNWARE is not set
+
+#
+# SPI Protocol Masters
+#
+# CONFIG_SPI_SPIDEV is not set
+# CONFIG_SPI_TLE62X0 is not set
+
+#
+# PPS support
+#
+# CONFIG_PPS is not set
+CONFIG_ARCH_REQUIRE_GPIOLIB=y
+CONFIG_GPIOLIB=y
+# CONFIG_GPIO_SYSFS is not set
+
+#
+# Memory mapped GPIO expanders:
+#
+# CONFIG_GPIO_IT8761E is not set
+
+#
+# I2C GPIO expanders:
+#
+# CONFIG_GPIO_MAX7300 is not set
+# CONFIG_GPIO_MAX732X is not set
+# CONFIG_GPIO_PCA953X is not set
+# CONFIG_GPIO_PCF857X is not set
+# CONFIG_GPIO_ADP5588 is not set
+
+#
+# PCI GPIO expanders:
+#
+
+#
+# SPI GPIO expanders:
+#
+# CONFIG_GPIO_MAX7301 is not set
+# CONFIG_GPIO_MCP23S08 is not set
+# CONFIG_GPIO_MC33880 is not set
+
+#
+# AC97 GPIO expanders:
+#
+
+#
+# MODULbus GPIO expanders:
+#
+# CONFIG_W1 is not set
+CONFIG_POWER_SUPPLY=y
+# CONFIG_POWER_SUPPLY_DEBUG is not set
+# CONFIG_PDA_POWER is not set
+# CONFIG_TEST_POWER is not set
+# CONFIG_BATTERY_DS2760 is not set
+# CONFIG_BATTERY_DS2782 is not set
+# CONFIG_BATTERY_BQ27x00 is not set
+# CONFIG_BATTERY_MAX17040 is not set
+CONFIG_BATTERY_MXS=y
+# CONFIG_MXS_VBUS_CURRENT_DRAW is not set
+# CONFIG_BATTERY_DS2438 is not set
+# CONFIG_HWMON is not set
+# CONFIG_THERMAL is not set
+CONFIG_WATCHDOG=y
+# CONFIG_WATCHDOG_NOWAYOUT is not set
+
+#
+# Watchdog Device Drivers
+#
+# CONFIG_SOFT_WATCHDOG is not set
+CONFIG_MXS_WATCHDOG=y
+# CONFIG_MAX63XX_WATCHDOG is not set
+
+#
+# USB-based Watchdog Cards
+#
+# CONFIG_USBPCWATCHDOG is not set
+CONFIG_SSB_POSSIBLE=y
+
+#
+# Sonics Silicon Backplane
+#
+CONFIG_SSB=m
+CONFIG_SSB_SDIOHOST_POSSIBLE=y
+# CONFIG_SSB_SDIOHOST is not set
+# CONFIG_SSB_DEBUG is not set
+CONFIG_MFD_SUPPORT=y
+# CONFIG_MFD_CORE is not set
+# CONFIG_MFD_88PM860X is not set
+# CONFIG_MFD_SM501 is not set
+# CONFIG_MFD_ASIC3 is not set
+# CONFIG_HTC_EGPIO is not set
+# CONFIG_HTC_PASIC3 is not set
+# CONFIG_HTC_I2CPLD is not set
+# CONFIG_TPS65010 is not set
+# CONFIG_TPS6507X is not set
+# CONFIG_TWL4030_CORE is not set
+# CONFIG_MFD_TC35892 is not set
+# CONFIG_MFD_TMIO is not set
+# CONFIG_MFD_T7L66XB is not set
+# CONFIG_MFD_TC6387XB is not set
+# CONFIG_MFD_TC6393XB is not set
+# CONFIG_PMIC_DA903X is not set
+# CONFIG_PMIC_ADP5520 is not set
+# CONFIG_MFD_MAX8925 is not set
+# CONFIG_MFD_WM8400 is not set
+# CONFIG_MFD_WM831X is not set
+# CONFIG_MFD_WM8350_I2C is not set
+# CONFIG_MFD_WM8994 is not set
+# CONFIG_MFD_LTC3589_I2C is not set
+# CONFIG_MFD_PCF50633 is not set
+# CONFIG_MFD_MC13783 is not set
+# CONFIG_ABX500_CORE is not set
+# CONFIG_EZX_PCAP is not set
+# CONFIG_AB8500_CORE is not set
+# CONFIG_MFD_MAX17135 is not set
+CONFIG_REGULATOR=y
+# CONFIG_REGULATOR_DEBUG is not set
+# CONFIG_REGULATOR_DUMMY is not set
+# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
+# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
+# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
+# CONFIG_REGULATOR_BQ24022 is not set
+# CONFIG_REGULATOR_MAX1586 is not set
+# CONFIG_REGULATOR_MAX8649 is not set
+# CONFIG_REGULATOR_MAX8660 is not set
+# CONFIG_REGULATOR_LP3971 is not set
+# CONFIG_REGULATOR_TPS65023 is not set
+# CONFIG_REGULATOR_TPS6507X is not set
+CONFIG_REGULATOR_MXS=y
+CONFIG_MEDIA_SUPPORT=y
+
+#
+# Multimedia core support
+#
+CONFIG_VIDEO_DEV=y
+CONFIG_VIDEO_V4L2_COMMON=y
+# CONFIG_VIDEO_ALLOW_V4L1 is not set
+CONFIG_VIDEO_V4L1_COMPAT=y
+# CONFIG_DVB_CORE is not set
+CONFIG_VIDEO_MEDIA=y
+
+#
+# Multimedia drivers
+#
+CONFIG_IR_CORE=y
+CONFIG_VIDEO_IR=y
+CONFIG_RC_MAP=y
+CONFIG_IR_NEC_DECODER=y
+CONFIG_IR_RC5_DECODER=y
+CONFIG_IR_RC6_DECODER=y
+CONFIG_IR_JVC_DECODER=y
+CONFIG_IR_SONY_DECODER=y
+# CONFIG_IR_IMON is not set
+# CONFIG_MEDIA_ATTACH is not set
+CONFIG_MEDIA_TUNER=y
+# CONFIG_MEDIA_TUNER_CUSTOMISE is not set
+CONFIG_MEDIA_TUNER_SIMPLE=y
+CONFIG_MEDIA_TUNER_TDA8290=y
+CONFIG_MEDIA_TUNER_TDA9887=y
+CONFIG_MEDIA_TUNER_TEA5761=y
+CONFIG_MEDIA_TUNER_TEA5767=y
+CONFIG_MEDIA_TUNER_MT20XX=y
+CONFIG_MEDIA_TUNER_XC2028=y
+CONFIG_MEDIA_TUNER_XC5000=y
+CONFIG_MEDIA_TUNER_MC44S803=y
+CONFIG_VIDEO_V4L2=y
+CONFIG_VIDEOBUF_GEN=y
+CONFIG_VIDEOBUF_DMA_CONTIG=y
+CONFIG_VIDEO_CAPTURE_DRIVERS=y
+# CONFIG_VIDEO_ADV_DEBUG is not set
+# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
+# CONFIG_VIDEO_HELPER_CHIPS_AUTO is not set
+CONFIG_VIDEO_IR_I2C=y
+
+#
+# Encoders/decoders and other helper chips
+#
+
+#
+# Audio decoders
+#
+# CONFIG_VIDEO_TVAUDIO is not set
+# CONFIG_VIDEO_TDA7432 is not set
+# CONFIG_VIDEO_TDA9840 is not set
+# CONFIG_VIDEO_TDA9875 is not set
+# CONFIG_VIDEO_TEA6415C is not set
+# CONFIG_VIDEO_TEA6420 is not set
+# CONFIG_VIDEO_MSP3400 is not set
+# CONFIG_VIDEO_CS5345 is not set
+# CONFIG_VIDEO_CS53L32A is not set
+# CONFIG_VIDEO_M52790 is not set
+# CONFIG_VIDEO_TLV320AIC23B is not set
+# CONFIG_VIDEO_WM8775 is not set
+# CONFIG_VIDEO_WM8739 is not set
+# CONFIG_VIDEO_VP27SMPX is not set
+
+#
+# RDS decoders
+#
+# CONFIG_VIDEO_SAA6588 is not set
+
+#
+# Video decoders
+#
+# CONFIG_VIDEO_ADV7180 is not set
+# CONFIG_VIDEO_BT819 is not set
+# CONFIG_VIDEO_BT856 is not set
+# CONFIG_VIDEO_BT866 is not set
+# CONFIG_VIDEO_KS0127 is not set
+# CONFIG_VIDEO_OV7670 is not set
+# CONFIG_VIDEO_MT9V011 is not set
+# CONFIG_VIDEO_TCM825X is not set
+# CONFIG_VIDEO_SAA7110 is not set
+# CONFIG_VIDEO_SAA711X is not set
+# CONFIG_VIDEO_SAA717X is not set
+# CONFIG_VIDEO_SAA7191 is not set
+# CONFIG_VIDEO_TVP514X is not set
+# CONFIG_VIDEO_TVP5150 is not set
+# CONFIG_VIDEO_TVP7002 is not set
+# CONFIG_VIDEO_VPX3220 is not set
+
+#
+# Video and audio decoders
+#
+# CONFIG_VIDEO_CX25840 is not set
+
+#
+# MPEG video encoders
+#
+# CONFIG_VIDEO_CX2341X is not set
+
+#
+# Video encoders
+#
+# CONFIG_VIDEO_SAA7127 is not set
+# CONFIG_VIDEO_SAA7185 is not set
+# CONFIG_VIDEO_ADV7170 is not set
+# CONFIG_VIDEO_ADV7175 is not set
+# CONFIG_VIDEO_THS7303 is not set
+# CONFIG_VIDEO_ADV7343 is not set
+# CONFIG_VIDEO_AK881X is not set
+
+#
+# Video improvement chips
+#
+# CONFIG_VIDEO_UPD64031A is not set
+# CONFIG_VIDEO_UPD64083 is not set
+CONFIG_VIDEO_MXS_PXP=y
+# CONFIG_VIDEO_SAA5246A is not set
+# CONFIG_VIDEO_SAA5249 is not set
+# CONFIG_SOC_CAMERA is not set
+# CONFIG_V4L_USB_DRIVERS is not set
+# CONFIG_V4L_MEM2MEM_DRIVERS is not set
+# CONFIG_RADIO_ADAPTERS is not set
+# CONFIG_DAB is not set
+
+#
+# Graphics support
+#
+# CONFIG_VGASTATE is not set
+# CONFIG_VIDEO_OUTPUT_CONTROL is not set
+CONFIG_FB=y
+# CONFIG_FIRMWARE_EDID is not set
+# CONFIG_FB_DDC is not set
+# CONFIG_FB_BOOT_VESA_SUPPORT is not set
+CONFIG_FB_CFB_FILLRECT=y
+CONFIG_FB_CFB_COPYAREA=y
+CONFIG_FB_CFB_IMAGEBLIT=y
+# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
+# CONFIG_FB_SYS_FILLRECT is not set
+# CONFIG_FB_SYS_COPYAREA is not set
+# CONFIG_FB_SYS_IMAGEBLIT is not set
+# CONFIG_FB_FOREIGN_ENDIAN is not set
+# CONFIG_FB_SYS_FOPS is not set
+# CONFIG_FB_SVGALIB is not set
+# CONFIG_FB_MACMODES is not set
+# CONFIG_FB_BACKLIGHT is not set
+# CONFIG_FB_MODE_HELPERS is not set
+# CONFIG_FB_TILEBLITTING is not set
+
+#
+# Frame buffer hardware drivers
+#
+CONFIG_FB_MXS=y
+CONFIG_FB_MXS_LCD_43WVF1G=y
+CONFIG_FB_MXS_LCD_TIONPRO28=y
+# CONFIG_FB_MXS_LCD_LMS430 is not set
+# CONFIG_FB_MXS_TVENC is not set
+# CONFIG_FB_S1D13XXX is not set
+# CONFIG_FB_VIRTUAL is not set
+# CONFIG_FB_METRONOME is not set
+# CONFIG_FB_MB862XX is not set
+# CONFIG_FB_BROADSHEET is not set
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+# CONFIG_LCD_CLASS_DEVICE is not set
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+# CONFIG_BACKLIGHT_GENERIC is not set
+# CONFIG_BACKLIGHT_ADP8860 is not set
+CONFIG_BACKLIGHT_MXS=y
+
+#
+# Display device support
+#
+# CONFIG_DISPLAY_SUPPORT is not set
+
+#
+# Console display driver support
+#
+# CONFIG_VGA_CONSOLE is not set
+CONFIG_DUMMY_CONSOLE=y
+CONFIG_FRAMEBUFFER_CONSOLE=y
+# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
+# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
+# CONFIG_FONTS is not set
+CONFIG_FONT_8x8=y
+CONFIG_FONT_8x16=y
+CONFIG_LOGO=y
+# CONFIG_LOGO_LINUX_MONO is not set
+# CONFIG_LOGO_LINUX_VGA16 is not set
+CONFIG_LOGO_LINUX_CLUT224=y
+CONFIG_SOUND=y
+# CONFIG_SOUND_OSS_CORE is not set
+CONFIG_SND=y
+CONFIG_SND_TIMER=y
+CONFIG_SND_PCM=y
+CONFIG_SND_JACK=y
+# CONFIG_SND_SEQUENCER is not set
+# CONFIG_SND_MIXER_OSS is not set
+# CONFIG_SND_PCM_OSS is not set
+# CONFIG_SND_HRTIMER is not set
+# CONFIG_SND_DYNAMIC_MINORS is not set
+CONFIG_SND_SUPPORT_OLD_API=y
+CONFIG_SND_VERBOSE_PROCFS=y
+# CONFIG_SND_VERBOSE_PRINTK is not set
+# CONFIG_SND_DEBUG is not set
+# CONFIG_SND_RAWMIDI_SEQ is not set
+# CONFIG_SND_OPL3_LIB_SEQ is not set
+# CONFIG_SND_OPL4_LIB_SEQ is not set
+# CONFIG_SND_SBAWE_SEQ is not set
+# CONFIG_SND_EMU10K1_SEQ is not set
+# CONFIG_SND_DRIVERS is not set
+# CONFIG_SND_ARM is not set
+CONFIG_SND_SPI=y
+# CONFIG_SND_USB is not set
+CONFIG_SND_SOC=y
+CONFIG_SND_MXS_SOC=y
+CONFIG_SND_MXS_SOC_SPDIF_DAI=y
+CONFIG_SND_MXS_SOC_EVK_DEVB=y
+CONFIG_SND_MXS_SOC_DAI=y
+CONFIG_SND_MXS_SOC_EVK_DEVB_SPDIF=y
+CONFIG_SND_SOC_I2C_AND_SPI=y
+# CONFIG_SND_SOC_ALL_CODECS is not set
+CONFIG_SND_SOC_SGTL5000=y
+CONFIG_SND_SOC_MXS_SPDIF=y
+# CONFIG_SOUND_PRIME is not set
+CONFIG_HID_SUPPORT=y
+CONFIG_HID=y
+# CONFIG_HIDRAW is not set
+
+#
+# USB Input Devices
+#
+CONFIG_USB_HID=y
+# CONFIG_HID_PID is not set
+CONFIG_USB_HIDDEV=y
+
+#
+# Special HID drivers
+#
+# CONFIG_HID_3M_PCT is not set
+CONFIG_HID_A4TECH=y
+CONFIG_HID_APPLE=y
+CONFIG_HID_BELKIN=y
+# CONFIG_HID_CANDO is not set
+CONFIG_HID_CHERRY=y
+CONFIG_HID_CHICONY=y
+# CONFIG_HID_PRODIKEYS is not set
+CONFIG_HID_CYPRESS=y
+CONFIG_HID_DRAGONRISE=y
+# CONFIG_DRAGONRISE_FF is not set
+# CONFIG_HID_EGALAX is not set
+CONFIG_HID_EZKEY=y
+CONFIG_HID_KYE=y
+CONFIG_HID_GYRATION=y
+# CONFIG_HID_TWINHAN is not set
+CONFIG_HID_KENSINGTON=y
+CONFIG_HID_LOGITECH=y
+# CONFIG_LOGITECH_FF is not set
+# CONFIG_LOGIRUMBLEPAD2_FF is not set
+# CONFIG_LOGIG940_FF is not set
+CONFIG_HID_MICROSOFT=y
+# CONFIG_HID_MOSART is not set
+CONFIG_HID_MONTEREY=y
+CONFIG_HID_NTRIG=y
+# CONFIG_HID_ORTEK is not set
+CONFIG_HID_PANTHERLORD=y
+# CONFIG_PANTHERLORD_FF is not set
+CONFIG_HID_PETALYNX=y
+# CONFIG_HID_PICOLCD is not set
+# CONFIG_HID_QUANTA is not set
+# CONFIG_HID_ROCCAT is not set
+# CONFIG_HID_ROCCAT_KONE is not set
+CONFIG_HID_SAMSUNG=y
+CONFIG_HID_SONY=y
+# CONFIG_HID_STANTUM is not set
+CONFIG_HID_SUNPLUS=y
+CONFIG_HID_GREENASIA=y
+# CONFIG_GREENASIA_FF is not set
+CONFIG_HID_SMARTJOYPLUS=y
+# CONFIG_SMARTJOYPLUS_FF is not set
+CONFIG_HID_TOPSEED=y
+CONFIG_HID_THRUSTMASTER=y
+# CONFIG_THRUSTMASTER_FF is not set
+CONFIG_HID_ZEROPLUS=y
+# CONFIG_ZEROPLUS_FF is not set
+# CONFIG_HID_ZYDACRON is not set
+CONFIG_USB_SUPPORT=y
+CONFIG_USB_ARCH_HAS_HCD=y
+# CONFIG_USB_ARCH_HAS_OHCI is not set
+CONFIG_USB_ARCH_HAS_EHCI=y
+CONFIG_USB=y
+# CONFIG_USB_DEBUG is not set
+# CONFIG_USB_ANNOUNCE_NEW_DEVICES is not set
+
+#
+# Miscellaneous USB options
+#
+# CONFIG_USB_DEVICEFS is not set
+# CONFIG_USB_DEVICE_CLASS is not set
+# CONFIG_USB_DYNAMIC_MINORS is not set
+CONFIG_USB_SUSPEND=y
+CONFIG_USB_OTG=y
+# CONFIG_USB_OTG_WHITELIST is not set
+# CONFIG_USB_OTG_BLACKLIST_HUB is not set
+# CONFIG_USB_MON is not set
+# CONFIG_USB_WUSB is not set
+# CONFIG_USB_WUSB_CBAF is not set
+
+#
+# USB Host Controller Drivers
+#
+# CONFIG_USB_C67X00_HCD is not set
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_ARC=y
+CONFIG_USB_EHCI_ARC_H1=y
+CONFIG_USB_EHCI_ARC_OTG=y
+# CONFIG_USB_STATIC_IRAM is not set
+# CONFIG_USB_EHCI_FSL_MC13783 is not set
+# CONFIG_USB_EHCI_FSL_1301 is not set
+# CONFIG_USB_EHCI_FSL_1504 is not set
+CONFIG_USB_EHCI_FSL_UTMI=y
+CONFIG_USB_EHCI_ROOT_HUB_TT=y
+# CONFIG_USB_EHCI_TT_NEWSCHED is not set
+# CONFIG_USB_OXU210HP_HCD is not set
+# CONFIG_USB_ISP116X_HCD is not set
+# CONFIG_USB_ISP1760_HCD is not set
+# CONFIG_USB_ISP1362_HCD is not set
+# CONFIG_USB_SL811_HCD is not set
+# CONFIG_USB_R8A66597_HCD is not set
+# CONFIG_USB_HWA_HCD is not set
+# CONFIG_USB_MUSB_HDRC is not set
+# CONFIG_USB_GADGET_MUSB_HDRC is not set
+
+#
+# USB Device Class drivers
+#
+# CONFIG_USB_ACM is not set
+# CONFIG_USB_PRINTER is not set
+# CONFIG_USB_WDM is not set
+# CONFIG_USB_TMC is not set
+
+#
+# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
+#
+
+#
+# also be needed; see USB_STORAGE Help for more info
+#
+CONFIG_USB_STORAGE=y
+# CONFIG_USB_STORAGE_DEBUG is not set
+# CONFIG_USB_STORAGE_DATAFAB is not set
+# CONFIG_USB_STORAGE_FREECOM is not set
+# CONFIG_USB_STORAGE_ISD200 is not set
+# CONFIG_USB_STORAGE_USBAT is not set
+# CONFIG_USB_STORAGE_SDDR09 is not set
+# CONFIG_USB_STORAGE_SDDR55 is not set
+# CONFIG_USB_STORAGE_JUMPSHOT is not set
+# CONFIG_USB_STORAGE_ALAUDA is not set
+# CONFIG_USB_STORAGE_ONETOUCH is not set
+# CONFIG_USB_STORAGE_KARMA is not set
+# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
+# CONFIG_USB_LIBUSUAL is not set
+
+#
+# USB Imaging devices
+#
+# CONFIG_USB_MDC800 is not set
+# CONFIG_USB_MICROTEK is not set
+
+#
+# USB port drivers
+#
+# CONFIG_USB_SERIAL is not set
+
+#
+# USB Miscellaneous drivers
+#
+# CONFIG_USB_EMI62 is not set
+# CONFIG_USB_EMI26 is not set
+# CONFIG_USB_ADUTUX is not set
+# CONFIG_USB_SEVSEG is not set
+# CONFIG_USB_RIO500 is not set
+# CONFIG_USB_LEGOTOWER is not set
+# CONFIG_USB_LCD is not set
+# CONFIG_USB_LED is not set
+# CONFIG_USB_CYPRESS_CY7C63 is not set
+# CONFIG_USB_CYTHERM is not set
+# CONFIG_USB_IDMOUSE is not set
+# CONFIG_USB_FTDI_ELAN is not set
+# CONFIG_USB_APPLEDISPLAY is not set
+# CONFIG_USB_SISUSBVGA is not set
+# CONFIG_USB_LD is not set
+# CONFIG_USB_TRANCEVIBRATOR is not set
+# CONFIG_USB_IOWARRIOR is not set
+# CONFIG_USB_TEST is not set
+# CONFIG_USB_ISIGHTFW is not set
+CONFIG_USB_GADGET=y
+# CONFIG_USB_GADGET_DEBUG_FILES is not set
+# CONFIG_USB_GADGET_DEBUG_FS is not set
+CONFIG_USB_GADGET_VBUS_DRAW=2
+CONFIG_USB_GADGET_SELECTED=y
+# CONFIG_USB_GADGET_AT91 is not set
+# CONFIG_USB_GADGET_ATMEL_USBA is not set
+# CONFIG_USB_GADGET_FSL_USB2 is not set
+# CONFIG_USB_GADGET_LH7A40X is not set
+# CONFIG_USB_GADGET_OMAP is not set
+# CONFIG_USB_GADGET_PXA25X is not set
+# CONFIG_USB_GADGET_R8A66597 is not set
+# CONFIG_USB_GADGET_PXA27X is not set
+# CONFIG_USB_GADGET_S3C_HSOTG is not set
+# CONFIG_USB_GADGET_IMX is not set
+# CONFIG_USB_GADGET_S3C2410 is not set
+# CONFIG_USB_GADGET_M66592 is not set
+# CONFIG_USB_GADGET_AMD5536UDC is not set
+# CONFIG_USB_GADGET_FSL_QE is not set
+# CONFIG_USB_GADGET_CI13XXX is not set
+# CONFIG_USB_GADGET_NET2280 is not set
+# CONFIG_USB_GADGET_GOKU is not set
+CONFIG_USB_GADGET_ARC=y
+CONFIG_USB_ARC=y
+# CONFIG_USB_GADGET_LANGWELL is not set
+# CONFIG_USB_GADGET_DUMMY_HCD is not set
+CONFIG_USB_GADGET_DUALSPEED=y
+# CONFIG_USB_ZERO is not set
+# CONFIG_USB_AUDIO is not set
+CONFIG_USB_ETH=m
+CONFIG_USB_ETH_RNDIS=y
+# CONFIG_USB_ETH_EEM is not set
+# CONFIG_USB_GADGETFS is not set
+# CONFIG_USB_FUNCTIONFS is not set
+CONFIG_USB_FILE_STORAGE=m
+# CONFIG_FSL_UTP is not set
+# CONFIG_USB_FILE_STORAGE_TEST is not set
+# CONFIG_USB_MASS_STORAGE is not set
+CONFIG_USB_G_SERIAL=m
+# CONFIG_USB_MIDI_GADGET is not set
+# CONFIG_USB_G_PRINTER is not set
+# CONFIG_USB_CDC_COMPOSITE is not set
+# CONFIG_USB_G_NOKIA is not set
+# CONFIG_USB_G_MULTI is not set
+# CONFIG_USB_G_HID is not set
+# CONFIG_USB_G_WEBCAM is not set
+
+#
+# OTG and related infrastructure
+#
+CONFIG_USB_OTG_UTILS=y
+# CONFIG_USB_GPIO_VBUS is not set
+# CONFIG_USB_ULPI is not set
+# CONFIG_NOP_USB_XCEIV is not set
+CONFIG_MXC_OTG=y
+CONFIG_MMC=y
+# CONFIG_MMC_DEBUG is not set
+CONFIG_MMC_UNSAFE_RESUME=y
+
+#
+# MMC/SD/SDIO Card Drivers
+#
+CONFIG_MMC_BLOCK=y
+CONFIG_MMC_BLOCK_BOUNCE=y
+# CONFIG_SDIO_UART is not set
+# CONFIG_MMC_TEST is not set
+
+#
+# MMC/SD/SDIO Host Controller Drivers
+#
+# CONFIG_MMC_SDHCI is not set
+# CONFIG_MMC_SPI is not set
+# CONFIG_MMC_IMX_ESDHCI_PIO_MODE is not set
+CONFIG_MMC_MXS=y
+# CONFIG_MEMSTICK is not set
+CONFIG_NEW_LEDS=y
+CONFIG_LEDS_CLASS=y
+
+#
+# LED drivers
+#
+CONFIG_LEDS_MXS=y
+# CONFIG_LEDS_PCA9532 is not set
+# CONFIG_LEDS_GPIO is not set
+# CONFIG_LEDS_LP3944 is not set
+# CONFIG_LEDS_PCA955X is not set
+# CONFIG_LEDS_DAC124S085 is not set
+# CONFIG_LEDS_REGULATOR is not set
+# CONFIG_LEDS_BD2802 is not set
+# CONFIG_LEDS_LT3593 is not set
+# CONFIG_LEDS_TRIGGERS is not set
+# CONFIG_ACCESSIBILITY is not set
+CONFIG_RTC_LIB=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HCTOSYS=y
+CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
+CONFIG_RTC_DEBUG=y
+
+#
+# RTC interfaces
+#
+CONFIG_RTC_INTF_SYSFS=y
+CONFIG_RTC_INTF_PROC=y
+CONFIG_RTC_INTF_DEV=y
+# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
+# CONFIG_RTC_DRV_TEST is not set
+
+#
+# I2C RTC drivers
+#
+CONFIG_RTC_DRV_DS1307=y
+# CONFIG_RTC_DRV_DS1374 is not set
+# CONFIG_RTC_DRV_DS1672 is not set
+# CONFIG_RTC_DRV_MAX6900 is not set
+# CONFIG_RTC_DRV_RS5C372 is not set
+# CONFIG_RTC_DRV_ISL1208 is not set
+# CONFIG_RTC_DRV_X1205 is not set
+# CONFIG_RTC_DRV_PCF8563 is not set
+# CONFIG_RTC_DRV_PCF8583 is not set
+# CONFIG_RTC_DRV_M41T80 is not set
+# CONFIG_RTC_DRV_BQ32K is not set
+# CONFIG_RTC_DRV_S35390A is not set
+# CONFIG_RTC_DRV_FM3130 is not set
+# CONFIG_RTC_DRV_RX8581 is not set
+# CONFIG_RTC_DRV_RX8025 is not set
+
+#
+# SPI RTC drivers
+#
+# CONFIG_RTC_DRV_M41T94 is not set
+# CONFIG_RTC_DRV_DS1305 is not set
+# CONFIG_RTC_DRV_DS1390 is not set
+# CONFIG_RTC_DRV_MAX6902 is not set
+# CONFIG_RTC_DRV_R9701 is not set
+# CONFIG_RTC_DRV_RS5C348 is not set
+# CONFIG_RTC_DRV_DS3234 is not set
+# CONFIG_RTC_DRV_PCF2123 is not set
+
+#
+# Platform RTC drivers
+#
+# CONFIG_RTC_DRV_CMOS is not set
+# CONFIG_RTC_DRV_DS1286 is not set
+# CONFIG_RTC_DRV_DS1511 is not set
+# CONFIG_RTC_DRV_DS1553 is not set
+# CONFIG_RTC_DRV_DS1742 is not set
+# CONFIG_RTC_DRV_STK17TA8 is not set
+# CONFIG_RTC_DRV_M48T86 is not set
+# CONFIG_RTC_DRV_M48T35 is not set
+# CONFIG_RTC_DRV_M48T59 is not set
+# CONFIG_RTC_DRV_MSM6242 is not set
+# CONFIG_RTC_DRV_BQ4802 is not set
+# CONFIG_RTC_DRV_RP5C01 is not set
+# CONFIG_RTC_DRV_V3020 is not set
+
+#
+# on-CPU RTC drivers
+#
+# CONFIG_RTC_DRV_MXS is not set
+CONFIG_DMADEVICES=y
+# CONFIG_DMADEVICES_DEBUG is not set
+
+#
+# DMA Devices
+#
+# CONFIG_MXC_PXP is not set
+# CONFIG_TIMB_DMA is not set
+# CONFIG_AUXDISPLAY is not set
+# CONFIG_UIO is not set
+# CONFIG_STAGING is not set
+
+#
+# File systems
+#
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_POSIX_ACL=y
+CONFIG_EXT2_FS_SECURITY=y
+# CONFIG_EXT2_FS_XIP is not set
+CONFIG_EXT3_FS=y
+CONFIG_EXT3_DEFAULTS_TO_ORDERED=y
+CONFIG_EXT3_FS_XATTR=y
+CONFIG_EXT3_FS_POSIX_ACL=y
+CONFIG_EXT3_FS_SECURITY=y
+# CONFIG_EXT4_FS is not set
+CONFIG_JBD=y
+# CONFIG_JBD_DEBUG is not set
+CONFIG_FS_MBCACHE=y
+# CONFIG_REISERFS_FS is not set
+# CONFIG_JFS_FS is not set
+CONFIG_FS_POSIX_ACL=y
+# CONFIG_XFS_FS is not set
+# CONFIG_GFS2_FS is not set
+# CONFIG_OCFS2_FS is not set
+# CONFIG_BTRFS_FS is not set
+# CONFIG_NILFS2_FS is not set
+CONFIG_FILE_LOCKING=y
+CONFIG_FSNOTIFY=y
+CONFIG_DNOTIFY=y
+# CONFIG_INOTIFY is not set
+CONFIG_INOTIFY_USER=y
+CONFIG_QUOTA=y
+# CONFIG_QUOTA_NETLINK_INTERFACE is not set
+CONFIG_PRINT_QUOTA_WARNING=y
+# CONFIG_QUOTA_DEBUG is not set
+CONFIG_QUOTA_TREE=y
+# CONFIG_QFMT_V1 is not set
+CONFIG_QFMT_V2=y
+CONFIG_QUOTACTL=y
+# CONFIG_AUTOFS_FS is not set
+CONFIG_AUTOFS4_FS=m
+# CONFIG_FUSE_FS is not set
+
+#
+# Caches
+#
+# CONFIG_FSCACHE is not set
+
+#
+# CD-ROM/DVD Filesystems
+#
+CONFIG_ISO9660_FS=y
+CONFIG_JOLIET=y
+CONFIG_ZISOFS=y
+CONFIG_UDF_FS=m
+CONFIG_UDF_NLS=y
+
+#
+# DOS/FAT/NT Filesystems
+#
+CONFIG_FAT_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+CONFIG_FAT_DEFAULT_CODEPAGE=437
+CONFIG_FAT_DEFAULT_IOCHARSET="ascii"
+# CONFIG_NTFS_FS is not set
+
+#
+# Pseudo filesystems
+#
+CONFIG_PROC_FS=y
+CONFIG_PROC_SYSCTL=y
+CONFIG_PROC_PAGE_MONITOR=y
+CONFIG_SYSFS=y
+CONFIG_TMPFS=y
+# CONFIG_TMPFS_POSIX_ACL is not set
+# CONFIG_HUGETLB_PAGE is not set
+# CONFIG_CONFIGFS_FS is not set
+CONFIG_MISC_FILESYSTEMS=y
+# CONFIG_ADFS_FS is not set
+# CONFIG_AFFS_FS is not set
+# CONFIG_ECRYPT_FS is not set
+CONFIG_HFS_FS=m
+CONFIG_HFSPLUS_FS=m
+# CONFIG_BEFS_FS is not set
+# CONFIG_BFS_FS is not set
+# CONFIG_EFS_FS is not set
+CONFIG_JFFS2_FS=y
+CONFIG_JFFS2_FS_DEBUG=0
+CONFIG_JFFS2_FS_WRITEBUFFER=y
+# CONFIG_JFFS2_FS_WBUF_VERIFY is not set
+# CONFIG_JFFS2_SUMMARY is not set
+# CONFIG_JFFS2_FS_XATTR is not set
+# CONFIG_JFFS2_COMPRESSION_OPTIONS is not set
+CONFIG_JFFS2_ZLIB=y
+# CONFIG_JFFS2_LZO is not set
+CONFIG_JFFS2_RTIME=y
+# CONFIG_JFFS2_RUBIN is not set
+CONFIG_UBIFS_FS=y
+# CONFIG_UBIFS_FS_XATTR is not set
+# CONFIG_UBIFS_FS_ADVANCED_COMPR is not set
+CONFIG_UBIFS_FS_LZO=y
+CONFIG_UBIFS_FS_ZLIB=y
+# CONFIG_UBIFS_FS_DEBUG is not set
+# CONFIG_LOGFS is not set
+CONFIG_CRAMFS=m
+# CONFIG_SQUASHFS is not set
+CONFIG_VXFS_FS=m
+# CONFIG_MINIX_FS is not set
+# CONFIG_OMFS_FS is not set
+# CONFIG_HPFS_FS is not set
+# CONFIG_QNX4FS_FS is not set
+# CONFIG_ROMFS_FS is not set
+# CONFIG_SYSV_FS is not set
+# CONFIG_UFS_FS is not set
+CONFIG_NETWORK_FILESYSTEMS=y
+CONFIG_NFS_FS=y
+CONFIG_NFS_V3=y
+# CONFIG_NFS_V3_ACL is not set
+# CONFIG_NFS_V4 is not set
+CONFIG_ROOT_NFS=y
+# CONFIG_NFSD is not set
+CONFIG_LOCKD=y
+CONFIG_LOCKD_V4=y
+CONFIG_NFS_COMMON=y
+CONFIG_SUNRPC=y
+# CONFIG_RPCSEC_GSS_KRB5 is not set
+# CONFIG_RPCSEC_GSS_SPKM3 is not set
+# CONFIG_SMB_FS is not set
+# CONFIG_CEPH_FS is not set
+# CONFIG_CIFS is not set
+# CONFIG_NCP_FS is not set
+# CONFIG_CODA_FS is not set
+# CONFIG_AFS_FS is not set
+
+#
+# Partition Types
+#
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_ACORN_PARTITION is not set
+CONFIG_OSF_PARTITION=y
+# CONFIG_AMIGA_PARTITION is not set
+# CONFIG_ATARI_PARTITION is not set
+CONFIG_MAC_PARTITION=y
+CONFIG_MSDOS_PARTITION=y
+CONFIG_BSD_DISKLABEL=y
+CONFIG_MINIX_SUBPARTITION=y
+CONFIG_SOLARIS_X86_PARTITION=y
+CONFIG_UNIXWARE_DISKLABEL=y
+# CONFIG_LDM_PARTITION is not set
+CONFIG_SGI_PARTITION=y
+# CONFIG_ULTRIX_PARTITION is not set
+CONFIG_SUN_PARTITION=y
+# CONFIG_KARMA_PARTITION is not set
+CONFIG_EFI_PARTITION=y
+# CONFIG_SYSV68_PARTITION is not set
+CONFIG_NLS=y
+CONFIG_NLS_DEFAULT="utf8"
+CONFIG_NLS_CODEPAGE_437=y
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
+CONFIG_NLS_CODEPAGE_855=m
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
+CONFIG_NLS_CODEPAGE_866=m
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
+CONFIG_NLS_CODEPAGE_1251=m
+CONFIG_NLS_ASCII=y
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
+CONFIG_NLS_ISO8859_5=m
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
+CONFIG_NLS_KOI8_R=m
+CONFIG_NLS_KOI8_U=m
+CONFIG_NLS_UTF8=m
+# CONFIG_DLM is not set
+
+#
+# Kernel hacking
+#
+# CONFIG_PRINTK_TIME is not set
+# CONFIG_ENABLE_WARN_DEPRECATED is not set
+# CONFIG_ENABLE_MUST_CHECK is not set
+CONFIG_FRAME_WARN=1024
+# CONFIG_MAGIC_SYSRQ is not set
+# CONFIG_STRIP_ASM_SYMS is not set
+# CONFIG_UNUSED_SYMBOLS is not set
+CONFIG_DEBUG_FS=y
+# CONFIG_HEADERS_CHECK is not set
+# CONFIG_DEBUG_KERNEL is not set
+# CONFIG_SLUB_DEBUG_ON is not set
+# CONFIG_SLUB_STATS is not set
+CONFIG_DEBUG_BUGVERBOSE=y
+CONFIG_DEBUG_MEMORY_INIT=y
+CONFIG_FRAME_POINTER=y
+# CONFIG_RCU_CPU_STALL_DETECTOR is not set
+# CONFIG_LKDTM is not set
+# CONFIG_LATENCYTOP is not set
+# CONFIG_SYSCTL_SYSCALL_CHECK is not set
+CONFIG_HAVE_FUNCTION_TRACER=y
+CONFIG_RING_BUFFER=y
+CONFIG_RING_BUFFER_ALLOW_SWAP=y
+CONFIG_TRACING_SUPPORT=y
+# CONFIG_FTRACE is not set
+# CONFIG_DYNAMIC_DEBUG is not set
+# CONFIG_ATOMIC64_SELFTEST is not set
+# CONFIG_SAMPLES is not set
+CONFIG_HAVE_ARCH_KGDB=y
+# CONFIG_ARM_UNWIND is not set
+# CONFIG_DEBUG_USER is not set
+# CONFIG_OC_ETM is not set
+
+#
+# Security options
+#
+CONFIG_KEYS=y
+CONFIG_KEYS_DEBUG_PROC_KEYS=y
+CONFIG_SECURITY=y
+# CONFIG_SECURITYFS is not set
+CONFIG_SECURITY_NETWORK=y
+# CONFIG_SECURITY_NETWORK_XFRM is not set
+# CONFIG_SECURITY_PATH is not set
+CONFIG_LSM_MMAP_MIN_ADDR=65536
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
+CONFIG_SECURITY_SELINUX_DISABLE=y
+CONFIG_SECURITY_SELINUX_DEVELOP=y
+CONFIG_SECURITY_SELINUX_AVC_STATS=y
+CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
+# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
+# CONFIG_SECURITY_TOMOYO is not set
+# CONFIG_IMA is not set
+CONFIG_DEFAULT_SECURITY_SELINUX=y
+# CONFIG_DEFAULT_SECURITY_SMACK is not set
+# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
+# CONFIG_DEFAULT_SECURITY_DAC is not set
+CONFIG_DEFAULT_SECURITY="selinux"
+CONFIG_CRYPTO=y
+
+#
+# Crypto core or helper
+#
+CONFIG_CRYPTO_ALGAPI=y
+CONFIG_CRYPTO_ALGAPI2=y
+CONFIG_CRYPTO_AEAD2=y
+CONFIG_CRYPTO_BLKCIPHER=y
+CONFIG_CRYPTO_BLKCIPHER2=y
+CONFIG_CRYPTO_HASH=y
+CONFIG_CRYPTO_HASH2=y
+CONFIG_CRYPTO_RNG2=y
+CONFIG_CRYPTO_PCOMP=y
+CONFIG_CRYPTO_MANAGER=y
+CONFIG_CRYPTO_MANAGER2=y
+CONFIG_CRYPTO_MANAGER_TESTS=y
+# CONFIG_CRYPTO_GF128MUL is not set
+# CONFIG_CRYPTO_NULL is not set
+CONFIG_CRYPTO_WORKQUEUE=y
+# CONFIG_CRYPTO_CRYPTD is not set
+# CONFIG_CRYPTO_AUTHENC is not set
+CONFIG_CRYPTO_TEST=m
+CONFIG_CRYPTO_CRYPTODEV=y
+
+#
+# Authenticated Encryption with Associated Data
+#
+# CONFIG_CRYPTO_CCM is not set
+# CONFIG_CRYPTO_GCM is not set
+# CONFIG_CRYPTO_SEQIV is not set
+
+#
+# Block modes
+#
+CONFIG_CRYPTO_CBC=y
+# CONFIG_CRYPTO_CTR is not set
+# CONFIG_CRYPTO_CTS is not set
+CONFIG_CRYPTO_ECB=y
+# CONFIG_CRYPTO_LRW is not set
+# CONFIG_CRYPTO_PCBC is not set
+# CONFIG_CRYPTO_XTS is not set
+
+#
+# Hash modes
+#
+CONFIG_CRYPTO_HMAC=y
+# CONFIG_CRYPTO_XCBC is not set
+# CONFIG_CRYPTO_VMAC is not set
+
+#
+# Digest
+#
+CONFIG_CRYPTO_CRC32C=m
+# CONFIG_CRYPTO_GHASH is not set
+# CONFIG_CRYPTO_MD4 is not set
+CONFIG_CRYPTO_MD5=y
+# CONFIG_CRYPTO_MICHAEL_MIC is not set
+# CONFIG_CRYPTO_RMD128 is not set
+# CONFIG_CRYPTO_RMD160 is not set
+# CONFIG_CRYPTO_RMD256 is not set
+# CONFIG_CRYPTO_RMD320 is not set
+CONFIG_CRYPTO_SHA1=m
+CONFIG_CRYPTO_SHA256=m
+# CONFIG_CRYPTO_SHA512 is not set
+# CONFIG_CRYPTO_TGR192 is not set
+# CONFIG_CRYPTO_WP512 is not set
+
+#
+# Ciphers
+#
+CONFIG_CRYPTO_AES=y
+# CONFIG_CRYPTO_ANUBIS is not set
+# CONFIG_CRYPTO_ARC4 is not set
+# CONFIG_CRYPTO_BLOWFISH is not set
+# CONFIG_CRYPTO_CAMELLIA is not set
+# CONFIG_CRYPTO_CAST5 is not set
+# CONFIG_CRYPTO_CAST6 is not set
+CONFIG_CRYPTO_DES=y
+# CONFIG_CRYPTO_FCRYPT is not set
+# CONFIG_CRYPTO_KHAZAD is not set
+# CONFIG_CRYPTO_SALSA20 is not set
+# CONFIG_CRYPTO_SEED is not set
+# CONFIG_CRYPTO_SERPENT is not set
+# CONFIG_CRYPTO_TEA is not set
+# CONFIG_CRYPTO_TWOFISH is not set
+
+#
+# Compression
+#
+CONFIG_CRYPTO_DEFLATE=y
+# CONFIG_CRYPTO_ZLIB is not set
+CONFIG_CRYPTO_LZO=y
+
+#
+# Random Number Generation
+#
+# CONFIG_CRYPTO_ANSI_CPRNG is not set
+CONFIG_CRYPTO_HW=y
+CONFIG_CRYPTO_DEV_DCP=y
+# CONFIG_BINARY_PRINTF is not set
+
+#
+# Library routines
+#
+CONFIG_BITREVERSE=y
+CONFIG_GENERIC_FIND_LAST_BIT=y
+CONFIG_CRC_CCITT=m
+CONFIG_CRC16=y
+# CONFIG_CRC_T10DIF is not set
+CONFIG_CRC_ITU_T=m
+CONFIG_CRC32=y
+# CONFIG_CRC7 is not set
+CONFIG_LIBCRC32C=m
+CONFIG_AUDIT_GENERIC=y
+CONFIG_ZLIB_INFLATE=y
+CONFIG_ZLIB_DEFLATE=y
+CONFIG_LZO_COMPRESS=y
+CONFIG_LZO_DECOMPRESS=y
+CONFIG_DECOMPRESS_GZIP=y
+CONFIG_DECOMPRESS_BZIP2=y
+CONFIG_DECOMPRESS_LZMA=y
+CONFIG_DECOMPRESS_LZO=y
+CONFIG_GENERIC_ALLOCATOR=y
+CONFIG_HAS_IOMEM=y
+CONFIG_HAS_IOPORT=y
+CONFIG_HAS_DMA=y
+CONFIG_NLATTR=y
+CONFIG_GENERIC_ATOMIC64=y
diff --git a/.gitignore b/.gitignore
index 8faa6c0..eed75bd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -49,6 +49,7 @@ modules.builtin
 #
 !.gitignore
 !.mailmap
+!.config
 
 #
 # Generated include files
-- 
1.9.1


From 6487692cb98e3c9f7c2f34a4b4a00592880de2b4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Mon, 25 Aug 2014 18:15:52 +0400
Subject: [PATCH 07/14] =?UTF-8?q?task=20#3529:=20=D0=9D=D0=B0=D0=BA=D0=BB?=
 =?UTF-8?q?=D0=B0=D0=B4=D1=8B=D0=B2=D0=B0=D1=8E=20=D0=BF=D0=B0=D1=82=D1=87?=
 =?UTF-8?q?=D0=B8=20=D0=BD=D0=B0=20FlexCAN=20https://community.freescale.c?=
 =?UTF-8?q?om/message/280645#280645?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .config                              |   13 +-
 arch/arm/mach-mx28/clock.c           |    4 +-
 arch/arm/mach-mx28/device.c          |   38 +-
 arch/arm/plat-mxs/device.c           |    6 +-
 drivers/net/can/Kconfig              |   20 +-
 drivers/net/can/Makefile             |    2 +-
 drivers/net/can/flexcan.c            | 1074 ++++++++++++++++++++++++++++++++++
 drivers/net/can/flexcan/Makefile     |    3 -
 drivers/net/can/flexcan/dev.c        |  743 -----------------------
 drivers/net/can/flexcan/drv.c        |  628 --------------------
 drivers/net/can/flexcan/flexcan.h    |  222 -------
 drivers/net/can/flexcan/mbm.c        |  361 ------------
 include/linux/can/platform/flexcan.h |   20 +
 include/linux/fsl_devices.h          |   35 --
 14 files changed, 1128 insertions(+), 2041 deletions(-)
 create mode 100644 drivers/net/can/flexcan.c
 delete mode 100644 drivers/net/can/flexcan/Makefile
 delete mode 100644 drivers/net/can/flexcan/dev.c
 delete mode 100644 drivers/net/can/flexcan/drv.c
 delete mode 100644 drivers/net/can/flexcan/flexcan.h
 delete mode 100644 drivers/net/can/flexcan/mbm.c
 create mode 100644 include/linux/can/platform/flexcan.h

diff --git a/.config b/.config
index 496b4f4..5c460f6 100644
--- a/.config
+++ b/.config
@@ -1,6 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.35.3
+# Mon Aug 25 18:14:51 2014
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -496,9 +497,17 @@ CONFIG_CAN_RAW=y
 # CAN Device Drivers
 #
 # CONFIG_CAN_VCAN is not set
-# CONFIG_CAN_DEV is not set
+CONFIG_CAN_DEV=y
+# CONFIG_CAN_CALC_BITTIMING is not set
+# CONFIG_CAN_MCP251X is not set
+# CONFIG_CAN_SJA1000 is not set
+
+#
+# CAN USB interfaces
+#
+# CONFIG_CAN_EMS_USB is not set
+CONFIG_CAN_FLEXCAN=y
 # CONFIG_CAN_DEBUG_DEVICES is not set
-CONFIG_CAN_FLEXCAN=m
 # CONFIG_IRDA is not set
 # CONFIG_BT is not set
 # CONFIG_AF_RXRPC is not set
diff --git a/arch/arm/mach-mx28/clock.c b/arch/arm/mach-mx28/clock.c
index bf0de97..5bf07a1 100644
--- a/arch/arm/mach-mx28/clock.c
+++ b/arch/arm/mach-mx28/clock.c
@@ -1819,12 +1819,12 @@ static struct clk_lookup onchip_clocks[] = {
 	 },
 	{
 	 .con_id = "can_clk",
-	 .dev_id = "FlexCAN.0",
+	 .dev_id = "imx28-flexcan.0",
 	 .clk = &flexcan_clk[0],
 	 },
 	{
 	 .con_id = "can_clk",
-	 .dev_id = "FlexCAN.1",
+	 .dev_id = "imx28-flexcan.1",
 	 .clk = &flexcan_clk[1],
 	 },
 	{
diff --git a/arch/arm/mach-mx28/device.c b/arch/arm/mach-mx28/device.c
index 6a1474d..25fa155 100644
--- a/arch/arm/mach-mx28/device.c
+++ b/arch/arm/mach-mx28/device.c
@@ -31,6 +31,7 @@
 #include <linux/fec.h>
 #include <linux/gpmi-nfc.h>
 #include <linux/fsl_devices.h>
+#include <linux/can/platform/flexcan.h>
 
 #include <asm/mach/map.h>
 
@@ -1118,7 +1119,7 @@ static void __init mx28_init_ts(void)
 #endif
 
 #if defined(CONFIG_CAN_FLEXCAN) || defined(CONFIG_CAN_FLEXCAN_MODULE)
-static void flexcan_xcvr_enable(int id, int en)
+static void flexcan_xcvr_enable(int id)
 {
 	static int pwdn;
 	if (en) {
@@ -1132,37 +1133,10 @@ static void flexcan_xcvr_enable(int id, int en)
 
 struct flexcan_platform_data flexcan_data[] = {
 	{
-	.core_reg = NULL,
-	.io_reg = NULL,
-	.xcvr_enable = flexcan_xcvr_enable,
-	.br_clksrc = 1,
-	.br_rjw = 2,
-	.br_presdiv = 2,
-	.br_propseg = 2,
-	.br_pseg1 = 3,
-	.br_pseg2 = 7,
-	.bcc = 1,
-	.srx_dis = 1,
-	.smp = 1,
-	.boff_rec = 1,
-	.ext_msg = 1,
-	.std_msg = 1,
+	.transceiver_switch = flexcan_xcvr_enable
 	},
 	{
-	.core_reg = NULL,
-	.io_reg = NULL,
-	.xcvr_enable = flexcan_xcvr_enable,
-	.br_clksrc = 1,
-	.br_rjw = 2,
-	.br_presdiv = 2,
-	.br_propseg = 2,
-	.br_pseg1 = 3,
-	.br_pseg2 = 7,
-	.bcc = 1,
-	.srx_dis = 1,
-	.boff_rec = 1,
-	.ext_msg = 1,
-	.std_msg = 1,
+	.transceiver_switch = flexcan_xcvr_enable
 	},
 };
 
@@ -1190,7 +1164,7 @@ static struct resource flexcan1_resources[] = {
 static inline void mx28_init_flexcan(void)
 {
 	struct platform_device *pdev;
-	pdev = mxs_get_device("FlexCAN", 0);
+	pdev = mxs_get_device("imx28-flexcan", 0);
 	if (pdev == NULL || IS_ERR(pdev))
 		return;
 	pdev->resource = flexcan0_resources;
@@ -1198,7 +1172,7 @@ static inline void mx28_init_flexcan(void)
 	pdev->dev.platform_data = &flexcan_data[0];
 	mxs_add_device(pdev, 2);
 
-	pdev = mxs_get_device("FlexCAN", 1);
+	pdev = mxs_get_device("imx28-flexcan", 1);
 	if (pdev == NULL || IS_ERR(pdev))
 		return;
 	pdev->resource = flexcan1_resources;
diff --git a/arch/arm/plat-mxs/device.c b/arch/arm/plat-mxs/device.c
index 87a38fa..26fdff8 100644
--- a/arch/arm/plat-mxs/device.c
+++ b/arch/arm/plat-mxs/device.c
@@ -382,14 +382,14 @@ static struct platform_device mxs_led = {
 	defined(CONFIG_CAN_FLEXCAN_MODULE)
 static struct platform_device mxs_flexcan[] = {
 	{
-	.name = "FlexCAN",
+	.name = "imx28-flexcan",
 	.id = 0,
 	.dev = {
 		.release = mxs_nop_release,
 		},
 	},
 	{
-	.name = "FlexCAN",
+	.name = "imx28-flexcan",
 	.id = 1,
 	.dev = {
 		.release = mxs_nop_release,
@@ -694,7 +694,7 @@ static struct mxs_dev_lookup dev_lookup[] = {
 #if defined(CONFIG_CAN_FLEXCAN) || \
 	defined(CONFIG_CAN_FLEXCAN_MODULE)
 	{
-	.name = "FlexCAN",
+	.name = "imx28-flexcan",
 	.size = ARRAY_SIZE(mxs_flexcan),
 	.pdev = mxs_flexcan,
 	},
diff --git a/drivers/net/can/Kconfig b/drivers/net/can/Kconfig
index 75dba17..5e98e79 100644
--- a/drivers/net/can/Kconfig
+++ b/drivers/net/can/Kconfig
@@ -73,12 +73,23 @@ config CAN_JANZ_ICAN3
 	  This driver can also be built as a module. If so, the module will be
 	  called janz-ican3.ko.
 
+
+
 source "drivers/net/can/mscan/Kconfig"
 
 source "drivers/net/can/sja1000/Kconfig"
 
 source "drivers/net/can/usb/Kconfig"
 
+config CAN_FLEXCAN
+        tristate "Freescale FlexCAN"
+        depends on CAN_DEV && (ARCH_MX25 || ARCH_MX35 || ARCH_MX28 || ARCH_MX53)
+        default y
+        ---help---
+          This select the support of Freescale CAN(FlexCAN).
+          This driver can also be built as a module.
+          If unsure, say N.
+
 config CAN_DEBUG_DEVICES
 	bool "CAN devices debugging messages"
 	depends on CAN
@@ -89,13 +100,4 @@ config CAN_DEBUG_DEVICES
 	  a problem with CAN support and want to see more of what is going
 	  on.
 
-config CAN_FLEXCAN
-        tristate "Freescale FlexCAN"
-        depends on CAN && (ARCH_MX25 || ARCH_MX35 || ARCH_MX28 || ARCH_MX53)
-        default y
-        ---help---
-          This select the support of Freescale CAN(FlexCAN).
-          This driver can also be built as a module.
-          If unsure, say N.
-
 endmenu
diff --git a/drivers/net/can/Makefile b/drivers/net/can/Makefile
index 3d7b76a..7205153 100644
--- a/drivers/net/can/Makefile
+++ b/drivers/net/can/Makefile
@@ -3,7 +3,7 @@
 #
 
 obj-$(CONFIG_CAN_VCAN)		+= vcan.o
-obj-$(CONFIG_CAN_FLEXCAN)	+= flexcan/
+obj-$(CONFIG_CAN_FLEXCAN)	+= flexcan.o
 
 obj-$(CONFIG_CAN_DEV)		+= can-dev.o
 can-dev-y			:= dev.o
diff --git a/drivers/net/can/flexcan.c b/drivers/net/can/flexcan.c
new file mode 100644
index 0000000..c216a0b
--- /dev/null
+++ b/drivers/net/can/flexcan.c
@@ -0,0 +1,1074 @@
+/*
+ * flexcan.c - FLEXCAN CAN controller driver
+ *
+ * Copyright (c) 2005-2006 Varma Electronics Oy
+ * Copyright (c) 2009 Sascha Hauer, Pengutronix
+ * Copyright (c) 2010 Marc Kleine-Budde, Pengutronix
+ *
+ * Based on code originally by Andrey Volkov <avolkov@varma-el.com>
+ *
+ * LICENCE:
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation version 2.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#include <linux/netdevice.h>
+#include <linux/can.h>
+#include <linux/can/dev.h>
+#include <linux/can/error.h>
+#include <linux/can/platform/flexcan.h>
+#include <linux/clk.h>
+#include <linux/delay.h>
+#include <linux/if_arp.h>
+#include <linux/if_ether.h>
+#include <linux/interrupt.h>
+#include <linux/io.h>
+#include <linux/kernel.h>
+#include <linux/list.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+
+#include <mach/clock.h>
+#include <mach/hardware.h>
+
+#define DRV_NAME			"flexcan"
+
+/* 8 for RX fifo and 2 error handling */
+#define FLEXCAN_NAPI_WEIGHT		(8 + 2)
+
+/* FLEXCAN module configuration register (CANMCR) bits */
+#define FLEXCAN_MCR_MDIS		BIT(31)
+#define FLEXCAN_MCR_FRZ			BIT(30)
+#define FLEXCAN_MCR_FEN			BIT(29)
+#define FLEXCAN_MCR_HALT		BIT(28)
+#define FLEXCAN_MCR_NOT_RDY		BIT(27)
+#define FLEXCAN_MCR_WAK_MSK		BIT(26)
+#define FLEXCAN_MCR_SOFTRST		BIT(25)
+#define FLEXCAN_MCR_FRZ_ACK		BIT(24)
+#define FLEXCAN_MCR_SUPV		BIT(23)
+#define FLEXCAN_MCR_SLF_WAK		BIT(22)
+#define FLEXCAN_MCR_WRN_EN		BIT(21)
+#define FLEXCAN_MCR_LPM_ACK		BIT(20)
+#define FLEXCAN_MCR_WAK_SRC		BIT(19)
+#define FLEXCAN_MCR_DOZE		BIT(18)
+#define FLEXCAN_MCR_SRX_DIS		BIT(17)
+#define FLEXCAN_MCR_BCC			BIT(16)
+#define FLEXCAN_MCR_LPRIO_EN		BIT(13)
+#define FLEXCAN_MCR_AEN			BIT(12)
+#define FLEXCAN_MCR_MAXMB(x)		((x) & 0xf)
+#define FLEXCAN_MCR_IDAM_A		(0 << 8)
+#define FLEXCAN_MCR_IDAM_B		(1 << 8)
+#define FLEXCAN_MCR_IDAM_C		(2 << 8)
+#define FLEXCAN_MCR_IDAM_D		(3 << 8)
+
+/* FLEXCAN control register (CANCTRL) bits */
+#define FLEXCAN_CTRL_PRESDIV(x)		(((x) & 0xff) << 24)
+#define FLEXCAN_CTRL_RJW(x)		(((x) & 0x03) << 22)
+#define FLEXCAN_CTRL_PSEG1(x)		(((x) & 0x07) << 19)
+#define FLEXCAN_CTRL_PSEG2(x)		(((x) & 0x07) << 16)
+#define FLEXCAN_CTRL_BOFF_MSK		BIT(15)
+#define FLEXCAN_CTRL_ERR_MSK		BIT(14)
+#define FLEXCAN_CTRL_CLK_SRC		BIT(13)
+#define FLEXCAN_CTRL_LPB		BIT(12)
+#define FLEXCAN_CTRL_TWRN_MSK		BIT(11)
+#define FLEXCAN_CTRL_RWRN_MSK		BIT(10)
+#define FLEXCAN_CTRL_SMP		BIT(7)
+#define FLEXCAN_CTRL_BOFF_REC		BIT(6)
+#define FLEXCAN_CTRL_TSYN		BIT(5)
+#define FLEXCAN_CTRL_LBUF		BIT(4)
+#define FLEXCAN_CTRL_LOM		BIT(3)
+#define FLEXCAN_CTRL_PROPSEG(x)		((x) & 0x07)
+#define FLEXCAN_CTRL_ERR_BUS		(FLEXCAN_CTRL_ERR_MSK)
+#define FLEXCAN_CTRL_ERR_STATE \
+	(FLEXCAN_CTRL_TWRN_MSK | FLEXCAN_CTRL_RWRN_MSK | \
+	 FLEXCAN_CTRL_BOFF_MSK)
+#define FLEXCAN_CTRL_ERR_ALL \
+	(FLEXCAN_CTRL_ERR_BUS | FLEXCAN_CTRL_ERR_STATE)
+
+/* FLEXCAN error and status register (ESR) bits */
+#define FLEXCAN_ESR_TWRN_INT		BIT(17)
+#define FLEXCAN_ESR_RWRN_INT		BIT(16)
+#define FLEXCAN_ESR_BIT1_ERR		BIT(15)
+#define FLEXCAN_ESR_BIT0_ERR		BIT(14)
+#define FLEXCAN_ESR_ACK_ERR		BIT(13)
+#define FLEXCAN_ESR_CRC_ERR		BIT(12)
+#define FLEXCAN_ESR_FRM_ERR		BIT(11)
+#define FLEXCAN_ESR_STF_ERR		BIT(10)
+#define FLEXCAN_ESR_TX_WRN		BIT(9)
+#define FLEXCAN_ESR_RX_WRN		BIT(8)
+#define FLEXCAN_ESR_IDLE		BIT(7)
+#define FLEXCAN_ESR_TXRX		BIT(6)
+#define FLEXCAN_EST_FLT_CONF_SHIFT	(4)
+#define FLEXCAN_ESR_FLT_CONF_MASK	(0x3 << FLEXCAN_EST_FLT_CONF_SHIFT)
+#define FLEXCAN_ESR_FLT_CONF_ACTIVE	(0x0 << FLEXCAN_EST_FLT_CONF_SHIFT)
+#define FLEXCAN_ESR_FLT_CONF_PASSIVE	(0x1 << FLEXCAN_EST_FLT_CONF_SHIFT)
+#define FLEXCAN_ESR_BOFF_INT		BIT(2)
+#define FLEXCAN_ESR_ERR_INT		BIT(1)
+#define FLEXCAN_ESR_WAK_INT		BIT(0)
+#define FLEXCAN_ESR_ERR_BUS \
+	(FLEXCAN_ESR_BIT1_ERR | FLEXCAN_ESR_BIT0_ERR | \
+	 FLEXCAN_ESR_ACK_ERR | FLEXCAN_ESR_CRC_ERR | \
+	 FLEXCAN_ESR_FRM_ERR | FLEXCAN_ESR_STF_ERR)
+#define FLEXCAN_ESR_ERR_STATE \
+	(FLEXCAN_ESR_TWRN_INT | FLEXCAN_ESR_RWRN_INT | FLEXCAN_ESR_BOFF_INT)
+#define FLEXCAN_ESR_ERR_ALL \
+	(FLEXCAN_ESR_ERR_BUS | FLEXCAN_ESR_ERR_STATE)
+
+/* FLEXCAN interrupt flag register (IFLAG) bits */
+#define FLEXCAN_TX_BUF_ID		8
+#define FLEXCAN_IFLAG_BUF(x)		BIT(x)
+#define FLEXCAN_IFLAG_RX_FIFO_OVERFLOW	BIT(7)
+#define FLEXCAN_IFLAG_RX_FIFO_WARN	BIT(6)
+#define FLEXCAN_IFLAG_RX_FIFO_AVAILABLE	BIT(5)
+#define FLEXCAN_IFLAG_DEFAULT \
+	(FLEXCAN_IFLAG_RX_FIFO_OVERFLOW | FLEXCAN_IFLAG_RX_FIFO_AVAILABLE | \
+	 FLEXCAN_IFLAG_BUF(FLEXCAN_TX_BUF_ID))
+
+/* FLEXCAN message buffers */
+#define FLEXCAN_MB_CNT_CODE(x)		(((x) & 0xf) << 24)
+#define FLEXCAN_MB_CNT_SRR		BIT(22)
+#define FLEXCAN_MB_CNT_IDE		BIT(21)
+#define FLEXCAN_MB_CNT_RTR		BIT(20)
+#define FLEXCAN_MB_CNT_LENGTH(x)	(((x) & 0xf) << 16)
+#define FLEXCAN_MB_CNT_TIMESTAMP(x)	((x) & 0xffff)
+
+#define FLEXCAN_MB_CODE_MASK		(0xf0ffffff)
+
+/* Structure of the message buffer */
+struct flexcan_mb {
+	u32 can_ctrl;
+	u32 can_id;
+	u32 data[2];
+};
+
+/* Structure of the hardware registers */
+struct flexcan_regs {
+	u32 mcr;		/* 0x00 */
+	u32 ctrl;		/* 0x04 */
+	u32 timer;		/* 0x08 */
+	u32 _reserved1;		/* 0x0c */
+	u32 rxgmask;		/* 0x10 */
+	u32 rx14mask;		/* 0x14 */
+	u32 rx15mask;		/* 0x18 */
+	u32 ecr;		/* 0x1c */
+	u32 esr;		/* 0x20 */
+	u32 imask2;		/* 0x24 */
+	u32 imask1;		/* 0x28 */
+	u32 iflag2;		/* 0x2c */
+	u32 iflag1;		/* 0x30 */
+	u32 crl2;		/* 0x34 */
+	u32 esr2;		/* 0x38 */
+	u32 _reserved2[2];
+	u32 crcr;		/* 0x44 */
+	u32 rxfgmask;		/* 0x48 */
+	u32 rxfir;		/* 0x4c */
+	u32 _reserved3[12];
+	struct flexcan_mb cantxfg[64];
+};
+
+enum flexcan_ip_version {
+	FLEXCAN_VER_3_0_0,
+	FLEXCAN_VER_3_0_4,
+	FLEXCAN_VER_10_0_12,
+};
+
+struct flexcan_priv {
+	struct can_priv can;
+	struct net_device *dev;
+	struct napi_struct napi;
+
+	void __iomem *base;
+	u32 reg_esr;
+	u32 reg_ctrl_default;
+
+	struct clk *clk;
+	struct flexcan_platform_data *pdata;
+	enum flexcan_ip_version version;
+};
+
+static struct can_bittiming_const flexcan_bittiming_const = {
+	.name = DRV_NAME,
+	.tseg1_min = 4,
+	.tseg1_max = 16,
+	.tseg2_min = 2,
+	.tseg2_max = 8,
+	.sjw_max = 4,
+	.brp_min = 1,
+	.brp_max = 256,
+	.brp_inc = 1,
+};
+
+/*
+ * Swtich transceiver on or off
+ */
+static void flexcan_transceiver_switch(const struct flexcan_priv *priv, int on)
+{
+	if (priv->pdata && priv->pdata->transceiver_switch)
+		priv->pdata->transceiver_switch(on);
+}
+
+static inline int flexcan_has_and_handle_berr(const struct flexcan_priv *priv,
+					      u32 reg_esr)
+{
+	return (priv->can.ctrlmode & CAN_CTRLMODE_BERR_REPORTING) &&
+		(reg_esr & FLEXCAN_ESR_ERR_BUS);
+}
+
+static inline void flexcan_chip_enable(struct flexcan_priv *priv)
+{
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg;
+
+	reg = readl(&regs->mcr);
+	reg &= ~FLEXCAN_MCR_MDIS;
+	writel(reg, &regs->mcr);
+
+	udelay(10);
+}
+
+static inline void flexcan_chip_disable(struct flexcan_priv *priv)
+{
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg;
+
+	reg = readl(&regs->mcr);
+	reg |= FLEXCAN_MCR_MDIS;
+	writel(reg, &regs->mcr);
+}
+
+static int flexcan_get_berr_counter(const struct net_device *dev,
+				    struct can_berr_counter *bec)
+{
+	const struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg = readl(&regs->ecr);
+
+	bec->txerr = (reg >> 0) & 0xff;
+	bec->rxerr = (reg >> 8) & 0xff;
+
+	return 0;
+}
+
+static int flexcan_start_xmit(struct sk_buff *skb, struct net_device *dev)
+{
+	const struct flexcan_priv *priv = netdev_priv(dev);
+	struct net_device_stats *stats = &dev->stats;
+	struct flexcan_regs __iomem *regs = priv->base;
+	struct can_frame *cf = (struct can_frame *)skb->data;
+	u32 can_id;
+	u32 ctrl = FLEXCAN_MB_CNT_CODE(0xc) | (cf->can_dlc << 16);
+
+	if (can_dropped_invalid_skb(dev, skb))
+		return NETDEV_TX_OK;
+
+	netif_stop_queue(dev);
+
+	if (cf->can_id & CAN_EFF_FLAG) {
+		can_id = cf->can_id & CAN_EFF_MASK;
+		ctrl |= FLEXCAN_MB_CNT_IDE | FLEXCAN_MB_CNT_SRR;
+	} else {
+		can_id = (cf->can_id & CAN_SFF_MASK) << 18;
+	}
+
+	if (cf->can_id & CAN_RTR_FLAG)
+		ctrl |= FLEXCAN_MB_CNT_RTR;
+
+	if (cf->can_dlc > 0) {
+		u32 data = be32_to_cpup((__be32 *)&cf->data[0]);
+		writel(data, &regs->cantxfg[FLEXCAN_TX_BUF_ID].data[0]);
+	}
+	if (cf->can_dlc > 3) {
+		u32 data = be32_to_cpup((__be32 *)&cf->data[4]);
+		writel(data, &regs->cantxfg[FLEXCAN_TX_BUF_ID].data[1]);
+	}
+
+	writel(can_id, &regs->cantxfg[FLEXCAN_TX_BUF_ID].can_id);
+	writel(ctrl, &regs->cantxfg[FLEXCAN_TX_BUF_ID].can_ctrl);
+
+	kfree_skb(skb);
+
+	/* tx_packets is incremented in flexcan_irq */
+	stats->tx_bytes += cf->can_dlc;
+
+	return NETDEV_TX_OK;
+}
+
+static void do_bus_err(struct net_device *dev,
+		       struct can_frame *cf, u32 reg_esr)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	int rx_errors = 0, tx_errors = 0;
+
+	cf->can_id |= CAN_ERR_PROT | CAN_ERR_BUSERROR;
+
+	if (reg_esr & FLEXCAN_ESR_BIT1_ERR) {
+		dev_dbg(dev->dev.parent, "BIT1_ERR irq\n");
+		cf->data[2] |= CAN_ERR_PROT_BIT1;
+		tx_errors = 1;
+	}
+	if (reg_esr & FLEXCAN_ESR_BIT0_ERR) {
+		dev_dbg(dev->dev.parent, "BIT0_ERR irq\n");
+		cf->data[2] |= CAN_ERR_PROT_BIT0;
+		tx_errors = 1;
+	}
+	if (reg_esr & FLEXCAN_ESR_ACK_ERR) {
+		dev_dbg(dev->dev.parent, "ACK_ERR irq\n");
+		cf->can_id |= CAN_ERR_ACK;
+		cf->data[3] |= CAN_ERR_PROT_LOC_ACK;
+		tx_errors = 1;
+	}
+	if (reg_esr & FLEXCAN_ESR_CRC_ERR) {
+		dev_dbg(dev->dev.parent, "CRC_ERR irq\n");
+		cf->data[2] |= CAN_ERR_PROT_BIT;
+		cf->data[3] |= CAN_ERR_PROT_LOC_CRC_SEQ;
+		rx_errors = 1;
+	}
+	if (reg_esr & FLEXCAN_ESR_FRM_ERR) {
+		dev_dbg(dev->dev.parent, "FRM_ERR irq\n");
+		cf->data[2] |= CAN_ERR_PROT_FORM;
+		rx_errors = 1;
+	}
+	if (reg_esr & FLEXCAN_ESR_STF_ERR) {
+		dev_dbg(dev->dev.parent, "STF_ERR irq\n");
+		cf->data[2] |= CAN_ERR_PROT_STUFF;
+		rx_errors = 1;
+	}
+
+	priv->can.can_stats.bus_error++;
+	if (rx_errors)
+		dev->stats.rx_errors++;
+	if (tx_errors)
+		dev->stats.tx_errors++;
+}
+
+static int flexcan_poll_bus_err(struct net_device *dev, u32 reg_esr)
+{
+	struct sk_buff *skb;
+	struct can_frame *cf;
+
+	skb = alloc_can_err_skb(dev, &cf);
+	if (unlikely(!skb))
+		return 0;
+
+	do_bus_err(dev, cf, reg_esr);
+	netif_receive_skb(skb);
+
+	dev->stats.rx_packets++;
+	dev->stats.rx_bytes += cf->can_dlc;
+
+	return 1;
+}
+
+static void do_state(struct net_device *dev,
+		     struct can_frame *cf, enum can_state new_state)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct can_berr_counter bec;
+
+	flexcan_get_berr_counter(dev, &bec);
+
+	switch (priv->can.state) {
+	case CAN_STATE_ERROR_ACTIVE:
+		/*
+		 * from: ERROR_ACTIVE
+		 * to  : ERROR_WARNING, ERROR_PASSIVE, BUS_OFF
+		 * =>  : there was a warning int
+		 */
+		if (new_state >= CAN_STATE_ERROR_WARNING &&
+		    new_state <= CAN_STATE_BUS_OFF) {
+			dev_dbg(dev->dev.parent, "Error Warning IRQ\n");
+			priv->can.can_stats.error_warning++;
+
+			cf->can_id |= CAN_ERR_CRTL;
+			cf->data[1] = (bec.txerr > bec.rxerr) ?
+				CAN_ERR_CRTL_TX_WARNING :
+				CAN_ERR_CRTL_RX_WARNING;
+		}
+	case CAN_STATE_ERROR_WARNING:	/* fallthrough */
+		/*
+		 * from: ERROR_ACTIVE, ERROR_WARNING
+		 * to  : ERROR_PASSIVE, BUS_OFF
+		 * =>  : error passive int
+		 */
+		if (new_state >= CAN_STATE_ERROR_PASSIVE &&
+		    new_state <= CAN_STATE_BUS_OFF) {
+			dev_dbg(dev->dev.parent, "Error Passive IRQ\n");
+			priv->can.can_stats.error_passive++;
+
+			cf->can_id |= CAN_ERR_CRTL;
+			cf->data[1] = (bec.txerr > bec.rxerr) ?
+				CAN_ERR_CRTL_TX_PASSIVE :
+				CAN_ERR_CRTL_RX_PASSIVE;
+		}
+		break;
+	case CAN_STATE_BUS_OFF:
+		dev_err(dev->dev.parent,
+			"BUG! hardware recovered automatically from BUS_OFF\n");
+		break;
+	default:
+		break;
+	}
+
+	/* process state changes depending on the new state */
+	switch (new_state) {
+	case CAN_STATE_ERROR_ACTIVE:
+		dev_dbg(dev->dev.parent, "Error Active\n");
+		cf->can_id |= CAN_ERR_PROT;
+		cf->data[2] = CAN_ERR_PROT_ACTIVE;
+		break;
+	case CAN_STATE_BUS_OFF:
+		cf->can_id |= CAN_ERR_BUSOFF;
+		can_bus_off(dev);
+		break;
+	default:
+		break;
+	}
+}
+
+static int flexcan_poll_state(struct net_device *dev, u32 reg_esr)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	struct sk_buff *skb;
+	struct can_frame *cf;
+	enum can_state new_state;
+	int flt;
+
+	/* clear state error if any (write 1 to clear)*/
+	writel(reg_esr, &regs->esr);
+
+	flt = reg_esr & FLEXCAN_ESR_FLT_CONF_MASK;
+	if (likely(flt == FLEXCAN_ESR_FLT_CONF_ACTIVE)) {
+		if (likely(!(reg_esr & (FLEXCAN_ESR_TX_WRN |
+					FLEXCAN_ESR_RX_WRN))))
+			new_state = CAN_STATE_ERROR_ACTIVE;
+		else
+			new_state = CAN_STATE_ERROR_WARNING;
+	} else if (unlikely(flt == FLEXCAN_ESR_FLT_CONF_PASSIVE))
+		new_state = CAN_STATE_ERROR_PASSIVE;
+	else
+		new_state = CAN_STATE_BUS_OFF;
+
+	/* state hasn't changed */
+	if (likely(new_state == priv->can.state))
+		return 0;
+
+	skb = alloc_can_err_skb(dev, &cf);
+	if (unlikely(!skb))
+		return 0;
+
+	do_state(dev, cf, new_state);
+	priv->can.state = new_state;
+	netif_receive_skb(skb);
+
+	dev->stats.rx_packets++;
+	dev->stats.rx_bytes += cf->can_dlc;
+
+	return 1;
+}
+
+static void flexcan_read_fifo(const struct net_device *dev,
+			      struct can_frame *cf)
+{
+	const struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	struct flexcan_mb __iomem *mb = &regs->cantxfg[0];
+	u32 reg_ctrl, reg_id;
+
+	reg_ctrl = readl(&mb->can_ctrl);
+	reg_id = readl(&mb->can_id);
+	if (reg_ctrl & FLEXCAN_MB_CNT_IDE)
+		cf->can_id = ((reg_id >> 0) & CAN_EFF_MASK) | CAN_EFF_FLAG;
+	else
+		cf->can_id = (reg_id >> 18) & CAN_SFF_MASK;
+
+	if (reg_ctrl & FLEXCAN_MB_CNT_RTR)
+		cf->can_id |= CAN_RTR_FLAG;
+	cf->can_dlc = get_can_dlc((reg_ctrl >> 16) & 0xf);
+
+	*(__be32 *)(cf->data + 0) = cpu_to_be32(readl(&mb->data[0]));
+	*(__be32 *)(cf->data + 4) = cpu_to_be32(readl(&mb->data[1]));
+
+	/* mark as read */
+	writel(FLEXCAN_IFLAG_RX_FIFO_AVAILABLE, &regs->iflag1);
+	readl(&regs->timer);
+}
+
+static int flexcan_read_frame(struct net_device *dev)
+{
+	struct net_device_stats *stats = &dev->stats;
+	struct can_frame *cf;
+	struct sk_buff *skb;
+
+	skb = alloc_can_skb(dev, &cf);
+	if (unlikely(!skb)) {
+		stats->rx_dropped++;
+		return 0;
+	}
+
+	flexcan_read_fifo(dev, cf);
+	netif_receive_skb(skb);
+
+	stats->rx_packets++;
+	stats->rx_bytes += cf->can_dlc;
+
+	return 1;
+}
+
+static int flexcan_poll(struct napi_struct *napi, int quota)
+{
+	struct net_device *dev = napi->dev;
+	const struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg_iflag1, reg_esr;
+	int work_done = 0;
+
+	/*
+	 * The error bits are cleared on read,
+	 * use saved value from irq handler.
+	 */
+	reg_esr = readl(&regs->esr) | priv->reg_esr;
+
+	/* handle state changes */
+	work_done += flexcan_poll_state(dev, reg_esr);
+
+	/* handle RX-FIFO */
+	reg_iflag1 = readl(&regs->iflag1);
+	while (reg_iflag1 & FLEXCAN_IFLAG_RX_FIFO_AVAILABLE &&
+	       work_done < quota) {
+		work_done += flexcan_read_frame(dev);
+		reg_iflag1 = readl(&regs->iflag1);
+	}
+
+	/* report bus errors */
+	if (flexcan_has_and_handle_berr(priv, reg_esr) && work_done < quota)
+		work_done += flexcan_poll_bus_err(dev, reg_esr);
+
+	if (work_done < quota) {
+		napi_complete(napi);
+		/* enable IRQs */
+		writel(FLEXCAN_IFLAG_DEFAULT, &regs->imask1);
+		writel(priv->reg_ctrl_default, &regs->ctrl);
+	}
+
+	return work_done;
+}
+
+static irqreturn_t flexcan_irq(int irq, void *dev_id)
+{
+	struct net_device *dev = dev_id;
+	struct net_device_stats *stats = &dev->stats;
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg_iflag1, reg_esr;
+
+	reg_iflag1 = readl(&regs->iflag1);
+	reg_esr = readl(&regs->esr);
+	writel(FLEXCAN_ESR_ERR_INT, &regs->esr);	/* ACK err IRQ */
+
+	/*
+	 * schedule NAPI in case of:
+	 * - rx IRQ
+	 * - state change IRQ
+	 * - bus error IRQ and bus error reporting is activated
+	 */
+	if ((reg_iflag1 & FLEXCAN_IFLAG_RX_FIFO_AVAILABLE) ||
+	    (reg_esr & FLEXCAN_ESR_ERR_STATE) ||
+	    flexcan_has_and_handle_berr(priv, reg_esr)) {
+		/*
+		 * The error bits are cleared on read,
+		 * save them for later use.
+		 */
+		priv->reg_esr = reg_esr & FLEXCAN_ESR_ERR_BUS;
+		writel(FLEXCAN_IFLAG_DEFAULT & ~FLEXCAN_IFLAG_RX_FIFO_AVAILABLE,
+		       &regs->imask1);
+		writel(priv->reg_ctrl_default & ~FLEXCAN_CTRL_ERR_ALL,
+		       &regs->ctrl);
+		napi_schedule(&priv->napi);
+	}
+
+	/* FIFO overflow */
+	if (reg_iflag1 & FLEXCAN_IFLAG_RX_FIFO_OVERFLOW) {
+		writel(FLEXCAN_IFLAG_RX_FIFO_OVERFLOW, &regs->iflag1);
+		dev->stats.rx_over_errors++;
+		dev->stats.rx_errors++;
+	}
+
+	/* transmission complete interrupt */
+	if (reg_iflag1 & (1 << FLEXCAN_TX_BUF_ID)) {
+		/* tx_bytes is incremented in flexcan_start_xmit */
+		stats->tx_packets++;
+		writel((1 << FLEXCAN_TX_BUF_ID), &regs->iflag1);
+		netif_wake_queue(dev);
+	}
+
+	return IRQ_HANDLED;
+}
+
+static void flexcan_set_bittiming(struct net_device *dev)
+{
+	const struct flexcan_priv *priv = netdev_priv(dev);
+	const struct can_bittiming *bt = &priv->can.bittiming;
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg;
+
+	reg = readl(&regs->ctrl);
+	reg &= ~(FLEXCAN_CTRL_PRESDIV(0xff) |
+		 FLEXCAN_CTRL_RJW(0x3) |
+		 FLEXCAN_CTRL_PSEG1(0x7) |
+		 FLEXCAN_CTRL_PSEG2(0x7) |
+		 FLEXCAN_CTRL_PROPSEG(0x7) |
+		 FLEXCAN_CTRL_LPB |
+		 FLEXCAN_CTRL_SMP |
+		 FLEXCAN_CTRL_LOM);
+
+	reg |= FLEXCAN_CTRL_PRESDIV(bt->brp - 1) |
+		FLEXCAN_CTRL_PSEG1(bt->phase_seg1 - 1) |
+		FLEXCAN_CTRL_PSEG2(bt->phase_seg2 - 1) |
+		FLEXCAN_CTRL_RJW(bt->sjw - 1) |
+		FLEXCAN_CTRL_PROPSEG(bt->prop_seg - 1);
+
+	if (priv->can.ctrlmode & CAN_CTRLMODE_LOOPBACK)
+		reg |= FLEXCAN_CTRL_LPB;
+	if (priv->can.ctrlmode & CAN_CTRLMODE_LISTENONLY)
+		reg |= FLEXCAN_CTRL_LOM;
+	if (priv->can.ctrlmode & CAN_CTRLMODE_3_SAMPLES)
+		reg |= FLEXCAN_CTRL_SMP;
+
+	dev_info(dev->dev.parent, "writing ctrl=0x%08x\n", reg);
+	writel(reg, &regs->ctrl);
+
+	/* print chip status */
+	dev_dbg(dev->dev.parent, "%s: mcr=0x%08x ctrl=0x%08x\n", __func__,
+		readl(&regs->mcr), readl(&regs->ctrl));
+}
+
+/*
+ * flexcan_chip_start
+ *
+ * this functions is entered with clocks enabled
+ *
+ */
+static int flexcan_chip_start(struct net_device *dev)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	unsigned int i;
+	int err;
+	u32 reg_mcr, reg_ctrl;
+
+	/* enable module */
+	flexcan_chip_enable(priv);
+
+	/* soft reset */
+	writel(FLEXCAN_MCR_SOFTRST, &regs->mcr);
+	udelay(10);
+
+	reg_mcr = readl(&regs->mcr);
+	if (reg_mcr & FLEXCAN_MCR_SOFTRST) {
+		dev_err(dev->dev.parent,
+			"Failed to softreset can module (mcr=0x%08x)\n",
+			reg_mcr);
+		err = -ENODEV;
+		goto out;
+	}
+
+	flexcan_set_bittiming(dev);
+
+	/*
+	 * MCR
+	 *
+	 * enable freeze
+	 * enable fifo
+	 * halt now
+	 * only supervisor access
+	 * enable warning int
+	 * choose format C
+	 *
+	 */
+	reg_mcr = readl(&regs->mcr);
+	reg_mcr |= FLEXCAN_MCR_FRZ | FLEXCAN_MCR_FEN | FLEXCAN_MCR_HALT |
+		FLEXCAN_MCR_SUPV | FLEXCAN_MCR_WRN_EN |
+		FLEXCAN_MCR_IDAM_C;
+	dev_dbg(dev->dev.parent, "%s: writing mcr=0x%08x", __func__, reg_mcr);
+	writel(reg_mcr, &regs->mcr);
+
+	/*
+	 * CTRL
+	 *
+	 * disable timer sync feature
+	 *
+	 * disable auto busoff recovery
+	 * transmit lowest buffer first
+	 *
+	 * enable tx and rx warning interrupt
+	 * enable bus off interrupt
+	 * (== FLEXCAN_CTRL_ERR_STATE)
+	 *
+	 * _note_: we enable the "error interrupt"
+	 * (FLEXCAN_CTRL_ERR_MSK), too. Otherwise we don't get any
+	 * warning or bus passive interrupts.
+	 */
+	reg_ctrl = readl(&regs->ctrl);
+	reg_ctrl &= ~FLEXCAN_CTRL_TSYN;
+	reg_ctrl |= FLEXCAN_CTRL_BOFF_REC | FLEXCAN_CTRL_LBUF |
+		FLEXCAN_CTRL_ERR_STATE | FLEXCAN_CTRL_ERR_MSK;
+
+	/* save for later use */
+	priv->reg_ctrl_default = reg_ctrl;
+	dev_dbg(dev->dev.parent, "%s: writing ctrl=0x%08x", __func__, reg_ctrl);
+	writel(reg_ctrl, &regs->ctrl);
+
+	for (i = 0; i < ARRAY_SIZE(regs->cantxfg); i++) {
+		writel(0, &regs->cantxfg[i].can_ctrl);
+		writel(0, &regs->cantxfg[i].can_id);
+		writel(0, &regs->cantxfg[i].data[0]);
+		writel(0, &regs->cantxfg[i].data[1]);
+
+		/* put MB into rx queue */
+		writel(FLEXCAN_MB_CNT_CODE(0x4), &regs->cantxfg[i].can_ctrl);
+	}
+
+	/* acceptance mask/acceptance code (accept everything) */
+	writel(0x0, &regs->rxgmask);
+	writel(0x0, &regs->rx14mask);
+	writel(0x0, &regs->rx15mask);
+
+	/* clear rx fifo global mask */
+	if (priv->version >= FLEXCAN_VER_10_0_12)
+		writel(0x0, &regs->rxfgmask);
+
+	flexcan_transceiver_switch(priv, 1);
+
+	/* synchronize with the can bus */
+	reg_mcr = readl(&regs->mcr);
+	reg_mcr &= ~FLEXCAN_MCR_HALT;
+	writel(reg_mcr, &regs->mcr);
+
+	priv->can.state = CAN_STATE_ERROR_ACTIVE;
+
+	/* enable FIFO interrupts */
+	writel(FLEXCAN_IFLAG_DEFAULT, &regs->imask1);
+
+	/* print chip status */
+	dev_dbg(dev->dev.parent, "%s: reading mcr=0x%08x ctrl=0x%08x\n",
+		__func__, readl(&regs->mcr), readl(&regs->ctrl));
+
+	return 0;
+
+ out:
+	flexcan_chip_disable(priv);
+	return err;
+}
+
+/*
+ * flexcan_chip_stop
+ *
+ * this functions is entered with clocks enabled
+ *
+ */
+static void flexcan_chip_stop(struct net_device *dev)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg;
+
+	/* Disable all interrupts */
+	writel(0, &regs->imask1);
+
+	/* Disable + halt module */
+	reg = readl(&regs->mcr);
+	reg |= FLEXCAN_MCR_MDIS | FLEXCAN_MCR_HALT;
+	writel(reg, &regs->mcr);
+
+	flexcan_transceiver_switch(priv, 0);
+	priv->can.state = CAN_STATE_STOPPED;
+
+	return;
+}
+
+static int flexcan_open(struct net_device *dev)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	int err;
+
+	clk_enable(priv->clk);
+
+	err = open_candev(dev);
+	if (err)
+		goto out;
+
+	err = request_irq(dev->irq, flexcan_irq, IRQF_SHARED, dev->name, dev);
+	if (err)
+		goto out_close;
+
+	/* start chip and queuing */
+	err = flexcan_chip_start(dev);
+	if (err)
+		goto out_close;
+	napi_enable(&priv->napi);
+	netif_start_queue(dev);
+
+	return 0;
+
+ out_close:
+	close_candev(dev);
+ out:
+	clk_disable(priv->clk);
+
+	return err;
+}
+
+static int flexcan_close(struct net_device *dev)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+
+	netif_stop_queue(dev);
+	napi_disable(&priv->napi);
+	flexcan_chip_stop(dev);
+
+	free_irq(dev->irq, dev);
+	clk_disable(priv->clk);
+
+	close_candev(dev);
+
+	return 0;
+}
+
+static int flexcan_set_mode(struct net_device *dev, enum can_mode mode)
+{
+	int err;
+
+	switch (mode) {
+	case CAN_MODE_START:
+		err = flexcan_chip_start(dev);
+		if (err)
+			return err;
+
+		netif_wake_queue(dev);
+		break;
+
+	default:
+		return -EOPNOTSUPP;
+	}
+
+	return 0;
+}
+
+static const struct net_device_ops flexcan_netdev_ops = {
+	.ndo_open	= flexcan_open,
+	.ndo_stop	= flexcan_close,
+	.ndo_start_xmit	= flexcan_start_xmit,
+};
+
+static int __devinit register_flexcandev(struct net_device *dev)
+{
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct flexcan_regs __iomem *regs = priv->base;
+	u32 reg, err;
+
+	clk_enable(priv->clk);
+
+	/* select "bus clock", chip must be disabled */
+	flexcan_chip_disable(priv);
+	reg = readl(&regs->ctrl);
+	reg |= FLEXCAN_CTRL_CLK_SRC;
+	writel(reg, &regs->ctrl);
+
+	flexcan_chip_enable(priv);
+
+	/* set freeze, halt and activate FIFO, restrict register access */
+	reg = readl(&regs->mcr);
+	reg |= FLEXCAN_MCR_FRZ | FLEXCAN_MCR_HALT |
+		FLEXCAN_MCR_FEN | FLEXCAN_MCR_SUPV;
+	writel(reg, &regs->mcr);
+
+	/*
+	 * Currently we only support newer versions of this core
+	 * featuring a RX FIFO. Older cores found on some Coldfire
+	 * derivates are not yet supported.
+	 */
+	reg = readl(&regs->mcr);
+	if (!(reg & FLEXCAN_MCR_FEN)) {
+		dev_err(dev->dev.parent,
+			"Could not enable RX FIFO, unsupported core\n");
+		err = -ENODEV;
+		goto out;
+	}
+
+	err = register_candev(dev);
+
+ out:
+	/* disable core and turn off clocks */
+	flexcan_chip_disable(priv);
+	clk_disable(priv->clk);
+
+	return err;
+}
+
+static void __devexit unregister_flexcandev(struct net_device *dev)
+{
+	unregister_candev(dev);
+}
+
+static struct platform_device_id flexcan_devtype[] = {
+	{
+		.name = "imx25-flexcan",
+		.driver_data = FLEXCAN_VER_3_0_0,
+	}, {
+		.name = "imx28-flexcan",
+		.driver_data = FLEXCAN_VER_3_0_4,
+	}, {
+		.name = "imx35-flexcan",
+		.driver_data = FLEXCAN_VER_3_0_0,
+	}, {
+		.name = "imx53-flexcan",
+		.driver_data = FLEXCAN_VER_3_0_0,
+	}, {
+		.name = "imx6q-flexcan",
+		.driver_data = FLEXCAN_VER_10_0_12,
+	},
+};
+
+static int __devinit flexcan_probe(struct platform_device *pdev)
+{
+	struct net_device *dev;
+	struct flexcan_priv *priv;
+	struct resource *mem;
+	struct clk *clk;
+	void __iomem *base;
+	resource_size_t mem_size;
+	int err, irq;
+
+	clk = clk_get(&pdev->dev, NULL);
+	if (IS_ERR(clk)) {
+		dev_err(&pdev->dev, "no clock defined\n");
+		err = PTR_ERR(clk);
+		goto failed_clock;
+	}
+
+	mem = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	irq = platform_get_irq(pdev, 0);
+	if (!mem || irq <= 0) {
+		err = -ENODEV;
+		goto failed_get;
+	}
+
+	mem_size = resource_size(mem);
+	if (!request_mem_region(mem->start, mem_size, pdev->name)) {
+		err = -EBUSY;
+		goto failed_req;
+	}
+
+	base = ioremap(mem->start, mem_size);
+	if (!base) {
+		err = -ENOMEM;
+		goto failed_map;
+	}
+
+	dev = alloc_candev(sizeof(struct flexcan_priv), 0);
+	if (!dev) {
+		err = -ENOMEM;
+		goto failed_alloc;
+	}
+
+	dev->netdev_ops = &flexcan_netdev_ops;
+	dev->irq = irq;
+	dev->flags |= IFF_ECHO; /* we support local echo in hardware */
+
+	priv = netdev_priv(dev);
+	priv->can.clock.freq = clk_get_rate(clk);
+	priv->can.bittiming_const = &flexcan_bittiming_const;
+	priv->can.do_set_mode = flexcan_set_mode;
+	priv->can.do_get_berr_counter = flexcan_get_berr_counter;
+	priv->can.ctrlmode_supported = CAN_CTRLMODE_LOOPBACK |
+		CAN_CTRLMODE_LISTENONLY	| CAN_CTRLMODE_3_SAMPLES |
+		CAN_CTRLMODE_BERR_REPORTING;
+	priv->base = base;
+	priv->dev = dev;
+	priv->clk = clk;
+	priv->pdata = pdev->dev.platform_data;
+	priv->version = pdev->id_entry->driver_data;
+
+	netif_napi_add(dev, &priv->napi, flexcan_poll, FLEXCAN_NAPI_WEIGHT);
+
+	dev_set_drvdata(&pdev->dev, dev);
+	SET_NETDEV_DEV(dev, &pdev->dev);
+
+	err = register_flexcandev(dev);
+	if (err) {
+		dev_err(&pdev->dev, "registering netdev failed\n");
+		goto failed_register;
+	}
+
+	dev_info(&pdev->dev, "device registered (reg_base=%p, irq=%d)\n",
+		 priv->base, dev->irq);
+
+	return 0;
+
+ failed_register:
+	free_candev(dev);
+ failed_alloc:
+	iounmap(base);
+ failed_map:
+	release_mem_region(mem->start, mem_size);
+ failed_req:
+	clk_put(clk);
+ failed_get:
+ failed_clock:
+	return err;
+}
+
+static int __devexit flexcan_remove(struct platform_device *pdev)
+{
+	struct net_device *dev = platform_get_drvdata(pdev);
+	struct flexcan_priv *priv = netdev_priv(dev);
+	struct resource *mem;
+
+	unregister_flexcandev(dev);
+	platform_set_drvdata(pdev, NULL);
+	iounmap(priv->base);
+
+	mem = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	release_mem_region(mem->start, resource_size(mem));
+
+	clk_put(priv->clk);
+
+	free_candev(dev);
+
+	return 0;
+}
+
+static struct platform_driver flexcan_driver = {
+	.driver.name = DRV_NAME,
+	.probe = flexcan_probe,
+	.id_table = flexcan_devtype,
+	.remove = __devexit_p(flexcan_remove),
+};
+
+static int __init flexcan_init(void)
+{
+	pr_info("%s netdevice driver\n", DRV_NAME);
+	return platform_driver_register(&flexcan_driver);
+}
+
+static void __exit flexcan_exit(void)
+{
+	platform_driver_unregister(&flexcan_driver);
+	pr_info("%s: driver removed\n", DRV_NAME);
+}
+
+module_init(flexcan_init);
+module_exit(flexcan_exit);
+
+MODULE_AUTHOR("Sascha Hauer <kernel@pengutronix.de>, "
+	      "Marc Kleine-Budde <kernel@pengutronix.de>");
+MODULE_LICENSE("GPL v2");
+MODULE_DESCRIPTION("CAN port driver for flexcan based chip");
diff --git a/drivers/net/can/flexcan/Makefile b/drivers/net/can/flexcan/Makefile
deleted file mode 100644
index b2dbb4f..0000000
--- a/drivers/net/can/flexcan/Makefile
+++ /dev/null
@@ -1,3 +0,0 @@
-obj-$(CONFIG_CAN_FLEXCAN)	+= flexcan.o
-
-flexcan-y := dev.o drv.o mbm.o
diff --git a/drivers/net/can/flexcan/dev.c b/drivers/net/can/flexcan/dev.c
deleted file mode 100644
index 05a48d2..0000000
--- a/drivers/net/can/flexcan/dev.c
+++ /dev/null
@@ -1,743 +0,0 @@
-/*
- * Copyright 2008-2010 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-/*!
- * @file dev.c
- *
- * @brief Driver for Freescale CAN Controller FlexCAN.
- *
- * @ingroup can
- */
-#include <linux/kernel.h>
-#include <linux/string.h>
-#include <linux/errno.h>
-#include <linux/unistd.h>
-#include <linux/init.h>
-#include <linux/delay.h>
-#include <linux/netdevice.h>
-#include <linux/spinlock.h>
-#include <linux/device.h>
-#include <linux/fsl_devices.h>
-
-#include <linux/module.h>
-#ifdef CONFIG_ARCH_MXS
-#include <mach/device.h>
-#endif
-#include "flexcan.h"
-
-#define DEFAULT_BITRATE	    500000
-#define TIME_SEGMENT_MIN    8
-#define TIME_SEGMENT_MAX    25
-#define TIME_SEGMENT_MID    ((TIME_SEGMENT_MIN + TIME_SEGMENT_MAX)/2)
-
-struct time_segment {
-	char propseg;
-	char pseg1;
-	char pseg2;
-};
-
-struct time_segment time_segments[] = {
-    { /* total 8 timequanta */
-	1, 2, 1
-    },
-    { /* total 9 timequanta */
-	1, 2, 2
-    },
-    { /* total 10 timequanta */
-	2, 2, 2
-    },
-    { /* total 11 timequanta */
-	2, 2, 3
-    },
-    { /* total 12 timequanta */
-	2, 3, 3
-    },
-    { /* total 13 timequanta */
-	3, 3, 3
-    },
-    { /* total 14 timequanta */
-	3, 3, 4
-    },
-    { /* total 15 timequanta */
-	3, 4, 4
-    },
-    { /* total 16 timequanta */
-	4, 4, 4
-    },
-    { /* total 17 timequanta */
-	4, 4, 5
-    },
-    { /* total 18 timequanta */
-	4, 5, 5
-    },
-    { /* total 19 timequanta */
-	5, 5, 5
-    },
-    { /* total 20 timequanta */
-	5, 5, 6
-    },
-    { /* total 21 timequanta */
-	5, 6, 6
-    },
-    { /* total 22 timequanta */
-	6, 6, 6
-    },
-    { /* total 23 timequanta */
-	6, 6, 7
-    },
-    { /* total 24 timequanta */
-	6, 7, 7
-    },
-    { /* total 25 timequanta */
-	7, 7, 7
-    },
-};
-
-enum {
-	FLEXCAN_ATTR_STATE = 0,
-	FLEXCAN_ATTR_BITRATE,
-	FLEXCAN_ATTR_BR_PRESDIV,
-	FLEXCAN_ATTR_BR_RJW,
-	FLEXCAN_ATTR_BR_PROPSEG,
-	FLEXCAN_ATTR_BR_PSEG1,
-	FLEXCAN_ATTR_BR_PSEG2,
-	FLEXCAN_ATTR_BR_CLKSRC,
-	FLEXCAN_ATTR_MAXMB,
-	FLEXCAN_ATTR_XMIT_MAXMB,
-	FLEXCAN_ATTR_FIFO,
-	FLEXCAN_ATTR_WAKEUP,
-	FLEXCAN_ATTR_SRX_DIS,
-	FLEXCAN_ATTR_WAK_SRC,
-	FLEXCAN_ATTR_BCC,
-	FLEXCAN_ATTR_LOCAL_PRIORITY,
-	FLEXCAN_ATTR_ABORT,
-	FLEXCAN_ATTR_LOOPBACK,
-	FLEXCAN_ATTR_SMP,
-	FLEXCAN_ATTR_BOFF_REC,
-	FLEXCAN_ATTR_TSYN,
-	FLEXCAN_ATTR_LISTEN,
-	FLEXCAN_ATTR_EXTEND_MSG,
-	FLEXCAN_ATTR_STANDARD_MSG,
-#ifdef CONFIG_CAN_DEBUG_DEVICES
-	FLEXCAN_ATTR_DUMP_REG,
-	FLEXCAN_ATTR_DUMP_XMIT_MB,
-	FLEXCAN_ATTR_DUMP_RX_MB,
-#endif
-	FLEXCAN_ATTR_MAX
-};
-
-static ssize_t flexcan_show_attr(struct device *dev,
-				 struct device_attribute *attr, char *buf);
-static ssize_t flexcan_set_attr(struct device *dev,
-				struct device_attribute *attr, const char *buf,
-				size_t count);
-
-static struct device_attribute flexcan_dev_attr[FLEXCAN_ATTR_MAX] = {
-	[FLEXCAN_ATTR_STATE] = __ATTR(state, 0444, flexcan_show_attr, NULL),
-	[FLEXCAN_ATTR_BITRATE] =
-	    __ATTR(bitrate, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BR_PRESDIV] =
-	    __ATTR(br_presdiv, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BR_RJW] =
-	    __ATTR(br_rjw, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BR_PROPSEG] =
-	    __ATTR(br_propseg, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BR_PSEG1] =
-	    __ATTR(br_pseg1, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BR_PSEG2] =
-	    __ATTR(br_pseg2, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BR_CLKSRC] =
-	    __ATTR(br_clksrc, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_MAXMB] =
-	    __ATTR(maxmb, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_XMIT_MAXMB] =
-	    __ATTR(xmit_maxmb, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_FIFO] =
-	    __ATTR(fifo, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_WAKEUP] =
-	    __ATTR(wakeup, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_SRX_DIS] =
-	    __ATTR(srx_dis, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_WAK_SRC] =
-	    __ATTR(wak_src, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BCC] =
-	    __ATTR(bcc, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_LOCAL_PRIORITY] =
-	    __ATTR(local_priority, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_ABORT] =
-	    __ATTR(abort, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_LOOPBACK] =
-	    __ATTR(loopback, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_SMP] =
-	    __ATTR(smp, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_BOFF_REC] =
-	    __ATTR(boff_rec, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_TSYN] =
-	    __ATTR(tsyn, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_LISTEN] =
-	    __ATTR(listen, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_EXTEND_MSG] =
-	    __ATTR(ext_msg, 0644, flexcan_show_attr, flexcan_set_attr),
-	[FLEXCAN_ATTR_STANDARD_MSG] =
-	    __ATTR(std_msg, 0644, flexcan_show_attr, flexcan_set_attr),
-#ifdef CONFIG_CAN_DEBUG_DEVICES
-	[FLEXCAN_ATTR_DUMP_REG] =
-	    __ATTR(dump_reg, 0444, flexcan_show_attr, NULL),
-	[FLEXCAN_ATTR_DUMP_XMIT_MB] =
-	    __ATTR(dump_xmit_mb, 0444, flexcan_show_attr, NULL),
-	[FLEXCAN_ATTR_DUMP_RX_MB] =
-	    __ATTR(dump_rx_mb, 0444, flexcan_show_attr, NULL),
-#endif
-};
-
-static void flexcan_set_bitrate(struct flexcan_device *flexcan, int bitrate)
-{
-	/* TODO:: implement in future
-	 * based on the bitrate to get the timing of
-	 * presdiv, pseg1, pseg2, propseg
-	 */
-	int i, rate, div;
-	bool found = false;
-	struct time_segment *segment;
-	rate = clk_get_rate(flexcan->clk);
-
-	if (!bitrate)
-		bitrate = DEFAULT_BITRATE;
-
-	if (rate % bitrate == 0) {
-		div = rate / bitrate;
-		for (i = TIME_SEGMENT_MID; i <= TIME_SEGMENT_MAX; i++) {
-			if (div % i == 0) {
-				found = true;
-				break;
-			}
-		}
-		if (!found) {
-			for (i = TIME_SEGMENT_MID - 1;
-					    i >= TIME_SEGMENT_MIN; i--) {
-				if (div % i == 0) {
-					found = true;
-					break;
-				}
-			}
-
-		}
-	}
-
-	if (found) {
-		segment = &time_segments[i - TIME_SEGMENT_MIN];
-		flexcan->br_presdiv = div/i - 1;
-		flexcan->br_propseg = segment->propseg;
-		flexcan->br_pseg1 = segment->pseg1;
-		flexcan->br_pseg2 = segment->pseg2;
-		flexcan->bitrate = bitrate;
-	} else {
-		pr_info("The bitrate %d can't supported with clock \
-				    rate of %d \n", bitrate, rate);
-	}
-}
-
-static void flexcan_update_bitrate(struct flexcan_device *flexcan)
-{
-	int rate, div;
-	struct flexcan_platform_data *plat_data;
-	plat_data = flexcan->dev->dev.platform_data;
-
-	if (plat_data->root_clk_id)
-		rate = clk_get_rate(flexcan->clk);
-	else {
-		if (flexcan->br_clksrc)
-			rate = clk_get_rate(flexcan->clk);
-		else {
-			struct clk *clk;
-			clk = clk_get(NULL, "ckih");
-			if (!clk)
-				return;
-			rate = clk_get_rate(clk);
-			clk_put(clk);
-		}
-	}
-	if (!rate)
-		return;
-
-	div = (flexcan->br_presdiv + 1);
-	div *=
-	    (flexcan->br_propseg + flexcan->br_pseg1 + flexcan->br_pseg2 + 4);
-	flexcan->bitrate = (rate + div - 1) / div;
-}
-
-#ifdef CONFIG_CAN_DEBUG_DEVICES
-static int flexcan_dump_reg(struct flexcan_device *flexcan, char *buf)
-{
-	int ret = 0;
-	unsigned int reg;
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	ret += sprintf(buf + ret, "MCR::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_CTRL);
-	ret += sprintf(buf + ret, "CTRL::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_RXGMASK);
-	ret += sprintf(buf + ret, "RXGMASK::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_RX14MASK);
-	ret += sprintf(buf + ret, "RX14MASK::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_RX15MASK);
-	ret += sprintf(buf + ret, "RX15MASK::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_ECR);
-	ret += sprintf(buf + ret, "ECR::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_ESR);
-	ret += sprintf(buf + ret, "ESR::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_IMASK2);
-	ret += sprintf(buf + ret, "IMASK2::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_IMASK1);
-	ret += sprintf(buf + ret, "IMASK1::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_IFLAG2);
-	ret += sprintf(buf + ret, "IFLAG2::0x%x\n", reg);
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_IFLAG1);
-	ret += sprintf(buf + ret, "IFLAG1::0x%x\n", reg);
-	return ret;
-}
-
-static int flexcan_dump_xmit_mb(struct flexcan_device *flexcan, char *buf)
-{
-	int ret = 0, i;
-	i = flexcan->xmit_maxmb + 1;
-	for (; i <= flexcan->maxmb; i++)
-		ret +=
-		    sprintf(buf + ret,
-			    "mb[%d]::CS:0x%x ID:0x%x DATA[1~2]:0x%02x,0x%02x\n",
-			    i, flexcan->hwmb[i].mb_cs,
-			    flexcan->hwmb[i].mb_id, flexcan->hwmb[i].mb_data[1],
-			    flexcan->hwmb[i].mb_data[2]);
-	return ret;
-}
-
-static int flexcan_dump_rx_mb(struct flexcan_device *flexcan, char *buf)
-{
-	int ret = 0, i;
-	for (i = 0; i <= flexcan->xmit_maxmb; i++)
-		ret +=
-		    sprintf(buf + ret,
-			    "mb[%d]::CS:0x%x ID:0x%x DATA[1~2]:0x%02x,0x%02x\n",
-			    i, flexcan->hwmb[i].mb_cs,
-			    flexcan->hwmb[i].mb_id, flexcan->hwmb[i].mb_data[1],
-			    flexcan->hwmb[i].mb_data[2]);
-	return ret;
-}
-#endif
-
-static ssize_t flexcan_show_state(struct net_device *net, char *buf)
-{
-	int ret, esr;
-	struct flexcan_device *flexcan = netdev_priv(net);
-	ret = sprintf(buf, "%s::", netif_running(net) ? "Start" : "Stop");
-	if (netif_carrier_ok(net)) {
-		esr = __raw_readl(flexcan->io_base + CAN_HW_REG_ESR);
-		switch ((esr & __ESR_FLT_CONF_MASK) >> __ESR_FLT_CONF_OFF) {
-		case 0:
-			ret += sprintf(buf + ret, "normal\n");
-			break;
-		case 1:
-			ret += sprintf(buf + ret, "error passive\n");
-			break;
-		default:
-			ret += sprintf(buf + ret, "bus off\n");
-		}
-	} else
-		ret += sprintf(buf + ret, "bus off\n");
-	return ret;
-}
-
-static ssize_t flexcan_show_attr(struct device *dev,
-				 struct device_attribute *attr, char *buf)
-{
-	int attr_id;
-	struct net_device *net;
-	struct flexcan_device *flexcan;
-
-	net = dev_get_drvdata(dev);
-	BUG_ON(!net);
-	flexcan = netdev_priv(net);
-	BUG_ON(!flexcan);
-
-	attr_id = attr - flexcan_dev_attr;
-	switch (attr_id) {
-	case FLEXCAN_ATTR_STATE:
-		return flexcan_show_state(net, buf);
-	case FLEXCAN_ATTR_BITRATE:
-		return sprintf(buf, "%d\n", flexcan->bitrate);
-	case FLEXCAN_ATTR_BR_PRESDIV:
-		return sprintf(buf, "%d\n", flexcan->br_presdiv + 1);
-	case FLEXCAN_ATTR_BR_RJW:
-		return sprintf(buf, "%d\n", flexcan->br_rjw);
-	case FLEXCAN_ATTR_BR_PROPSEG:
-		return sprintf(buf, "%d\n", flexcan->br_propseg + 1);
-	case FLEXCAN_ATTR_BR_PSEG1:
-		return sprintf(buf, "%d\n", flexcan->br_pseg1 + 1);
-	case FLEXCAN_ATTR_BR_PSEG2:
-		return sprintf(buf, "%d\n", flexcan->br_pseg2 + 1);
-	case FLEXCAN_ATTR_BR_CLKSRC:
-		return sprintf(buf, "%s\n", flexcan->br_clksrc ? "bus" : "osc");
-	case FLEXCAN_ATTR_MAXMB:
-		return sprintf(buf, "%d\n", flexcan->maxmb + 1);
-	case FLEXCAN_ATTR_XMIT_MAXMB:
-		return sprintf(buf, "%d\n", flexcan->xmit_maxmb + 1);
-	case FLEXCAN_ATTR_FIFO:
-		return sprintf(buf, "%d\n", flexcan->fifo);
-	case FLEXCAN_ATTR_WAKEUP:
-		return sprintf(buf, "%d\n", flexcan->wakeup);
-	case FLEXCAN_ATTR_SRX_DIS:
-		return sprintf(buf, "%d\n", flexcan->srx_dis);
-	case FLEXCAN_ATTR_WAK_SRC:
-		return sprintf(buf, "%d\n", flexcan->wak_src);
-	case FLEXCAN_ATTR_BCC:
-		return sprintf(buf, "%d\n", flexcan->bcc);
-	case FLEXCAN_ATTR_LOCAL_PRIORITY:
-		return sprintf(buf, "%d\n", flexcan->lprio);
-	case FLEXCAN_ATTR_ABORT:
-		return sprintf(buf, "%d\n", flexcan->abort);
-	case FLEXCAN_ATTR_LOOPBACK:
-		return sprintf(buf, "%d\n", flexcan->loopback);
-	case FLEXCAN_ATTR_SMP:
-		return sprintf(buf, "%d\n", flexcan->smp);
-	case FLEXCAN_ATTR_BOFF_REC:
-		return sprintf(buf, "%d\n", flexcan->boff_rec);
-	case FLEXCAN_ATTR_TSYN:
-		return sprintf(buf, "%d\n", flexcan->tsyn);
-	case FLEXCAN_ATTR_LISTEN:
-		return sprintf(buf, "%d\n", flexcan->listen);
-	case FLEXCAN_ATTR_EXTEND_MSG:
-		return sprintf(buf, "%d\n", flexcan->ext_msg);
-	case FLEXCAN_ATTR_STANDARD_MSG:
-		return sprintf(buf, "%d\n", flexcan->std_msg);
-#ifdef CONFIG_CAN_DEBUG_DEVICES
-	case FLEXCAN_ATTR_DUMP_REG:
-		return flexcan_dump_reg(flexcan, buf);
-	case FLEXCAN_ATTR_DUMP_XMIT_MB:
-		return flexcan_dump_xmit_mb(flexcan, buf);
-	case FLEXCAN_ATTR_DUMP_RX_MB:
-		return flexcan_dump_rx_mb(flexcan, buf);
-#endif
-	default:
-		return sprintf(buf, "%s:%p->%p\n", __func__, flexcan_dev_attr,
-			       attr);
-	}
-}
-
-static ssize_t flexcan_set_attr(struct device *dev,
-				struct device_attribute *attr, const char *buf,
-				size_t count)
-{
-	int attr_id, tmp;
-	struct net_device *net;
-	struct flexcan_device *flexcan;
-
-	net = dev_get_drvdata(dev);
-	BUG_ON(!net);
-	flexcan = netdev_priv(net);
-	BUG_ON(!flexcan);
-
-	attr_id = attr - flexcan_dev_attr;
-
-	if (mutex_lock_interruptible(&flexcan->mutex))
-		return count;
-
-	if (netif_running(net))
-		goto set_finish;
-
-	if (attr_id == FLEXCAN_ATTR_BR_CLKSRC) {
-		if (!strncasecmp(buf, "bus", 3))
-			flexcan->br_clksrc = 1;
-		else if (!strncasecmp(buf, "osc", 3))
-			flexcan->br_clksrc = 0;
-		goto set_finish;
-	}
-
-	tmp = simple_strtoul(buf, NULL, 0);
-	switch (attr_id) {
-	case FLEXCAN_ATTR_BITRATE:
-		flexcan_set_bitrate(flexcan, tmp);
-		break;
-	case FLEXCAN_ATTR_BR_PRESDIV:
-		if ((tmp > 0) && (tmp <= FLEXCAN_MAX_PRESDIV)) {
-			flexcan->br_presdiv = tmp - 1;
-			flexcan_update_bitrate(flexcan);
-		}
-		break;
-	case FLEXCAN_ATTR_BR_RJW:
-		if ((tmp > 0) && (tmp <= FLEXCAN_MAX_RJW))
-			flexcan->br_rjw = tmp - 1;
-		break;
-	case FLEXCAN_ATTR_BR_PROPSEG:
-		if ((tmp > 0) && (tmp <= FLEXCAN_MAX_PROPSEG)) {
-			flexcan->br_propseg = tmp - 1;
-			flexcan_update_bitrate(flexcan);
-		}
-		break;
-	case FLEXCAN_ATTR_BR_PSEG1:
-		if ((tmp > 0) && (tmp <= FLEXCAN_MAX_PSEG1)) {
-			flexcan->br_pseg1 = tmp - 1;
-			flexcan_update_bitrate(flexcan);
-		}
-		break;
-	case FLEXCAN_ATTR_BR_PSEG2:
-		if ((tmp > 0) && (tmp <= FLEXCAN_MAX_PSEG2)) {
-			flexcan->br_pseg2 = tmp - 1;
-			flexcan_update_bitrate(flexcan);
-		}
-		break;
-	case FLEXCAN_ATTR_MAXMB:
-		if ((tmp > 0) && (tmp <= FLEXCAN_MAX_MB)) {
-			if (flexcan->maxmb != (tmp - 1)) {
-				flexcan->maxmb = tmp - 1;
-				if (flexcan->xmit_maxmb < flexcan->maxmb)
-					flexcan->xmit_maxmb = flexcan->maxmb;
-			}
-		}
-		break;
-	case FLEXCAN_ATTR_XMIT_MAXMB:
-		if ((tmp > 0) && (tmp <= (flexcan->maxmb + 1))) {
-			if (flexcan->xmit_maxmb != (tmp - 1))
-				flexcan->xmit_maxmb = tmp - 1;
-		}
-		break;
-	case FLEXCAN_ATTR_FIFO:
-		flexcan->fifo = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_WAKEUP:
-		flexcan->wakeup = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_SRX_DIS:
-		flexcan->srx_dis = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_WAK_SRC:
-		flexcan->wak_src = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_BCC:
-		flexcan->bcc = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_LOCAL_PRIORITY:
-		flexcan->lprio = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_ABORT:
-		flexcan->abort = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_LOOPBACK:
-		flexcan->loopback = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_SMP:
-		flexcan->smp = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_BOFF_REC:
-		flexcan->boff_rec = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_TSYN:
-		flexcan->tsyn = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_LISTEN:
-		flexcan->listen = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_EXTEND_MSG:
-		flexcan->ext_msg = tmp ? 1 : 0;
-		break;
-	case FLEXCAN_ATTR_STANDARD_MSG:
-		flexcan->std_msg = tmp ? 1 : 0;
-		break;
-	}
-      set_finish:
-	mutex_unlock(&flexcan->mutex);
-	return count;
-}
-
-static void flexcan_device_default(struct flexcan_device *dev)
-{
-	struct platform_device *pdev = dev->dev;
-	struct flexcan_platform_data *plat_data = (pdev->dev).platform_data;
-	dev->br_clksrc = plat_data->br_clksrc;
-	dev->br_rjw = plat_data->br_rjw;
-	dev->br_presdiv = plat_data->br_presdiv;
-	dev->br_propseg = plat_data->br_propseg;
-	dev->br_pseg1 = plat_data->br_pseg1;
-	dev->br_pseg2 = plat_data->br_pseg2;
-
-	dev->bcc = plat_data->bcc;
-	dev->srx_dis = plat_data->srx_dis;
-	dev->smp = plat_data->smp;
-	dev->boff_rec = plat_data->boff_rec;
-
-	dev->maxmb = FLEXCAN_MAX_MB - 1;
-	dev->xmit_maxmb = (FLEXCAN_MAX_MB >> 1) - 1;
-	dev->xmit_mb = dev->maxmb - dev->xmit_maxmb;
-
-	dev->ext_msg = plat_data->ext_msg;
-	dev->std_msg = plat_data->std_msg;
-}
-
-static int flexcan_device_attach(struct flexcan_device *flexcan)
-{
-	int ret;
-	struct resource *res;
-	struct platform_device *pdev = flexcan->dev;
-	struct flexcan_platform_data *plat_data = (pdev->dev).platform_data;
-	struct clk *can_root_clk;
-
-	res = platform_get_resource(flexcan->dev, IORESOURCE_MEM, 0);
-	if (!res)
-		return -ENODEV;
-
-	flexcan->io_base = ioremap(res->start, res->end - res->start + 1);
-	if (!flexcan->io_base)
-		return -ENOMEM;
-
-	flexcan->irq = platform_get_irq(flexcan->dev, 0);
-	if (!flexcan->irq) {
-		ret = -ENODEV;
-		goto no_irq_err;
-	}
-
-	ret = -EINVAL;
-	if (plat_data) {
-		if (plat_data->core_reg) {
-			flexcan->core_reg = regulator_get(&pdev->dev,
-							  plat_data->core_reg);
-			if (!flexcan->core_reg)
-				goto plat_err;
-		}
-
-		if (plat_data->io_reg) {
-			flexcan->io_reg = regulator_get(&pdev->dev,
-							plat_data->io_reg);
-			if (!flexcan->io_reg)
-				goto plat_err;
-		}
-	}
-	flexcan->clk = clk_get(&(flexcan->dev)->dev, "can_clk");
-	if (plat_data->root_clk_id) {
-		can_root_clk = clk_get(NULL, plat_data->root_clk_id);
-		clk_set_parent(flexcan->clk, can_root_clk);
-	}
-	flexcan->hwmb = (struct can_hw_mb *)(flexcan->io_base + CAN_MB_BASE);
-	flexcan->rx_mask = (unsigned int *)(flexcan->io_base + CAN_RXMASK_BASE);
-
-	return 0;
-      plat_err:
-	if (flexcan->core_reg) {
-		regulator_put(flexcan->core_reg);
-		flexcan->core_reg = NULL;
-	}
-      no_irq_err:
-	if (flexcan->io_base)
-		iounmap(flexcan->io_base);
-	return ret;
-}
-
-static void flexcan_device_detach(struct flexcan_device *flexcan)
-{
-	if (flexcan->clk) {
-		clk_put(flexcan->clk);
-		flexcan->clk = NULL;
-	}
-
-	if (flexcan->io_reg) {
-		regulator_put(flexcan->io_reg);
-		flexcan->io_reg = NULL;
-	}
-
-	if (flexcan->core_reg) {
-		regulator_put(flexcan->core_reg);
-		flexcan->core_reg = NULL;
-	}
-
-	if (flexcan->io_base)
-		iounmap(flexcan->io_base);
-}
-
-/*!
- * @brief The function allocates can device.
- *
- * @param pdev	the pointer of platform device.
- * @param setup	the initial function pointer of network device.
- *
- * @return none
- */
-struct net_device *flexcan_device_alloc(struct platform_device *pdev,
-					void (*setup) (struct net_device *dev))
-{
-	struct flexcan_device *flexcan;
-	struct net_device *net;
-	int i, num;
-
-	net = alloc_netdev(sizeof(*flexcan), "can%d", setup);
-	if (net == NULL) {
-		printk(KERN_ERR "Allocate netdevice for FlexCAN fail!\n");
-		return NULL;
-	}
-	flexcan = netdev_priv(net);
-	memset(flexcan, 0, sizeof(*flexcan));
-
-	mutex_init(&flexcan->mutex);
-	init_timer(&flexcan->timer);
-
-	flexcan->dev = pdev;
-	if (flexcan_device_attach(flexcan)) {
-		printk(KERN_ERR "Attach FlexCAN fail!\n");
-		free_netdev(net);
-		return NULL;
-	}
-	flexcan_device_default(flexcan);
-	flexcan_set_bitrate(flexcan, flexcan->bitrate);
-	flexcan_update_bitrate(flexcan);
-
-	num = ARRAY_SIZE(flexcan_dev_attr);
-
-	for (i = 0; i < num; i++) {
-		if (device_create_file(&pdev->dev, flexcan_dev_attr + i)) {
-			printk(KERN_ERR "Create attribute file fail!\n");
-			break;
-		}
-	}
-
-	if (i != num) {
-		for (; i >= 0; i--)
-			device_remove_file(&pdev->dev, flexcan_dev_attr + i);
-		free_netdev(net);
-		return NULL;
-	}
-	dev_set_drvdata(&pdev->dev, net);
-	return net;
-}
-
-/*!
- * @brief The function frees can device.
- *
- * @param pdev	the pointer of platform device.
- *
- * @return none
- */
-void flexcan_device_free(struct platform_device *pdev)
-{
-	struct net_device *net;
-	struct flexcan_device *flexcan;
-	int i, num;
-	net = (struct net_device *)dev_get_drvdata(&pdev->dev);
-
-	unregister_netdev(net);
-	flexcan = netdev_priv(net);
-	del_timer(&flexcan->timer);
-
-	num = ARRAY_SIZE(flexcan_dev_attr);
-
-	for (i = 0; i < num; i++)
-		device_remove_file(&pdev->dev, flexcan_dev_attr + i);
-
-	flexcan_device_detach(netdev_priv(net));
-	free_netdev(net);
-}
diff --git a/drivers/net/can/flexcan/drv.c b/drivers/net/can/flexcan/drv.c
deleted file mode 100644
index f0a408d..0000000
--- a/drivers/net/can/flexcan/drv.c
+++ /dev/null
@@ -1,628 +0,0 @@
-/*
- * Copyright 2008-2010 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-/*!
- * @file drv.c
- *
- * @brief Driver for Freescale CAN Controller FlexCAN.
- *
- * @ingroup can
- */
-
-#include <linux/module.h>
-#include <linux/init.h>
-#include <linux/slab.h>
-#include <linux/netdevice.h>
-#include <linux/if_arp.h>
-#include <linux/if_ether.h>
-#include <linux/platform_device.h>
-#include <linux/regulator/consumer.h>
-#include <linux/clk.h>
-#include <linux/io.h>
-#include <linux/fsl_devices.h>
-#include <linux/random.h>
-#include "flexcan.h"
-
-static void flexcan_hw_start(struct flexcan_device *flexcan)
-{
-	unsigned int reg;
-	if ((flexcan->maxmb + 1) > 32) {
-		__raw_writel(0xFFFFFFFF, flexcan->io_base + CAN_HW_REG_IMASK1);
-		reg = (1 << (flexcan->maxmb - 31)) - 1;
-		__raw_writel(reg, flexcan->io_base + CAN_HW_REG_IMASK2);
-	} else {
-		reg = (1 << (flexcan->maxmb + 1)) - 1;
-		__raw_writel(reg, flexcan->io_base + CAN_HW_REG_IMASK1);
-		__raw_writel(0, flexcan->io_base + CAN_HW_REG_IMASK2);
-	}
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR) & (~__MCR_HALT);
-	__raw_writel(reg, flexcan->io_base + CAN_HW_REG_MCR);
-}
-
-static void flexcan_hw_stop(struct flexcan_device *flexcan)
-{
-	unsigned int reg;
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	__raw_writel(reg | __MCR_HALT, flexcan->io_base + CAN_HW_REG_MCR);
-}
-
-static int flexcan_hw_reset(struct flexcan_device *flexcan)
-{
-	unsigned int reg;
-	int timeout = 100000;
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	__raw_writel(reg | __MCR_MDIS, flexcan->io_base + CAN_HW_REG_MCR);
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_CTRL);
-	if (flexcan->br_clksrc)
-		reg |= __CTRL_CLK_SRC;
-	else
-		reg &= ~__CTRL_CLK_SRC;
-	__raw_writel(reg, flexcan->io_base + CAN_HW_REG_CTRL);
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR) & (~__MCR_MDIS);
-	__raw_writel(reg, flexcan->io_base + CAN_HW_REG_MCR);
-	reg |= __MCR_SOFT_RST;
-	__raw_writel(reg, flexcan->io_base + CAN_HW_REG_MCR);
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	while (reg & __MCR_SOFT_RST) {
-		if (--timeout <= 0) {
-			printk(KERN_ERR "Flexcan software Reset Timeouted\n");
-			return -1;
-		}
-		udelay(10);
-		reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	}
-	return 0;
-}
-
-static inline void flexcan_mcr_setup(struct flexcan_device *flexcan)
-{
-	unsigned int reg;
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	reg &= ~(__MCR_MAX_MB_MASK | __MCR_WAK_MSK | __MCR_MAX_IDAM_MASK);
-
-	if (flexcan->fifo)
-		reg |= __MCR_FEN;
-	else
-		reg &= ~__MCR_FEN;
-
-	if (flexcan->wakeup)
-		reg |= __MCR_SLF_WAK | __MCR_WAK_MSK;
-	else
-		reg &= ~(__MCR_SLF_WAK | __MCR_WAK_MSK);
-
-	if (flexcan->wak_src)
-		reg |= __MCR_WAK_SRC;
-	else
-		reg &= ~__MCR_WAK_SRC;
-
-	if (flexcan->srx_dis)
-		reg |= __MCR_SRX_DIS;
-	else
-		reg &= ~__MCR_SRX_DIS;
-
-	if (flexcan->bcc)
-		reg |= __MCR_BCC;
-	else
-		reg &= ~__MCR_BCC;
-
-	if (flexcan->lprio)
-		reg |= __MCR_LPRIO_EN;
-	else
-		reg &= ~__MCR_LPRIO_EN;
-
-	if (flexcan->abort)
-		reg |= __MCR_AEN;
-	else
-		reg &= ~__MCR_AEN;
-
-	reg |= (flexcan->maxmb << __MCR_MAX_MB_OFFSET);
-	reg |= __MCR_DOZE | __MCR_MAX_IDAM_C;
-	__raw_writel(reg, flexcan->io_base + CAN_HW_REG_MCR);
-}
-
-static inline void flexcan_ctrl_setup(struct flexcan_device *flexcan)
-{
-	unsigned int reg;
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_CTRL);
-	reg &= ~(__CTRL_PRESDIV_MASK | __CTRL_RJW_MASK | __CTRL_PSEG1_MASK |
-		 __CTRL_PSEG2_MASK | __CTRL_PROPSEG_MASK);
-
-	if (flexcan->loopback)
-		reg |= __CTRL_LPB;
-	else
-		reg &= ~__CTRL_LPB;
-
-	if (flexcan->smp)
-		reg |= __CTRL_SMP;
-	else
-		reg &= ~__CTRL_SMP;
-
-	if (flexcan->boff_rec)
-		reg |= __CTRL_BOFF_REC;
-	else
-		reg &= ~__CTRL_BOFF_REC;
-
-	if (flexcan->tsyn)
-		reg |= __CTRL_TSYN;
-	else
-		reg &= ~__CTRL_TSYN;
-
-	if (flexcan->listen)
-		reg |= __CTRL_LOM;
-	else
-		reg &= ~__CTRL_LOM;
-
-	reg |= (flexcan->br_presdiv << __CTRL_PRESDIV_OFFSET) |
-	    (flexcan->br_rjw << __CTRL_RJW_OFFSET) |
-	    (flexcan->br_pseg1 << __CTRL_PSEG1_OFFSET) |
-	    (flexcan->br_pseg2 << __CTRL_PSEG2_OFFSET) |
-	    (flexcan->br_propseg << __CTRL_PROPSEG_OFFSET);
-
-	reg &= ~__CTRL_LBUF;
-
-	reg |= __CTRL_TWRN_MSK | __CTRL_RWRN_MSK | __CTRL_BOFF_MSK |
-	    __CTRL_ERR_MSK;
-
-	__raw_writel(reg, flexcan->io_base + CAN_HW_REG_CTRL);
-}
-
-static int flexcan_hw_restart(struct net_device *dev)
-{
-	unsigned int reg;
-	struct flexcan_device *flexcan = netdev_priv(dev);
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	if (reg & __MCR_SOFT_RST)
-		return 1;
-
-	flexcan_mcr_setup(flexcan);
-
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_IMASK2);
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_IMASK1);
-
-	__raw_writel(0xFFFFFFFF, flexcan->io_base + CAN_HW_REG_IFLAG2);
-	__raw_writel(0xFFFFFFFF, flexcan->io_base + CAN_HW_REG_IFLAG1);
-
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_ECR);
-
-	flexcan_mbm_init(flexcan);
-	netif_carrier_on(dev);
-	flexcan_hw_start(flexcan);
-
-	if (netif_queue_stopped(dev))
-		netif_start_queue(dev);
-
-	return 0;
-}
-
-static void flexcan_hw_watch(unsigned long data)
-{
-	unsigned int reg, ecr;
-	struct net_device *dev = (struct net_device *)data;
-	struct flexcan_device *flexcan = dev ? netdev_priv(dev) : NULL;
-
-	BUG_ON(!flexcan);
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	if (reg & __MCR_MDIS) {
-		if (flexcan_hw_restart(dev))
-			mod_timer(&flexcan->timer, HZ / 20);
-		return;
-	}
-	ecr = __raw_readl(flexcan->io_base + CAN_HW_REG_ECR);
-	if (flexcan->boff_rec) {
-		if (((reg & __ESR_FLT_CONF_MASK) >> __ESR_FLT_CONF_OFF) > 1) {
-			reg |= __MCR_SOFT_RST;
-			__raw_writel(reg, flexcan->io_base + CAN_HW_REG_MCR);
-			mod_timer(&flexcan->timer, HZ / 20);
-			return;
-		}
-		netif_carrier_on(dev);
-	}
-}
-
-static void flexcan_hw_busoff(struct net_device *dev)
-{
-	struct flexcan_device *flexcan = netdev_priv(dev);
-	unsigned int reg;
-
-	netif_carrier_off(dev);
-
-	flexcan->timer.function = flexcan_hw_watch;
-	flexcan->timer.data = (unsigned long)dev;
-
-	if (flexcan->boff_rec) {
-		mod_timer(&flexcan->timer, HZ / 10);
-		return;
-	}
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_MCR);
-	__raw_writel(reg | __MCR_SOFT_RST, flexcan->io_base + CAN_HW_REG_MCR);
-	mod_timer(&flexcan->timer, HZ / 20);
-}
-
-static int flexcan_hw_open(struct flexcan_device *flexcan)
-{
-	if (flexcan_hw_reset(flexcan))
-		return -EFAULT;
-
-	flexcan_mcr_setup(flexcan);
-	flexcan_ctrl_setup(flexcan);
-
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_IMASK2);
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_IMASK1);
-
-	__raw_writel(0xFFFFFFFF, flexcan->io_base + CAN_HW_REG_IFLAG2);
-	__raw_writel(0xFFFFFFFF, flexcan->io_base + CAN_HW_REG_IFLAG1);
-
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_ECR);
-	return 0;
-}
-
-static void flexcan_err_handler(struct net_device *dev)
-{
-	struct flexcan_device *flexcan = netdev_priv(dev);
-	struct sk_buff *skb;
-	struct can_frame *frame;
-	unsigned int esr, ecr;
-
-	esr = __raw_readl(flexcan->io_base + CAN_HW_REG_ESR);
-	__raw_writel(esr & __ESR_INTERRUPTS, flexcan->io_base + CAN_HW_REG_ESR);
-
-	if (esr & __ESR_WAK_INT)
-		return;
-
-	skb = dev_alloc_skb(sizeof(struct can_frame));
-	if (!skb) {
-		printk(KERN_ERR "%s: allocates skb fail in\n", __func__);
-		return;
-	}
-	frame = (struct can_frame *)skb_put(skb, sizeof(*frame));
-	memset(frame, 0, sizeof(*frame));
-	frame->can_id = CAN_ERR_FLAG | CAN_ERR_CRTL;
-	frame->can_dlc = CAN_ERR_DLC;
-
-	if (esr & __ESR_TWRN_INT)
-		frame->data[1] |= CAN_ERR_CRTL_TX_WARNING;
-
-	if (esr & __ESR_RWRN_INT)
-		frame->data[1] |= CAN_ERR_CRTL_RX_WARNING;
-
-	if (esr & __ESR_BOFF_INT)
-		frame->can_id |= CAN_ERR_BUSOFF;
-
-	if (esr & __ESR_ERR_INT) {
-		if (esr & __ESR_BIT1_ERR)
-			frame->data[2] |= CAN_ERR_PROT_BIT1;
-
-		if (esr & __ESR_BIT0_ERR)
-			frame->data[2] |= CAN_ERR_PROT_BIT0;
-
-		if (esr & __ESR_ACK_ERR)
-			frame->can_id |= CAN_ERR_ACK;
-
-		/*TODO:// if (esr & __ESR_CRC_ERR) */
-
-		if (esr & __ESR_FRM_ERR)
-			frame->data[2] |= CAN_ERR_PROT_FORM;
-
-		if (esr & __ESR_STF_ERR)
-			frame->data[2] |= CAN_ERR_PROT_STUFF;
-
-		ecr = __raw_readl(flexcan->io_base + CAN_HW_REG_ECR);
-		switch ((esr & __ESR_FLT_CONF_MASK) >> __ESR_FLT_CONF_OFF) {
-		case 0:
-			if (__ECR_TX_ERR_COUNTER(ecr) >= __ECR_ACTIVE_THRESHOLD)
-				frame->data[1] |= CAN_ERR_CRTL_TX_WARNING;
-			if (__ECR_RX_ERR_COUNTER(ecr) >= __ECR_ACTIVE_THRESHOLD)
-				frame->data[1] |= CAN_ERR_CRTL_RX_WARNING;
-			break;
-		case 1:
-			if (__ECR_TX_ERR_COUNTER(ecr) >=
-			    __ECR_PASSIVE_THRESHOLD)
-				frame->data[1] |= CAN_ERR_CRTL_TX_PASSIVE;
-
-			if (__ECR_RX_ERR_COUNTER(ecr) >=
-			    __ECR_PASSIVE_THRESHOLD)
-				frame->data[1] |= CAN_ERR_CRTL_RX_PASSIVE;
-			break;
-		default:
-			frame->can_id |= CAN_ERR_BUSOFF;
-		}
-	}
-
-	if (frame->can_id & CAN_ERR_BUSOFF)
-		flexcan_hw_busoff(dev);
-
-	skb->dev = dev;
-	skb->ip_summed = CHECKSUM_UNNECESSARY;
-	netif_receive_skb(skb);
-}
-
-static irqreturn_t flexcan_irq_handler(int irq, void *data)
-{
-	struct net_device *dev = (struct net_device *)data;
-	struct flexcan_device *flexcan = dev ? netdev_priv(dev) : NULL;
-	unsigned int reg;
-
-	BUG_ON(!flexcan);
-
-	reg = __raw_readl(flexcan->io_base + CAN_HW_REG_ESR);
-	if (reg & __ESR_INTERRUPTS) {
-		flexcan_err_handler(dev);
-		return IRQ_HANDLED;
-	}
-
-	flexcan_mbm_isr(dev);
-	return IRQ_HANDLED;
-}
-
-static int flexcan_start_xmit(struct sk_buff *skb, struct net_device *dev)
-{
-	struct can_frame *frame = (struct can_frame *)skb->data;
-	struct flexcan_device *flexcan = netdev_priv(dev);
-	struct net_device_stats *stats = &dev->stats;
-
-	BUG_ON(!flexcan);
-
-	if (frame->can_dlc > 8)
-		return -EINVAL;
-
-	if (!flexcan_mbm_xmit(flexcan, frame)) {
-		dev_kfree_skb(skb);
-		stats->tx_bytes += frame->can_dlc;
-		stats->tx_packets++;
-		dev->trans_start = jiffies;
-		return NETDEV_TX_OK;
-	}
-	netif_stop_queue(dev);
-	return NETDEV_TX_BUSY;
-}
-
-static int flexcan_open(struct net_device *dev)
-{
-	struct flexcan_device *flexcan;
-	struct platform_device *pdev;
-	struct flexcan_platform_data *plat_data;
-
-	flexcan = netdev_priv(dev);
-	BUG_ON(!flexcan);
-
-	pdev = flexcan->dev;
-	plat_data = (pdev->dev).platform_data;
-	if (plat_data && plat_data->active)
-		plat_data->active(pdev->id);
-
-	if (flexcan->clk)
-		if (clk_enable(flexcan->clk))
-			goto clk_err;
-
-	if (flexcan->core_reg)
-		if (regulator_enable(flexcan->core_reg))
-			goto core_reg_err;
-
-	if (flexcan->io_reg)
-		if (regulator_enable(flexcan->io_reg))
-			goto io_reg_err;
-
-	if (plat_data && plat_data->xcvr_enable)
-		plat_data->xcvr_enable(pdev->id, 1);
-
-	if (request_irq(flexcan->irq, flexcan_irq_handler, IRQF_SHARED,
-			dev->name, dev))
-		goto irq_err;
-	add_interrupt_randomness(flexcan->irq);
-
-	if (flexcan_hw_open(flexcan))
-		goto open_err;
-
-	flexcan_mbm_init(flexcan);
-	netif_carrier_on(dev);
-	flexcan_hw_start(flexcan);
-	return 0;
-      open_err:
-	free_irq(flexcan->irq, dev);
-      irq_err:
-	if (plat_data && plat_data->xcvr_enable)
-		plat_data->xcvr_enable(pdev->id, 0);
-
-	if (flexcan->io_reg)
-		regulator_disable(flexcan->io_reg);
-      io_reg_err:
-	if (flexcan->core_reg)
-		regulator_disable(flexcan->core_reg);
-      core_reg_err:
-	if (flexcan->clk)
-		clk_disable(flexcan->clk);
-      clk_err:
-	if (plat_data && plat_data->inactive)
-		plat_data->inactive(pdev->id);
-	return -ENODEV;
-}
-
-static int flexcan_stop(struct net_device *dev)
-{
-	struct flexcan_device *flexcan;
-	struct platform_device *pdev;
-	struct flexcan_platform_data *plat_data;
-
-	flexcan = netdev_priv(dev);
-
-	BUG_ON(!flexcan);
-
-	pdev = flexcan->dev;
-	plat_data = (pdev->dev).platform_data;
-
-	flexcan_hw_stop(flexcan);
-
-	free_irq(flexcan->irq, dev);
-
-	if (plat_data && plat_data->xcvr_enable)
-		plat_data->xcvr_enable(pdev->id, 0);
-
-	if (flexcan->io_reg)
-		regulator_disable(flexcan->io_reg);
-	if (flexcan->core_reg)
-		regulator_disable(flexcan->core_reg);
-	if (flexcan->clk)
-		clk_disable(flexcan->clk);
-	if (plat_data && plat_data->inactive)
-		plat_data->inactive(pdev->id);
-	return 0;
-}
-
-static struct net_device_ops flexcan_netdev_ops = {
-	.ndo_open = flexcan_open,
-	.ndo_stop = flexcan_stop,
-	.ndo_start_xmit = flexcan_start_xmit,
-};
-
-static void flexcan_setup(struct net_device *dev)
-{
-	dev->type = ARPHRD_CAN;
-	dev->mtu = sizeof(struct can_frame);
-	dev->hard_header_len = 0;
-	dev->addr_len = 0;
-	dev->tx_queue_len = FLEXCAN_MAX_MB;
-	dev->flags = IFF_NOARP;
-	dev->features = NETIF_F_NO_CSUM;
-
-	dev->netdev_ops = &flexcan_netdev_ops;
-}
-
-static int flexcan_probe(struct platform_device *pdev)
-{
-	struct net_device *net;
-	net = flexcan_device_alloc(pdev, flexcan_setup);
-	if (!net)
-		return -ENOMEM;
-
-	if (register_netdev(net)) {
-		flexcan_device_free(pdev);
-		return -ENODEV;
-	}
-	return 0;
-}
-
-static int flexcan_remove(struct platform_device *pdev)
-{
-	flexcan_device_free(pdev);
-	return 0;
-}
-
-static int flexcan_suspend(struct platform_device *pdev, pm_message_t state)
-{
-	struct net_device *net;
-	struct flexcan_device *flexcan;
-	struct flexcan_platform_data *plat_data;
-	net = (struct net_device *)dev_get_drvdata(&pdev->dev);
-	flexcan = netdev_priv(net);
-
-	BUG_ON(!flexcan);
-
-	if (!(net->flags & IFF_UP))
-		return 0;
-	if (flexcan->wakeup)
-		set_irq_wake(flexcan->irq, 1);
-	else {
-		plat_data = (pdev->dev).platform_data;
-
-		if (plat_data && plat_data->xcvr_enable)
-			plat_data->xcvr_enable(pdev->id, 0);
-
-		if (flexcan->io_reg)
-			regulator_disable(flexcan->io_reg);
-		if (flexcan->core_reg)
-			regulator_disable(flexcan->core_reg);
-		if (flexcan->clk)
-			clk_disable(flexcan->clk);
-		if (plat_data && plat_data->inactive)
-			plat_data->inactive(pdev->id);
-	}
-	return 0;
-}
-
-static int flexcan_resume(struct platform_device *pdev)
-{
-	struct net_device *net;
-	struct flexcan_device *flexcan;
-	struct flexcan_platform_data *plat_data;
-	net = (struct net_device *)dev_get_drvdata(&pdev->dev);
-	flexcan = netdev_priv(net);
-
-	BUG_ON(!flexcan);
-
-	if (!(net->flags & IFF_UP))
-		return 0;
-
-	if (flexcan->wakeup)
-		set_irq_wake(flexcan->irq, 0);
-	else {
-		plat_data = (pdev->dev).platform_data;
-		if (plat_data && plat_data->active)
-			plat_data->active(pdev->id);
-
-		if (flexcan->clk) {
-			if (clk_enable(flexcan->clk))
-				printk(KERN_ERR "%s:enable clock fail\n",
-				       __func__);
-		}
-
-		if (flexcan->core_reg) {
-			if (regulator_enable(flexcan->core_reg))
-				printk(KERN_ERR "%s:enable core voltage\n",
-				       __func__);
-		}
-		if (flexcan->io_reg) {
-			if (regulator_enable(flexcan->io_reg))
-				printk(KERN_ERR "%s:enable io voltage\n",
-				       __func__);
-		}
-
-		if (plat_data && plat_data->xcvr_enable)
-			plat_data->xcvr_enable(pdev->id, 1);
-	}
-	return 0;
-}
-
-static struct platform_driver flexcan_driver = {
-	.driver = {
-		   .name = FLEXCAN_DEVICE_NAME,
-		   },
-	.probe = flexcan_probe,
-	.remove = flexcan_remove,
-	.suspend = flexcan_suspend,
-	.resume = flexcan_resume,
-};
-
-static __init int flexcan_init(void)
-{
-	pr_info("Freescale FlexCAN Driver \n");
-	return platform_driver_register(&flexcan_driver);
-}
-
-static __exit void flexcan_exit(void)
-{
-	return platform_driver_unregister(&flexcan_driver);
-}
-
-module_init(flexcan_init);
-module_exit(flexcan_exit);
-
-MODULE_LICENSE("GPL");
diff --git a/drivers/net/can/flexcan/flexcan.h b/drivers/net/can/flexcan/flexcan.h
deleted file mode 100644
index 51a800b..0000000
--- a/drivers/net/can/flexcan/flexcan.h
+++ /dev/null
@@ -1,222 +0,0 @@
-/*
- * Copyright 2008-2010 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-/*!
- * @file flexcan.h
- *
- * @brief FlexCan definitions.
- *
- * @ingroup can
- */
-
-#ifndef __CAN_FLEXCAN_H__
-#define __CAN_FLEXCAN_H__
-
-#include <linux/list.h>
-#include <linux/platform_device.h>
-#include <linux/regulator/consumer.h>
-#include <linux/clk.h>
-#include <linux/can.h>
-#include <linux/can/core.h>
-#include <linux/can/error.h>
-
-#define FLEXCAN_DEVICE_NAME	"FlexCAN"
-
-#define CAN_MB_RX_INACTIVE	0x0
-#define CAN_MB_RX_EMPTY		0x4
-#define CAN_MB_RX_FULL		0x2
-#define CAN_MB_RX_OVERRUN	0x6
-#define CAN_MB_RX_BUSY		0x1
-
-#define CAN_MB_TX_INACTIVE	0x8
-#define CAN_MB_TX_ABORT		0x9
-#define CAN_MB_TX_ONCE		0xC
-#define CAN_MB_TX_REMOTE	0xA
-
-struct can_hw_mb {
-	unsigned int mb_cs;
-	unsigned int mb_id;
-	unsigned char mb_data[8];
-};
-
-#define MB_CS_CODE_OFFSET	24
-#define MB_CS_CODE_MASK		(0xF << MB_CS_CODE_OFFSET)
-#define MB_CS_SRR_OFFSET	22
-#define MB_CS_SRR_MASK		(0x1 << MB_CS_SRR_OFFSET)
-#define MB_CS_IDE_OFFSET	21
-#define MB_CS_IDE_MASK		(0x1 << MB_CS_IDE_OFFSET)
-#define MB_CS_RTR_OFFSET	20
-#define MB_CS_RTR_MASK		(0x1 << MB_CS_RTR_OFFSET)
-#define MB_CS_LENGTH_OFFSET	16
-#define MB_CS_LENGTH_MASK	(0xF << MB_CS_LENGTH_OFFSET)
-#define MB_CS_TIMESTAMP_OFFSET	0
-#define MB_CS_TIMESTAMP_MASK	(0xFF << MB_CS_TIMESTAMP_OFFSET)
-
-#define CAN_HW_REG_MCR		0x00
-#define CAN_HW_REG_CTRL		0x04
-#define CAN_HW_REG_TIMER	0x08
-#define CAN_HW_REG_RXGMASK	0x10
-#define CAN_HW_REG_RX14MASK	0x14
-#define CAN_HW_REG_RX15MASK	0x18
-#define CAN_HW_REG_ECR		0x1C
-#define CAN_HW_REG_ESR		0x20
-#define CAN_HW_REG_IMASK2	0x24
-#define CAN_HW_REG_IMASK1	0x28
-#define CAN_HW_REG_IFLAG2	0x2C
-#define CAN_HW_REG_IFLAG1	0x30
-
-#define CAN_MB_BASE	0x0080
-#define CAN_RXMASK_BASE	0x0880
-#define CAN_FIFO_BASE	0xE0
-
-#define __MCR_MDIS		(1 << 31)
-#define __MCR_FRZ		(1 << 30)
-#define __MCR_FEN		(1 << 29)
-#define __MCR_HALT		(1 << 28)
-#define __MCR_NOTRDY		(1 << 27)
-#define __MCR_WAK_MSK		(1 << 26)
-#define __MCR_SOFT_RST		(1 << 25)
-#define __MCR_FRZ_ACK		(1 << 24)
-#define __MCR_SLF_WAK		(1 << 22)
-#define __MCR_WRN_EN		(1 << 21)
-#define __MCR_LPM_ACK		(1 << 20)
-#define __MCR_WAK_SRC		(1 << 19)
-#define __MCR_DOZE		(1 << 18)
-#define __MCR_SRX_DIS		(1 << 17)
-#define __MCR_BCC		(1 << 16)
-#define __MCR_LPRIO_EN		(1 << 13)
-#define __MCR_AEN		(1 << 12)
-#define __MCR_MAX_IDAM_OFFSET 	8
-#define __MCR_MAX_IDAM_MASK 	(0x3 << __MCR_MAX_IDAM_OFFSET)
-#define __MCR_MAX_IDAM_A	(0x0 << __MCR_MAX_IDAM_OFFSET)
-#define __MCR_MAX_IDAM_B	(0x1 << __MCR_MAX_IDAM_OFFSET)
-#define __MCR_MAX_IDAM_C	(0x2 << __MCR_MAX_IDAM_OFFSET)
-#define __MCR_MAX_IDAM_D	(0x3 << __MCR_MAX_IDAM_OFFSET)
-#define __MCR_MAX_MB_OFFSET 	0
-#define __MCR_MAX_MB_MASK 	(0x3F)
-
-#define __CTRL_PRESDIV_OFFSET	24
-#define __CTRL_PRESDIV_MASK	(0xFF << __CTRL_PRESDIV_OFFSET)
-#define __CTRL_RJW_OFFSET	22
-#define __CTRL_RJW_MASK		(0x3 << __CTRL_RJW_OFFSET)
-#define __CTRL_PSEG1_OFFSET	19
-#define __CTRL_PSEG1_MASK	(0x7 << __CTRL_PSEG1_OFFSET)
-#define __CTRL_PSEG2_OFFSET	16
-#define __CTRL_PSEG2_MASK	(0x7 << __CTRL_PSEG2_OFFSET)
-#define __CTRL_BOFF_MSK		(0x1 << 15)
-#define __CTRL_ERR_MSK		(0x1 << 14)
-#define __CTRL_CLK_SRC		(0x1 << 13)
-#define __CTRL_LPB		(0x1 << 12)
-#define __CTRL_TWRN_MSK		(0x1 << 11)
-#define __CTRL_RWRN_MSK		(0x1 << 10)
-#define __CTRL_SMP		(0x1 << 7)
-#define __CTRL_BOFF_REC		(0x1 << 6)
-#define __CTRL_TSYN		(0x1 << 5)
-#define __CTRL_LBUF		(0x1 << 4)
-#define __CTRL_LOM		(0x1 << 3)
-#define __CTRL_PROPSEG_OFFSET	0
-#define __CTRL_PROPSEG_MASK	(0x7)
-
-#define __ECR_TX_ERR_COUNTER(x) ((x) & 0xFF)
-#define __ECR_RX_ERR_COUNTER(x) (((x) >> 8) & 0xFF)
-#define __ECR_PASSIVE_THRESHOLD	128
-#define __ECR_ACTIVE_THRESHOLD	96
-
-#define __ESR_TWRN_INT		(0x1 << 17)
-#define __ESR_RWRN_INT		(0x1 << 16)
-#define __ESR_BIT1_ERR		(0x1 << 15)
-#define __ESR_BIT0_ERR		(0x1 << 14)
-#define __ESR_ACK_ERR		(0x1 << 13)
-#define __ESR_CRC_ERR		(0x1 << 12)
-#define __ESR_FRM_ERR		(0x1 << 11)
-#define __ESR_STF_ERR		(0x1 << 10)
-#define __ESR_TX_WRN		(0x1 << 9)
-#define __ESR_RX_WRN		(0x1 << 8)
-#define __ESR_IDLE		(0x1 << 7)
-#define __ESR_TXRX		(0x1 << 6)
-#define __ESR_FLT_CONF_OFF	4
-#define __ESR_FLT_CONF_MASK	(0x3 << __ESR_FLT_CONF_OFF)
-#define __ESR_BOFF_INT		(0x1 << 2)
-#define __ESR_ERR_INT		(0x1 << 1)
-#define __ESR_WAK_INT		(0x1)
-
-#define __ESR_INTERRUPTS	(__ESR_WAK_INT | __ESR_ERR_INT | \
-				__ESR_BOFF_INT | __ESR_TWRN_INT | \
-				__ESR_RWRN_INT)
-
-#define __FIFO_OV_INT		0x0080
-#define __FIFO_WARN_INT		0x0040
-#define __FIFO_RDY_INT		0x0020
-
-struct flexcan_device {
-	struct mutex mutex;
-	void *io_base;
-	struct can_hw_mb *hwmb;
-	unsigned int *rx_mask;
-	unsigned int xmit_mb;
-	unsigned int bitrate;
-	/* word 1 */
-	unsigned int br_presdiv:8;
-	unsigned int br_rjw:2;
-	unsigned int br_propseg:3;
-	unsigned int br_pseg1:3;
-	unsigned int br_pseg2:3;
-	unsigned int maxmb:6;
-	unsigned int xmit_maxmb:6;
-	unsigned int wd1_resv:1;
-
-	/* word 2 */
-	unsigned int fifo:1;
-	unsigned int wakeup:1;
-	unsigned int srx_dis:1;
-	unsigned int wak_src:1;
-	unsigned int bcc:1;
-	unsigned int lprio:1;
-	unsigned int abort:1;
-	unsigned int br_clksrc:1;
-	unsigned int loopback:1;
-	unsigned int smp:1;
-	unsigned int boff_rec:1;
-	unsigned int tsyn:1;
-	unsigned int listen:1;
-
-	unsigned int ext_msg:1;
-	unsigned int std_msg:1;
-
-	struct timer_list timer;
-	struct platform_device *dev;
-	struct regulator *core_reg;
-	struct regulator *io_reg;
-	struct clk *clk;
-	int irq;
-};
-
-#define FLEXCAN_MAX_FIFO_MB	8
-#define FLEXCAN_MAX_MB		64
-#define FLEXCAN_MAX_PRESDIV	256
-#define FLEXCAN_MAX_RJW		4
-#define FLEXCAN_MAX_PSEG1	8
-#define FLEXCAN_MAX_PSEG2	8
-#define FLEXCAN_MAX_PROPSEG	8
-#define FLEXCAN_MAX_BITRATE	1000000
-
-extern struct net_device *flexcan_device_alloc(struct platform_device *pdev,
-					       void (*setup) (struct net_device
-							      *dev));
-extern void flexcan_device_free(struct platform_device *pdev);
-
-extern void flexcan_mbm_init(struct flexcan_device *flexcan);
-extern void flexcan_mbm_isr(struct net_device *dev);
-extern int flexcan_mbm_xmit(struct flexcan_device *flexcan,
-			    struct can_frame *frame);
-#endif				/* __CAN_FLEXCAN_H__ */
diff --git a/drivers/net/can/flexcan/mbm.c b/drivers/net/can/flexcan/mbm.c
deleted file mode 100644
index c846d97..0000000
--- a/drivers/net/can/flexcan/mbm.c
+++ /dev/null
@@ -1,361 +0,0 @@
-/*
- * Copyright 2008-2010 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-/*!
- * @file mbm.c
- *
- * @brief Driver for Freescale CAN Controller FlexCAN.
- *
- * @ingroup can
- */
-#include <linux/module.h>
-#include <linux/init.h>
-#include <linux/slab.h>
-#include <linux/netdevice.h>
-#include <linux/if_arp.h>
-#include <linux/if_ether.h>
-#include <linux/platform_device.h>
-
-#include <asm/io.h>
-#include <asm/irq.h>
-#include "flexcan.h"
-
-#define flexcan_swab32(x)	\
-	(((x) << 24) | ((x) >> 24) |\
-		(((x) & (__u32)0x0000ff00UL) << 8) |\
-		(((x) & (__u32)0x00ff0000UL) >> 8))
-
-static inline void flexcan_memcpy(void *dst, void *src, int len)
-{
-	int i;
-	unsigned int *d = (unsigned int *)dst, *s = (unsigned int *)src;
-	len = (len + 3) >> 2;
-	for (i = 0; i < len; i++, s++, d++)
-		*d = flexcan_swab32(*s);
-}
-
-static void flexcan_mb_bottom(struct net_device *dev, int index)
-{
-	struct flexcan_device *flexcan = netdev_priv(dev);
-	struct net_device_stats *stats = &dev->stats;
-	struct can_hw_mb *hwmb;
-	struct can_frame *frame;
-	struct sk_buff *skb;
-	unsigned int tmp;
-
-	hwmb = flexcan->hwmb + index;
-	if (flexcan->fifo || (index >= (flexcan->maxmb - flexcan->xmit_maxmb))) {
-		if ((hwmb->mb_cs & MB_CS_CODE_MASK) >> MB_CS_CODE_OFFSET ==
-							CAN_MB_TX_ABORT) {
-			hwmb->mb_cs &= ~MB_CS_CODE_MASK;
-			hwmb->mb_cs |= CAN_MB_TX_INACTIVE << MB_CS_CODE_OFFSET;
-		}
-
-		if (hwmb->mb_cs & (CAN_MB_TX_INACTIVE << MB_CS_CODE_OFFSET)) {
-			if (netif_queue_stopped(dev))
-				netif_start_queue(dev);
-			return;
-		}
-	}
-	skb = dev_alloc_skb(sizeof(struct can_frame));
-	if (skb) {
-		frame = (struct can_frame *)skb_put(skb, sizeof(*frame));
-		memset(frame, 0, sizeof(*frame));
-		if (hwmb->mb_cs & MB_CS_IDE_MASK)
-			frame->can_id =
-			    (hwmb->mb_id & CAN_EFF_MASK) | CAN_EFF_FLAG;
-		else
-			frame->can_id = (hwmb->mb_id >> 18) & CAN_SFF_MASK;
-
-		if (hwmb->mb_cs & MB_CS_RTR_MASK)
-			frame->can_id |= CAN_RTR_FLAG;
-
-		frame->can_dlc =
-		(hwmb->mb_cs & MB_CS_LENGTH_MASK) >> MB_CS_LENGTH_OFFSET;
-
-		if (frame->can_dlc && frame->can_dlc)
-			flexcan_memcpy(frame->data, hwmb->mb_data,
-				       frame->can_dlc);
-
-		if (flexcan->fifo
-		    || (index >= (flexcan->maxmb - flexcan->xmit_maxmb))) {
-			hwmb->mb_cs &= ~MB_CS_CODE_MASK;
-			hwmb->mb_cs |= CAN_MB_TX_INACTIVE << MB_CS_CODE_OFFSET;
-			if (netif_queue_stopped(dev))
-				netif_start_queue(dev);
-		}
-
-		tmp = __raw_readl(flexcan->io_base + CAN_HW_REG_TIMER);
-
-		dev->last_rx = jiffies;
-		stats->rx_packets++;
-		stats->rx_bytes += frame->can_dlc;
-
-		skb->dev = dev;
-		skb->protocol = __constant_htons(ETH_P_CAN);
-		skb->ip_summed = CHECKSUM_UNNECESSARY;
-		netif_rx(skb);
-	} else {
-		tmp = hwmb->mb_cs;
-		tmp = hwmb->mb_id;
-		tmp = hwmb->mb_data[0];
-		if (flexcan->fifo
-		    || (index >= (flexcan->maxmb - flexcan->xmit_maxmb))) {
-			hwmb->mb_cs &= ~MB_CS_CODE_MASK;
-			hwmb->mb_cs |= CAN_MB_TX_INACTIVE << MB_CS_CODE_OFFSET;
-			if (netif_queue_stopped(dev))
-				netif_start_queue(dev);
-		}
-		tmp = __raw_readl(flexcan->io_base + CAN_HW_REG_TIMER);
-		stats->rx_dropped++;
-	}
-}
-
-static void flexcan_fifo_isr(struct net_device *dev, unsigned int iflag1)
-{
-	struct flexcan_device *flexcan = dev ? netdev_priv(dev) : NULL;
-	struct net_device_stats *stats = &dev->stats;
-	struct sk_buff *skb;
-	struct can_hw_mb *hwmb = flexcan->hwmb;
-	struct can_frame *frame;
-	unsigned int tmp;
-
-	if (iflag1 & __FIFO_RDY_INT) {
-		skb = dev_alloc_skb(sizeof(struct can_frame));
-		if (skb) {
-			frame =
-			    (struct can_frame *)skb_put(skb, sizeof(*frame));
-			memset(frame, 0, sizeof(*frame));
-			if (hwmb->mb_cs & MB_CS_IDE_MASK)
-				frame->can_id =
-				    (hwmb->mb_id & CAN_EFF_MASK) | CAN_EFF_FLAG;
-			else
-				frame->can_id =
-				    (hwmb->mb_id >> 18) & CAN_SFF_MASK;
-
-			if (hwmb->mb_cs & MB_CS_RTR_MASK)
-				frame->can_id |= CAN_RTR_FLAG;
-
-			frame->can_dlc =
-				(hwmb->mb_cs & MB_CS_LENGTH_MASK) >>
-						MB_CS_LENGTH_OFFSET;
-
-			if (frame->can_dlc && (frame->can_dlc <= 8))
-				flexcan_memcpy(frame->data, hwmb->mb_data,
-					       frame->can_dlc);
-			tmp = __raw_readl(flexcan->io_base + CAN_HW_REG_TIMER);
-
-			dev->last_rx = jiffies;
-
-			stats->rx_packets++;
-			stats->rx_bytes += frame->can_dlc;
-
-			skb->dev = dev;
-			skb->protocol = __constant_htons(ETH_P_CAN);
-			skb->ip_summed = CHECKSUM_UNNECESSARY;
-			netif_rx(skb);
-		} else {
-			tmp = hwmb->mb_cs;
-			tmp = hwmb->mb_id;
-			tmp = hwmb->mb_data[0];
-			tmp = __raw_readl(flexcan->io_base + CAN_HW_REG_TIMER);
-		}
-	}
-
-	if (iflag1 & (__FIFO_OV_INT | __FIFO_WARN_INT)) {
-		skb = dev_alloc_skb(sizeof(struct can_frame));
-		if (skb) {
-			frame =
-			    (struct can_frame *)skb_put(skb, sizeof(*frame));
-			memset(frame, 0, sizeof(*frame));
-			frame->can_id = CAN_ERR_FLAG | CAN_ERR_CRTL;
-			frame->can_dlc = CAN_ERR_DLC;
-			if (iflag1 & __FIFO_WARN_INT)
-				frame->data[1] |=
-				    CAN_ERR_CRTL_TX_WARNING |
-				    CAN_ERR_CRTL_RX_WARNING;
-			if (iflag1 & __FIFO_OV_INT)
-				frame->data[1] |= CAN_ERR_CRTL_RX_OVERFLOW;
-
-			skb->dev = dev;
-			skb->protocol = __constant_htons(ETH_P_CAN);
-			skb->ip_summed = CHECKSUM_UNNECESSARY;
-			netif_rx(skb);
-		}
-	}
-}
-
-/*!
- * @brief The function call by CAN ISR to handle mb events.
- *
- * @param dev		the pointer of network device.
- *
- * @return none
- */
-void flexcan_mbm_isr(struct net_device *dev)
-{
-	int i, iflag1, iflag2, maxmb;
-	struct flexcan_device *flexcan = dev ? netdev_priv(dev) : NULL;
-
-	if (flexcan->maxmb > 31) {
-		maxmb = flexcan->maxmb + 1 - 32;
-		iflag1 = __raw_readl(flexcan->io_base + CAN_HW_REG_IFLAG1) &
-		    __raw_readl(flexcan->io_base + CAN_HW_REG_IMASK1);
-		iflag2 = __raw_readl(flexcan->io_base + CAN_HW_REG_IFLAG2) &
-		    __raw_readl(flexcan->io_base + CAN_HW_REG_IMASK2);
-		iflag2 &= (1 << maxmb) - 1;
-		maxmb = 32;
-	} else {
-		maxmb = flexcan->maxmb + 1;
-		iflag1 = __raw_readl(flexcan->io_base + CAN_HW_REG_IFLAG1) &
-		    __raw_readl(flexcan->io_base + CAN_HW_REG_IMASK1);
-		iflag1 &= (1 << maxmb) - 1;
-		iflag2 = 0;
-	}
-
-	__raw_writel(iflag1, flexcan->io_base + CAN_HW_REG_IFLAG1);
-	__raw_writel(iflag2, flexcan->io_base + CAN_HW_REG_IFLAG2);
-
-	if (flexcan->fifo) {
-		flexcan_fifo_isr(dev, iflag1);
-		iflag1 &= 0xFFFFFF00;
-	}
-	for (i = 0; iflag1 && (i < maxmb); i++) {
-		if (iflag1 & (1 << i)) {
-			iflag1 &= ~(1 << i);
-			flexcan_mb_bottom(dev, i);
-		}
-	}
-
-	for (i = maxmb; iflag2 && (i <= flexcan->maxmb); i++) {
-		if (iflag2 & (1 << (i - 32))) {
-			iflag2 &= ~(1 << (i - 32));
-			flexcan_mb_bottom(dev, i);
-		}
-	}
-}
-
-/*!
- * @brief function to xmit message buffer
- *
- * @param flexcan	the pointer of can hardware device.
- * @param frame		the pointer of can message frame.
- *
- * @return	Returns 0 if xmit is success. otherwise returns non-zero.
- */
-int flexcan_mbm_xmit(struct flexcan_device *flexcan, struct can_frame *frame)
-{
-	int i = flexcan->xmit_mb;
-	struct can_hw_mb *hwmb = flexcan->hwmb;
-
-	do {
-		if ((hwmb[i].mb_cs & MB_CS_CODE_MASK) >> MB_CS_CODE_OFFSET ==
-							    CAN_MB_TX_INACTIVE)
-			break;
-		if ((++i) > flexcan->maxmb) {
-			if (flexcan->fifo)
-				i = FLEXCAN_MAX_FIFO_MB;
-			else
-				i = flexcan->xmit_maxmb + 1;
-		}
-		if (i == flexcan->xmit_mb)
-			return -1;
-	} while (1);
-
-	flexcan->xmit_mb = i + 1;
-	if (flexcan->xmit_mb > flexcan->maxmb) {
-		if (flexcan->fifo)
-			flexcan->xmit_mb = FLEXCAN_MAX_FIFO_MB;
-		else
-			flexcan->xmit_mb = flexcan->xmit_maxmb + 1;
-	}
-
-	if (frame->can_id & CAN_RTR_FLAG)
-		hwmb[i].mb_cs |= 1 << MB_CS_RTR_OFFSET;
-	else
-		hwmb[i].mb_cs &= ~MB_CS_RTR_MASK;
-
-	if (frame->can_id & CAN_EFF_FLAG) {
-		hwmb[i].mb_cs |= 1 << MB_CS_IDE_OFFSET;
-		hwmb[i].mb_cs |= 1 << MB_CS_SRR_OFFSET;
-		hwmb[i].mb_id = frame->can_id & CAN_EFF_MASK;
-	} else {
-		hwmb[i].mb_cs &= ~MB_CS_IDE_MASK;
-		hwmb[i].mb_id = (frame->can_id & CAN_SFF_MASK) << 18;
-	}
-
-	hwmb[i].mb_cs &= ~MB_CS_LENGTH_MASK;
-	hwmb[i].mb_cs |= frame->can_dlc << MB_CS_LENGTH_OFFSET;
-	flexcan_memcpy(hwmb[i].mb_data, frame->data, frame->can_dlc);
-	hwmb[i].mb_cs &= ~MB_CS_CODE_MASK;
-	hwmb[i].mb_cs |= CAN_MB_TX_ONCE << MB_CS_CODE_OFFSET;
-	return 0;
-}
-
-/*!
- * @brief function to initial message buffer
- *
- * @param flexcan	the pointer of can hardware device.
- *
- * @return	none
- */
-void flexcan_mbm_init(struct flexcan_device *flexcan)
-{
-	struct can_hw_mb *hwmb;
-	int rx_mb, i;
-
-	/* Set global mask to receive all messages */
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_RXGMASK);
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_RX14MASK);
-	__raw_writel(0, flexcan->io_base + CAN_HW_REG_RX15MASK);
-
-	memset(flexcan->hwmb, 0, sizeof(*hwmb) * FLEXCAN_MAX_MB);
-	/* Set individual mask to receive all messages */
-	memset(flexcan->rx_mask, 0, sizeof(unsigned int) * FLEXCAN_MAX_MB);
-
-	if (flexcan->fifo)
-		rx_mb = FLEXCAN_MAX_FIFO_MB;
-	else
-		rx_mb = flexcan->maxmb - flexcan->xmit_maxmb;
-
-	hwmb = flexcan->hwmb;
-	if (flexcan->fifo) {
-		unsigned long *id_table = flexcan->io_base + CAN_FIFO_BASE;
-		for (i = 0; i < rx_mb; i++)
-			id_table[i] = 0;
-	} else {
-		for (i = 0; i < rx_mb; i++) {
-			hwmb[i].mb_cs &= ~MB_CS_CODE_MASK;
-			hwmb[i].mb_cs |= CAN_MB_RX_EMPTY << MB_CS_CODE_OFFSET;
-			/*
-			 * IDE bit can not control by mask registers
-			 * So set message buffer to receive extend
-			 * or standard message.
-			 */
-			if (flexcan->ext_msg && flexcan->std_msg) {
-				hwmb[i].mb_cs &= ~MB_CS_IDE_MASK;
-				hwmb[i].mb_cs |= (i & 1) << MB_CS_IDE_OFFSET;
-			} else {
-				if (flexcan->ext_msg)
-					hwmb[i].mb_cs |= 1 << MB_CS_IDE_OFFSET;
-			}
-		}
-	}
-
-	for (; i <= flexcan->maxmb; i++) {
-		hwmb[i].mb_cs &= ~MB_CS_CODE_MASK;
-		hwmb[i].mb_cs |= CAN_MB_TX_INACTIVE << MB_CS_CODE_OFFSET;
-	}
-
-	flexcan->xmit_mb = rx_mb;
-}
diff --git a/include/linux/can/platform/flexcan.h b/include/linux/can/platform/flexcan.h
new file mode 100644
index 0000000..72b713a
--- /dev/null
+++ b/include/linux/can/platform/flexcan.h
@@ -0,0 +1,20 @@
+/*
+ * Copyright (C) 2010 Marc Kleine-Budde <kernel@pengutronix.de>
+ *
+ * This file is released under the GPLv2
+ *
+ */
+
+#ifndef __CAN_PLATFORM_FLEXCAN_H
+#define __CAN_PLATFORM_FLEXCAN_H
+
+/**
+ * struct flexcan_platform_data - flex CAN controller platform data
+ * @transceiver_enable:         - called to power on/off the transceiver
+ *
+ */
+struct flexcan_platform_data {
+	void (*transceiver_switch)(int enable);
+};
+
+#endif /* __CAN_PLATFORM_FLEXCAN_H */
diff --git a/include/linux/fsl_devices.h b/include/linux/fsl_devices.h
index b5cc307..98676ba 100644
--- a/include/linux/fsl_devices.h
+++ b/include/linux/fsl_devices.h
@@ -471,41 +471,6 @@ struct mxc_mlb_platform_data {
 	struct cdev cdev;
 };
 
-struct flexcan_platform_data {
-	char *core_reg;
-	char *io_reg;
-	char *root_clk_id;
-	void (*xcvr_enable) (int id, int en);
-	void (*active) (int id);
-	void (*inactive) (int id);
-	/* word 1 */
-	unsigned int br_presdiv:8;
-	unsigned int br_rjw:2;
-	unsigned int br_propseg:3;
-	unsigned int br_pseg1:3;
-	unsigned int br_pseg2:3;
-	unsigned int maxmb:6;
-	unsigned int xmit_maxmb:6;
-	unsigned int wd1_resv:1;
-
-	/* word 2 */
-	unsigned int fifo:1;
-	unsigned int wakeup:1;
-	unsigned int srx_dis:1;
-	unsigned int wak_src:1;
-	unsigned int bcc:1;
-	unsigned int lprio:1;
-	unsigned int abort:1;
-	unsigned int br_clksrc:1;
-	unsigned int loopback:1;
-	unsigned int smp:1;
-	unsigned int boff_rec:1;
-	unsigned int tsyn:1;
-	unsigned int listen:1;
-	unsigned int ext_msg:1;
-	unsigned int std_msg:1;
-};
-
 struct tve_platform_data {
 	char *dac_reg;
 	char *dig_reg;
-- 
1.9.1


From fa5985af7f641d61916b2e4eebaecc525314cf02 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Mon, 25 Aug 2014 18:20:37 +0400
Subject: [PATCH 08/14] =?UTF-8?q?task=20#3529:=20=D0=9E=D0=BF=D0=B5=D1=87?=
 =?UTF-8?q?=D0=B0=D1=82=D0=BA=D0=B0=20=D0=BF=D1=80=D0=B8=20=D1=80=D1=83?=
 =?UTF-8?q?=D1=87=D0=BD=D0=BE=D0=BC=20=D0=BF=D1=80=D0=B8=D0=BC=D0=B5=D0=BD?=
 =?UTF-8?q?=D0=B5=D0=BD=D0=B8=D0=B8=20=D0=BF=D0=B0=D1=82=D1=87=D0=B0?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/mach-mx28/device.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/arm/mach-mx28/device.c b/arch/arm/mach-mx28/device.c
index 25fa155..3e5aec5 100644
--- a/arch/arm/mach-mx28/device.c
+++ b/arch/arm/mach-mx28/device.c
@@ -1119,7 +1119,7 @@ static void __init mx28_init_ts(void)
 #endif
 
 #if defined(CONFIG_CAN_FLEXCAN) || defined(CONFIG_CAN_FLEXCAN_MODULE)
-static void flexcan_xcvr_enable(int id)
+static void flexcan_xcvr_enable(int en)
 {
 	static int pwdn;
 	if (en) {
-- 
1.9.1


From 833298d5494e37b85149162ba4690052e09ac7b8 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Tue, 26 Aug 2014 09:22:11 +0400
Subject: [PATCH 09/14] =?UTF-8?q?=D0=97=D0=B0=D0=B1=D1=8B=D1=82=D1=8B?=
 =?UTF-8?q?=D0=B5=20=D1=84=D0=BB=D0=B0=D0=B3=D0=B8=20=D0=B4=D0=BB=D1=8F=20?=
 =?UTF-8?q?can=20=D0=9E=D1=82=D0=BA=D0=BB=D1=8E=D1=87=D0=B8=D0=BB=20usart3?=
 =?UTF-8?q?=20http://www.zao-zeo.ru/forum/index.php=3Ftopic=3D762.0?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .config | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/.config b/.config
index 5c460f6..10e518c 100644
--- a/.config
+++ b/.config
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.35.3
-# Mon Aug 25 18:14:51 2014
+# Tue Aug 26 09:19:25 2014
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -278,7 +278,7 @@ CONFIG_MXS_AUART1_DEVICE_ENABLE=y
 # CONFIG_MXS_AUART1_DMA_ENABLE is not set
 CONFIG_MXS_AUART2_DEVICE_ENABLE=y
 # CONFIG_MXS_AUART2_DMA_ENABLE is not set
-CONFIG_MXS_AUART3_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART3_DEVICE_ENABLE is not set
 # CONFIG_MXS_AUART3_DMA_ENABLE is not set
 CONFIG_MXS_AUART4_DEVICE_ENABLE=y
 # CONFIG_MXS_AUART4_DMA_ENABLE is not set
@@ -491,7 +491,7 @@ CONFIG_NETWORK_SECMARK=y
 # CONFIG_HAMRADIO is not set
 CONFIG_CAN=y
 CONFIG_CAN_RAW=y
-# CONFIG_CAN_BCM is not set
+CONFIG_CAN_BCM=y
 
 #
 # CAN Device Drivers
@@ -507,7 +507,7 @@ CONFIG_CAN_DEV=y
 #
 # CONFIG_CAN_EMS_USB is not set
 CONFIG_CAN_FLEXCAN=y
-# CONFIG_CAN_DEBUG_DEVICES is not set
+CONFIG_CAN_DEBUG_DEVICES=y
 # CONFIG_IRDA is not set
 # CONFIG_BT is not set
 # CONFIG_AF_RXRPC is not set
-- 
1.9.1


From 9acee0daa82e391fa21cb6eb93386c3411d60d6c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Tue, 26 Aug 2014 11:11:54 +0400
Subject: [PATCH 10/14] =?UTF-8?q?task=20#3529:=20=D0=9E=D0=BF=D0=B5=D1=87?=
 =?UTF-8?q?=D0=B0=D1=82=D0=B8=D0=BA=D0=B8=20=D0=BF=D1=80=D0=B8=20=D0=BF?=
 =?UTF-8?q?=D0=B5=D1=80=D0=B5=D0=BD=D0=BE=D1=81=D0=B5=20=D0=B8=D1=81=D0=BF?=
 =?UTF-8?q?=D1=80=D0=B0=D0=B2=D0=BB=D0=B5=D0=BD=D0=B8=D0=B9=20=D0=B2=20?=
 =?UTF-8?q?=D1=80=D1=83=D1=87=D0=BD=D1=83=D1=8E?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/mach-mx28/clock.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/arch/arm/mach-mx28/clock.c b/arch/arm/mach-mx28/clock.c
index 5bf07a1..33759ad 100644
--- a/arch/arm/mach-mx28/clock.c
+++ b/arch/arm/mach-mx28/clock.c
@@ -1818,12 +1818,10 @@ static struct clk_lookup onchip_clocks[] = {
 	 .clk = &hsadc_clk,
 	 },
 	{
-	 .con_id = "can_clk",
 	 .dev_id = "imx28-flexcan.0",
 	 .clk = &flexcan_clk[0],
 	 },
 	{
-	 .con_id = "can_clk",
 	 .dev_id = "imx28-flexcan.1",
 	 .clk = &flexcan_clk[1],
 	 },
-- 
1.9.1


From a24b09545252b6d7a6f0cb9940cd6c9b842f0099 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Tue, 26 Aug 2014 16:05:18 +0400
Subject: [PATCH 11/14] =?UTF-8?q?task=20#3529=20=D0=92=D0=BA=D0=BB=D1=8E?=
 =?UTF-8?q?=D1=87=D0=B8=D0=BB=20can=20bittiming=20calculation?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .config | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/.config b/.config
index 10e518c..7c9cdc7 100644
--- a/.config
+++ b/.config
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.35.3
-# Tue Aug 26 09:19:25 2014
+# Tue Aug 26 16:04:37 2014
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -498,7 +498,7 @@ CONFIG_CAN_BCM=y
 #
 # CONFIG_CAN_VCAN is not set
 CONFIG_CAN_DEV=y
-# CONFIG_CAN_CALC_BITTIMING is not set
+CONFIG_CAN_CALC_BITTIMING=y
 # CONFIG_CAN_MCP251X is not set
 # CONFIG_CAN_SJA1000 is not set
 
-- 
1.9.1


From 02fff1be394165b8251dd9d614a3c5d6f7e68e19 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Wed, 27 Aug 2014 14:24:38 +0400
Subject: [PATCH 12/14] =?UTF-8?q?=D0=98=D0=B7=D0=BC=D0=B5=D0=BD=D0=B8?=
 =?UTF-8?q?=D0=BB=20tion-pro28=5Fdefconfig=20=D0=BF=D0=BE=D0=B4=20=D1=81?=
 =?UTF-8?q?=D0=B5=D0=B1=D1=8F?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 arch/arm/configs/tion-pro28_defconfig | 95 +++++++++++++++++++----------------
 1 file changed, 52 insertions(+), 43 deletions(-)

diff --git a/arch/arm/configs/tion-pro28_defconfig b/arch/arm/configs/tion-pro28_defconfig
index c53a37a..1c681b6 100644
--- a/arch/arm/configs/tion-pro28_defconfig
+++ b/arch/arm/configs/tion-pro28_defconfig
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.35.3
-# Thu Feb 20 20:20:51 2014
+# Tue Aug 26 16:04:37 2014
 #
 CONFIG_ARM=y
 CONFIG_SYS_SUPPORTS_APM_EMULATION=y
@@ -260,6 +260,8 @@ CONFIG_MACH_MX28EVK=y
 CONFIG_VECTORS_PHY_ADDR=0
 CONFIG_MXS_TIMER_WITH_MACH=y
 # CONFIG_MEM_mDDR is not set
+# CONFIG_MX28_SUSPEND_TO_RAM is not set
+CONFIG_WORKAROUND_ARCUSB_REG_RW=y
 CONFIG_MXS_ICOLL=y
 CONFIG_MXS_EARLY_CONSOLE=y
 CONFIG_MXS_DMA_ENGINE=y
@@ -277,7 +279,7 @@ CONFIG_MXS_AUART1_DEVICE_ENABLE=y
 # CONFIG_MXS_AUART1_DMA_ENABLE is not set
 CONFIG_MXS_AUART2_DEVICE_ENABLE=y
 # CONFIG_MXS_AUART2_DMA_ENABLE is not set
-CONFIG_MXS_AUART3_DEVICE_ENABLE=y
+# CONFIG_MXS_AUART3_DEVICE_ENABLE is not set
 # CONFIG_MXS_AUART3_DMA_ENABLE is not set
 CONFIG_MXS_AUART4_DEVICE_ENABLE=y
 # CONFIG_MXS_AUART4_DMA_ENABLE is not set
@@ -490,15 +492,23 @@ CONFIG_NETWORK_SECMARK=y
 # CONFIG_HAMRADIO is not set
 CONFIG_CAN=y
 CONFIG_CAN_RAW=y
-# CONFIG_CAN_BCM is not set
+CONFIG_CAN_BCM=y
 
 #
 # CAN Device Drivers
 #
 # CONFIG_CAN_VCAN is not set
-# CONFIG_CAN_DEV is not set
-# CONFIG_CAN_DEBUG_DEVICES is not set
-CONFIG_CAN_FLEXCAN=m
+CONFIG_CAN_DEV=y
+CONFIG_CAN_CALC_BITTIMING=y
+# CONFIG_CAN_MCP251X is not set
+# CONFIG_CAN_SJA1000 is not set
+
+#
+# CAN USB interfaces
+#
+# CONFIG_CAN_EMS_USB is not set
+CONFIG_CAN_FLEXCAN=y
+CONFIG_CAN_DEBUG_DEVICES=y
 # CONFIG_IRDA is not set
 # CONFIG_BT is not set
 # CONFIG_AF_RXRPC is not set
@@ -521,7 +531,6 @@ CONFIG_WIRELESS_EXT_SYSFS=y
 #
 # CONFIG_WIMAX is not set
 CONFIG_RFKILL=y
-CONFIG_RFKILL_LEDS=y
 CONFIG_RFKILL_INPUT=y
 # CONFIG_NET_9P is not set
 # CONFIG_CAIF is not set
@@ -1599,7 +1608,6 @@ CONFIG_USB_GADGET_SELECTED=y
 # CONFIG_USB_GADGET_GOKU is not set
 CONFIG_USB_GADGET_ARC=y
 CONFIG_USB_ARC=y
-CONFIG_WORKAROUND_ARCUSB_REG_RW=y
 # CONFIG_USB_GADGET_LANGWELL is not set
 # CONFIG_USB_GADGET_DUMMY_HCD is not set
 CONFIG_USB_GADGET_DUALSPEED=y
@@ -1659,7 +1667,7 @@ CONFIG_LEDS_CLASS=y
 #
 # CONFIG_LEDS_MXS is not set
 # CONFIG_LEDS_PCA9532 is not set
-CONFIG_LEDS_GPIO=y
+CONFIG_LEDS_GPIO=y 
 CONFIG_LEDS_GPIO_PLATFORM=y
 # CONFIG_LEDS_LP3944 is not set
 # CONFIG_LEDS_PCA955X is not set
@@ -1681,12 +1689,13 @@ CONFIG_LEDS_TRIGGER_DEFAULT_ON=y
 #
 # iptables trigger is under Netfilter config (LED target)
 #
+
 # CONFIG_ACCESSIBILITY is not set
 CONFIG_RTC_LIB=y
 CONFIG_RTC_CLASS=y
 CONFIG_RTC_HCTOSYS=y
 CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
-# CONFIG_RTC_DEBUG is not set
+CONFIG_RTC_DEBUG=y
 
 #
 # RTC interfaces
@@ -1827,7 +1836,6 @@ CONFIG_VFAT_FS=y
 CONFIG_FAT_DEFAULT_CODEPAGE=437
 CONFIG_FAT_DEFAULT_IOCHARSET="ascii"
 CONFIG_NTFS_FS=m
-# CONFIG_NTFS_DEBUG is not set
 CONFIG_NTFS_RW=y
 
 #
@@ -1870,7 +1878,7 @@ CONFIG_UBIFS_FS_ZLIB=y
 # CONFIG_LOGFS is not set
 CONFIG_CRAMFS=m
 # CONFIG_SQUASHFS is not set
-# CONFIG_VXFS_FS is not set
+CONFIG_VXFS_FS=m
 # CONFIG_MINIX_FS is not set
 # CONFIG_OMFS_FS is not set
 # CONFIG_HPFS_FS is not set
@@ -1920,42 +1928,42 @@ CONFIG_SUN_PARTITION=y
 CONFIG_EFI_PARTITION=y
 # CONFIG_SYSV68_PARTITION is not set
 CONFIG_NLS=y
-CONFIG_NLS_DEFAULT="ascii"
-# CONFIG_NLS_CODEPAGE_437 is not set
-# CONFIG_NLS_CODEPAGE_737 is not set
-# CONFIG_NLS_CODEPAGE_775 is not set
-# CONFIG_NLS_CODEPAGE_850 is not set
-# CONFIG_NLS_CODEPAGE_852 is not set
+CONFIG_NLS_DEFAULT="utf8"
+CONFIG_NLS_CODEPAGE_437=y
+CONFIG_NLS_CODEPAGE_737=m
+CONFIG_NLS_CODEPAGE_775=m
+CONFIG_NLS_CODEPAGE_850=m
+CONFIG_NLS_CODEPAGE_852=m
 CONFIG_NLS_CODEPAGE_855=m
-# CONFIG_NLS_CODEPAGE_857 is not set
-# CONFIG_NLS_CODEPAGE_860 is not set
-# CONFIG_NLS_CODEPAGE_861 is not set
-# CONFIG_NLS_CODEPAGE_862 is not set
-# CONFIG_NLS_CODEPAGE_863 is not set
-# CONFIG_NLS_CODEPAGE_864 is not set
-# CONFIG_NLS_CODEPAGE_865 is not set
+CONFIG_NLS_CODEPAGE_857=m
+CONFIG_NLS_CODEPAGE_860=m
+CONFIG_NLS_CODEPAGE_861=m
+CONFIG_NLS_CODEPAGE_862=m
+CONFIG_NLS_CODEPAGE_863=m
+CONFIG_NLS_CODEPAGE_864=m
+CONFIG_NLS_CODEPAGE_865=m
 CONFIG_NLS_CODEPAGE_866=m
-# CONFIG_NLS_CODEPAGE_869 is not set
-# CONFIG_NLS_CODEPAGE_936 is not set
-# CONFIG_NLS_CODEPAGE_950 is not set
-# CONFIG_NLS_CODEPAGE_932 is not set
-# CONFIG_NLS_CODEPAGE_949 is not set
-# CONFIG_NLS_CODEPAGE_874 is not set
-# CONFIG_NLS_ISO8859_8 is not set
-# CONFIG_NLS_CODEPAGE_1250 is not set
+CONFIG_NLS_CODEPAGE_869=m
+CONFIG_NLS_CODEPAGE_936=m
+CONFIG_NLS_CODEPAGE_950=m
+CONFIG_NLS_CODEPAGE_932=m
+CONFIG_NLS_CODEPAGE_949=m
+CONFIG_NLS_CODEPAGE_874=m
+CONFIG_NLS_ISO8859_8=m
+CONFIG_NLS_CODEPAGE_1250=m
 CONFIG_NLS_CODEPAGE_1251=m
 CONFIG_NLS_ASCII=y
-# CONFIG_NLS_ISO8859_1 is not set
-# CONFIG_NLS_ISO8859_2 is not set
-# CONFIG_NLS_ISO8859_3 is not set
-# CONFIG_NLS_ISO8859_4 is not set
+CONFIG_NLS_ISO8859_1=m
+CONFIG_NLS_ISO8859_2=m
+CONFIG_NLS_ISO8859_3=m
+CONFIG_NLS_ISO8859_4=m
 CONFIG_NLS_ISO8859_5=m
-# CONFIG_NLS_ISO8859_6 is not set
-# CONFIG_NLS_ISO8859_7 is not set
-# CONFIG_NLS_ISO8859_9 is not set
-# CONFIG_NLS_ISO8859_13 is not set
-# CONFIG_NLS_ISO8859_14 is not set
-# CONFIG_NLS_ISO8859_15 is not set
+CONFIG_NLS_ISO8859_6=m
+CONFIG_NLS_ISO8859_7=m
+CONFIG_NLS_ISO8859_9=m
+CONFIG_NLS_ISO8859_13=m
+CONFIG_NLS_ISO8859_14=m
+CONFIG_NLS_ISO8859_15=m
 CONFIG_NLS_KOI8_R=m
 CONFIG_NLS_KOI8_U=m
 CONFIG_NLS_UTF8=m
@@ -1978,6 +1986,7 @@ CONFIG_DEBUG_FS=y
 # CONFIG_SLUB_STATS is not set
 CONFIG_DEBUG_BUGVERBOSE=y
 CONFIG_DEBUG_MEMORY_INIT=y
+CONFIG_FRAME_POINTER=y
 # CONFIG_RCU_CPU_STALL_DETECTOR is not set
 # CONFIG_LKDTM is not set
 # CONFIG_LATENCYTOP is not set
-- 
1.9.1


From 3035ce29bd32ad9c51ca203a51c2e4fc5cbd8e33 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Thu, 28 Aug 2014 12:17:31 +0400
Subject: [PATCH 13/14] =?UTF-8?q?=D0=B2=D0=BE=D0=B7=D0=B2=D1=80=D0=B0?=
 =?UTF-8?q?=D1=89=D0=B0=D1=8E=20.config=20=D0=B2=20gitignore?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .gitignore | 1 -
 1 file changed, 1 deletion(-)

diff --git a/.gitignore b/.gitignore
index eed75bd..8faa6c0 100644
--- a/.gitignore
+++ b/.gitignore
@@ -49,7 +49,6 @@ modules.builtin
 #
 !.gitignore
 !.mailmap
-!.config
 
 #
 # Generated include files
-- 
1.9.1


From 8c30179d315722513a86dc13df87ad7feeb82ddf Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=A2=D0=B5=D0=BD=D0=B3=D0=B8=D0=B7=20=D0=A8=D0=B0=D1=80?=
 =?UTF-8?q?=D0=B0=D1=84=D0=B8=D0=B5=D0=B2?= <btolfa@gmail.com>
Date: Thu, 28 Aug 2014 12:58:24 +0400
Subject: [PATCH 14/14] =?UTF-8?q?=D0=A3=D0=B4=D0=B0=D0=BB=D1=8F=D1=8E=20.c?=
 =?UTF-8?q?onfig=20=D0=B8=D0=B7=20=D1=80=D0=B5=D0=BF=D0=BE=D0=B7=D0=B8?=
 =?UTF-8?q?=D1=82=D0=BE=D1=80=D0=B8=D1=8F?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .config | 2143 ---------------------------------------------------------------
 1 file changed, 2143 deletions(-)
 delete mode 100644 .config

diff --git a/.config b/.config
deleted file mode 100644
index 7c9cdc7..0000000
--- a/.config
+++ /dev/null
@@ -1,2143 +0,0 @@
-#
-# Automatically generated make config: don't edit
-# Linux kernel version: 2.6.35.3
-# Tue Aug 26 16:04:37 2014
-#
-CONFIG_ARM=y
-CONFIG_SYS_SUPPORTS_APM_EMULATION=y
-CONFIG_GENERIC_GPIO=y
-CONFIG_GENERIC_TIME=y
-# CONFIG_ARCH_USES_GETTIMEOFFSET is not set
-CONFIG_GENERIC_CLOCKEVENTS=y
-CONFIG_HAVE_PROC_CPU=y
-CONFIG_GENERIC_HARDIRQS=y
-CONFIG_STACKTRACE_SUPPORT=y
-CONFIG_HAVE_LATENCYTOP_SUPPORT=y
-CONFIG_LOCKDEP_SUPPORT=y
-CONFIG_TRACE_IRQFLAGS_SUPPORT=y
-CONFIG_HARDIRQS_SW_RESEND=y
-CONFIG_GENERIC_IRQ_PROBE=y
-CONFIG_RWSEM_GENERIC_SPINLOCK=y
-CONFIG_ARCH_HAS_CPUFREQ=y
-CONFIG_GENERIC_HWEIGHT=y
-CONFIG_GENERIC_CALIBRATE_DELAY=y
-CONFIG_ZONE_DMA=y
-CONFIG_NEED_DMA_MAP_STATE=y
-CONFIG_FIQ=y
-CONFIG_GENERIC_HARDIRQS_NO__DO_IRQ=y
-CONFIG_VECTORS_BASE=0xffff0000
-CONFIG_DEFCONFIG_LIST="/lib/modules/$UNAME_RELEASE/.config"
-CONFIG_CONSTRUCTORS=y
-
-#
-# General setup
-#
-CONFIG_EXPERIMENTAL=y
-CONFIG_BROKEN_ON_SMP=y
-CONFIG_LOCK_KERNEL=y
-CONFIG_INIT_ENV_ARG_LIMIT=32
-CONFIG_CROSS_COMPILE=""
-CONFIG_LOCALVERSION=""
-CONFIG_LOCALVERSION_AUTO=y
-CONFIG_HAVE_KERNEL_GZIP=y
-CONFIG_HAVE_KERNEL_LZMA=y
-CONFIG_HAVE_KERNEL_LZO=y
-CONFIG_KERNEL_GZIP=y
-# CONFIG_KERNEL_BZIP2 is not set
-# CONFIG_KERNEL_LZMA is not set
-# CONFIG_KERNEL_LZO is not set
-CONFIG_SWAP=y
-CONFIG_SYSVIPC=y
-CONFIG_SYSVIPC_SYSCTL=y
-CONFIG_POSIX_MQUEUE=y
-CONFIG_POSIX_MQUEUE_SYSCTL=y
-CONFIG_BSD_PROCESS_ACCT=y
-# CONFIG_BSD_PROCESS_ACCT_V3 is not set
-# CONFIG_TASKSTATS is not set
-CONFIG_AUDIT=y
-
-#
-# RCU Subsystem
-#
-CONFIG_TREE_RCU=y
-# CONFIG_TREE_PREEMPT_RCU is not set
-# CONFIG_TINY_RCU is not set
-# CONFIG_RCU_TRACE is not set
-CONFIG_RCU_FANOUT=32
-# CONFIG_RCU_FANOUT_EXACT is not set
-# CONFIG_TREE_RCU_TRACE is not set
-# CONFIG_IKCONFIG is not set
-CONFIG_LOG_BUF_SHIFT=17
-# CONFIG_CGROUPS is not set
-# CONFIG_SYSFS_DEPRECATED_V2 is not set
-# CONFIG_RELAY is not set
-CONFIG_NAMESPACES=y
-# CONFIG_UTS_NS is not set
-# CONFIG_IPC_NS is not set
-# CONFIG_USER_NS is not set
-# CONFIG_PID_NS is not set
-# CONFIG_NET_NS is not set
-CONFIG_BLK_DEV_INITRD=y
-CONFIG_INITRAMFS_SOURCE=""
-CONFIG_RD_GZIP=y
-CONFIG_RD_BZIP2=y
-CONFIG_RD_LZMA=y
-CONFIG_RD_LZO=y
-CONFIG_CC_OPTIMIZE_FOR_SIZE=y
-CONFIG_SYSCTL=y
-CONFIG_ANON_INODES=y
-# CONFIG_EMBEDDED is not set
-CONFIG_UID16=y
-CONFIG_SYSCTL_SYSCALL=y
-CONFIG_KALLSYMS=y
-CONFIG_KALLSYMS_EXTRA_PASS=y
-CONFIG_HOTPLUG=y
-CONFIG_PRINTK=y
-CONFIG_BUG=y
-CONFIG_ELF_CORE=y
-CONFIG_BASE_FULL=y
-CONFIG_FUTEX=y
-CONFIG_EPOLL=y
-CONFIG_SIGNALFD=y
-CONFIG_TIMERFD=y
-CONFIG_EVENTFD=y
-CONFIG_SHMEM=y
-# CONFIG_ASHMEM is not set
-CONFIG_AIO=y
-CONFIG_HAVE_PERF_EVENTS=y
-CONFIG_PERF_USE_VMALLOC=y
-
-#
-# Kernel Performance Events And Counters
-#
-CONFIG_PERF_EVENTS=y
-# CONFIG_PERF_COUNTERS is not set
-CONFIG_VM_EVENT_COUNTERS=y
-CONFIG_SLUB_DEBUG=y
-CONFIG_COMPAT_BRK=y
-# CONFIG_SLAB is not set
-CONFIG_SLUB=y
-# CONFIG_SLOB is not set
-CONFIG_PROFILING=y
-CONFIG_OPROFILE=m
-CONFIG_HAVE_OPROFILE=y
-CONFIG_KPROBES=y
-CONFIG_KRETPROBES=y
-CONFIG_HAVE_KPROBES=y
-CONFIG_HAVE_KRETPROBES=y
-CONFIG_HAVE_CLK=y
-
-#
-# GCOV-based kernel profiling
-#
-# CONFIG_GCOV_KERNEL is not set
-# CONFIG_SLOW_WORK is not set
-CONFIG_HAVE_GENERIC_DMA_COHERENT=y
-CONFIG_SLABINFO=y
-CONFIG_RT_MUTEXES=y
-CONFIG_BASE_SMALL=0
-CONFIG_MODULES=y
-# CONFIG_MODULE_FORCE_LOAD is not set
-CONFIG_MODULE_UNLOAD=y
-# CONFIG_MODULE_FORCE_UNLOAD is not set
-CONFIG_MODVERSIONS=y
-# CONFIG_MODULE_SRCVERSION_ALL is not set
-CONFIG_BLOCK=y
-CONFIG_LBDAF=y
-CONFIG_BLK_DEV_BSG=y
-# CONFIG_BLK_DEV_INTEGRITY is not set
-
-#
-# IO Schedulers
-#
-CONFIG_IOSCHED_NOOP=y
-CONFIG_IOSCHED_DEADLINE=y
-CONFIG_IOSCHED_CFQ=y
-# CONFIG_DEFAULT_DEADLINE is not set
-CONFIG_DEFAULT_CFQ=y
-# CONFIG_DEFAULT_NOOP is not set
-CONFIG_DEFAULT_IOSCHED="cfq"
-# CONFIG_INLINE_SPIN_TRYLOCK is not set
-# CONFIG_INLINE_SPIN_TRYLOCK_BH is not set
-# CONFIG_INLINE_SPIN_LOCK is not set
-# CONFIG_INLINE_SPIN_LOCK_BH is not set
-# CONFIG_INLINE_SPIN_LOCK_IRQ is not set
-# CONFIG_INLINE_SPIN_LOCK_IRQSAVE is not set
-# CONFIG_INLINE_SPIN_UNLOCK is not set
-# CONFIG_INLINE_SPIN_UNLOCK_BH is not set
-# CONFIG_INLINE_SPIN_UNLOCK_IRQ is not set
-# CONFIG_INLINE_SPIN_UNLOCK_IRQRESTORE is not set
-# CONFIG_INLINE_READ_TRYLOCK is not set
-# CONFIG_INLINE_READ_LOCK is not set
-# CONFIG_INLINE_READ_LOCK_BH is not set
-# CONFIG_INLINE_READ_LOCK_IRQ is not set
-# CONFIG_INLINE_READ_LOCK_IRQSAVE is not set
-# CONFIG_INLINE_READ_UNLOCK is not set
-# CONFIG_INLINE_READ_UNLOCK_BH is not set
-# CONFIG_INLINE_READ_UNLOCK_IRQ is not set
-# CONFIG_INLINE_READ_UNLOCK_IRQRESTORE is not set
-# CONFIG_INLINE_WRITE_TRYLOCK is not set
-# CONFIG_INLINE_WRITE_LOCK is not set
-# CONFIG_INLINE_WRITE_LOCK_BH is not set
-# CONFIG_INLINE_WRITE_LOCK_IRQ is not set
-# CONFIG_INLINE_WRITE_LOCK_IRQSAVE is not set
-# CONFIG_INLINE_WRITE_UNLOCK is not set
-# CONFIG_INLINE_WRITE_UNLOCK_BH is not set
-# CONFIG_INLINE_WRITE_UNLOCK_IRQ is not set
-# CONFIG_INLINE_WRITE_UNLOCK_IRQRESTORE is not set
-# CONFIG_MUTEX_SPIN_ON_OWNER is not set
-CONFIG_FREEZER=y
-
-#
-# System Type
-#
-CONFIG_MMU=y
-# CONFIG_ARCH_AAEC2000 is not set
-# CONFIG_ARCH_INTEGRATOR is not set
-# CONFIG_ARCH_REALVIEW is not set
-# CONFIG_ARCH_VERSATILE is not set
-# CONFIG_ARCH_VEXPRESS is not set
-# CONFIG_ARCH_AT91 is not set
-# CONFIG_ARCH_BCMRING is not set
-# CONFIG_ARCH_CLPS711X is not set
-# CONFIG_ARCH_CNS3XXX is not set
-# CONFIG_ARCH_GEMINI is not set
-# CONFIG_ARCH_EBSA110 is not set
-# CONFIG_ARCH_EP93XX is not set
-# CONFIG_ARCH_FOOTBRIDGE is not set
-# CONFIG_ARCH_MXC is not set
-# CONFIG_ARCH_STMP3XXX is not set
-CONFIG_ARCH_MXS=y
-# CONFIG_ARCH_NETX is not set
-# CONFIG_ARCH_H720X is not set
-# CONFIG_ARCH_IOP13XX is not set
-# CONFIG_ARCH_IOP32X is not set
-# CONFIG_ARCH_IOP33X is not set
-# CONFIG_ARCH_IXP23XX is not set
-# CONFIG_ARCH_IXP2000 is not set
-# CONFIG_ARCH_IXP4XX is not set
-# CONFIG_ARCH_L7200 is not set
-# CONFIG_ARCH_DOVE is not set
-# CONFIG_ARCH_KIRKWOOD is not set
-# CONFIG_ARCH_LOKI is not set
-# CONFIG_ARCH_MV78XX0 is not set
-# CONFIG_ARCH_ORION5X is not set
-# CONFIG_ARCH_MMP is not set
-# CONFIG_ARCH_KS8695 is not set
-# CONFIG_ARCH_NS9XXX is not set
-# CONFIG_ARCH_W90X900 is not set
-# CONFIG_ARCH_NUC93X is not set
-# CONFIG_ARCH_PNX4008 is not set
-# CONFIG_ARCH_PXA is not set
-# CONFIG_ARCH_MSM is not set
-# CONFIG_ARCH_SHMOBILE is not set
-# CONFIG_ARCH_RPC is not set
-# CONFIG_ARCH_SA1100 is not set
-# CONFIG_ARCH_S3C2410 is not set
-# CONFIG_ARCH_S3C64XX is not set
-# CONFIG_ARCH_S5P6440 is not set
-# CONFIG_ARCH_S5P6442 is not set
-# CONFIG_ARCH_S5PC100 is not set
-# CONFIG_ARCH_S5PV210 is not set
-# CONFIG_ARCH_SHARK is not set
-# CONFIG_ARCH_LH7A40X is not set
-# CONFIG_ARCH_U300 is not set
-# CONFIG_ARCH_U8500 is not set
-# CONFIG_ARCH_NOMADIK is not set
-# CONFIG_ARCH_DAVINCI is not set
-# CONFIG_ARCH_OMAP is not set
-# CONFIG_PLAT_SPEAR is not set
-CONFIG_IRAM_ALLOC=y
-CONFIG_DMA_ZONE_SIZE=16
-
-#
-# Freescale i.MXS implementations
-#
-CONFIG_ARCH_MX28=y
-# CONFIG_ARCH_MX23 is not set
-CONFIG_MACH_MX28EVK=y
-CONFIG_VECTORS_PHY_ADDR=0
-CONFIG_MXS_TIMER_WITH_MACH=y
-# CONFIG_MEM_mDDR is not set
-# CONFIG_MX28_SUSPEND_TO_RAM is not set
-CONFIG_WORKAROUND_ARCUSB_REG_RW=y
-CONFIG_MXS_ICOLL=y
-CONFIG_MXS_EARLY_CONSOLE=y
-CONFIG_MXS_DMA_ENGINE=y
-CONFIG_MXS_LRADC=y
-CONFIG_MXS_PWM_CHANNELS=8
-
-#
-# Freescale Application UART:
-#
-CONFIG_MXS_AUART_DMA_SUPPORT=y
-CONFIG_MXS_AUART_PORTS=5
-CONFIG_MXS_AUART0_DEVICE_ENABLE=y
-# CONFIG_MXS_AUART0_DMA_ENABLE is not set
-CONFIG_MXS_AUART1_DEVICE_ENABLE=y
-# CONFIG_MXS_AUART1_DMA_ENABLE is not set
-CONFIG_MXS_AUART2_DEVICE_ENABLE=y
-# CONFIG_MXS_AUART2_DMA_ENABLE is not set
-# CONFIG_MXS_AUART3_DEVICE_ENABLE is not set
-# CONFIG_MXS_AUART3_DMA_ENABLE is not set
-CONFIG_MXS_AUART4_DEVICE_ENABLE=y
-# CONFIG_MXS_AUART4_DMA_ENABLE is not set
-CONFIG_MXS_RAM_FREQ_SCALING=y
-# CONFIG_MXS_RAM_MDDR is not set
-# CONFIG_MXS_RAM_DDR is not set
-
-#
-# Processor Type
-#
-CONFIG_CPU_ARM926T=y
-CONFIG_CPU_32v5=y
-CONFIG_CPU_ABRT_EV5TJ=y
-CONFIG_CPU_PABRT_LEGACY=y
-CONFIG_CPU_CACHE_VIVT=y
-CONFIG_CPU_COPY_V4WB=y
-CONFIG_CPU_TLB_V4WBI=y
-CONFIG_CPU_CP15=y
-CONFIG_CPU_CP15_MMU=y
-
-#
-# Processor Features
-#
-CONFIG_ARM_THUMB=y
-# CONFIG_CPU_ICACHE_DISABLE is not set
-# CONFIG_CPU_DCACHE_DISABLE is not set
-# CONFIG_CPU_DCACHE_WRITETHROUGH is not set
-# CONFIG_CPU_CACHE_ROUND_ROBIN is not set
-CONFIG_ARM_L1_CACHE_SHIFT=5
-CONFIG_COMMON_CLKDEV=y
-
-#
-# Bus support
-#
-# CONFIG_PCI_SYSCALL is not set
-# CONFIG_ARCH_SUPPORTS_MSI is not set
-# CONFIG_PCCARD is not set
-
-#
-# Kernel Features
-#
-CONFIG_TICK_ONESHOT=y
-CONFIG_NO_HZ=y
-CONFIG_HIGH_RES_TIMERS=y
-CONFIG_GENERIC_CLOCKEVENTS_BUILD=y
-CONFIG_VMSPLIT_3G=y
-# CONFIG_VMSPLIT_2G is not set
-# CONFIG_VMSPLIT_1G is not set
-CONFIG_PAGE_OFFSET=0xC0000000
-# CONFIG_PREEMPT_NONE is not set
-# CONFIG_PREEMPT_VOLUNTARY is not set
-CONFIG_PREEMPT=y
-CONFIG_HZ=100
-CONFIG_AEABI=y
-CONFIG_OABI_COMPAT=y
-# CONFIG_ARCH_SPARSEMEM_DEFAULT is not set
-# CONFIG_ARCH_SELECT_MEMORY_MODEL is not set
-# CONFIG_HIGHMEM is not set
-CONFIG_SELECT_MEMORY_MODEL=y
-CONFIG_FLATMEM_MANUAL=y
-# CONFIG_DISCONTIGMEM_MANUAL is not set
-# CONFIG_SPARSEMEM_MANUAL is not set
-CONFIG_FLATMEM=y
-CONFIG_FLAT_NODE_MEM_MAP=y
-CONFIG_PAGEFLAGS_EXTENDED=y
-CONFIG_SPLIT_PTLOCK_CPUS=999999
-# CONFIG_PHYS_ADDR_T_64BIT is not set
-CONFIG_ZONE_DMA_FLAG=1
-CONFIG_BOUNCE=y
-CONFIG_VIRT_TO_BUS=y
-# CONFIG_KSM is not set
-CONFIG_DEFAULT_MMAP_MIN_ADDR=4096
-CONFIG_ALIGNMENT_TRAP=y
-# CONFIG_UACCESS_WITH_MEMCPY is not set
-
-#
-# Boot options
-#
-CONFIG_ZBOOT_ROM_TEXT=0
-CONFIG_ZBOOT_ROM_BSS=0
-CONFIG_CMDLINE=""
-# CONFIG_XIP_KERNEL is not set
-# CONFIG_KEXEC is not set
-
-#
-# CPU Power Management
-#
-CONFIG_CPU_FREQ=y
-CONFIG_CPU_FREQ_TABLE=y
-# CONFIG_CPU_FREQ_DEBUG is not set
-CONFIG_CPU_FREQ_STAT=y
-# CONFIG_CPU_FREQ_STAT_DETAILS is not set
-# CONFIG_CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set
-# CONFIG_CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set
-CONFIG_CPU_FREQ_DEFAULT_GOV_USERSPACE=y
-# CONFIG_CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set
-# CONFIG_CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set
-CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
-CONFIG_CPU_FREQ_GOV_POWERSAVE=y
-CONFIG_CPU_FREQ_GOV_USERSPACE=y
-# CONFIG_CPU_FREQ_GOV_ONDEMAND is not set
-# CONFIG_CPU_FREQ_GOV_CONSERVATIVE is not set
-# CONFIG_CPU_IDLE is not set
-
-#
-# Floating point emulation
-#
-
-#
-# At least one emulation must be selected
-#
-# CONFIG_FPE_NWFPE is not set
-# CONFIG_FPE_FASTFPE is not set
-# CONFIG_VFP is not set
-
-#
-# Userspace binary formats
-#
-CONFIG_BINFMT_ELF=y
-# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
-CONFIG_HAVE_AOUT=y
-# CONFIG_BINFMT_AOUT is not set
-CONFIG_BINFMT_MISC=y
-
-#
-# Power management options
-#
-CONFIG_PM=y
-# CONFIG_PM_DEBUG is not set
-CONFIG_PM_SLEEP=y
-CONFIG_SUSPEND_NVS=y
-CONFIG_SUSPEND=y
-CONFIG_SUSPEND_FREEZER=y
-# CONFIG_APM_EMULATION is not set
-CONFIG_PM_RUNTIME=y
-CONFIG_PM_OPS=y
-CONFIG_ARCH_SUSPEND_POSSIBLE=y
-CONFIG_NET=y
-
-#
-# Networking options
-#
-CONFIG_PACKET=y
-CONFIG_UNIX=y
-CONFIG_XFRM=y
-# CONFIG_XFRM_USER is not set
-# CONFIG_XFRM_SUB_POLICY is not set
-# CONFIG_XFRM_MIGRATE is not set
-# CONFIG_XFRM_STATISTICS is not set
-# CONFIG_NET_KEY is not set
-CONFIG_INET=y
-CONFIG_IP_MULTICAST=y
-# CONFIG_IP_ADVANCED_ROUTER is not set
-CONFIG_IP_FIB_HASH=y
-CONFIG_IP_PNP=y
-CONFIG_IP_PNP_DHCP=y
-CONFIG_IP_PNP_BOOTP=y
-# CONFIG_IP_PNP_RARP is not set
-# CONFIG_NET_IPIP is not set
-# CONFIG_NET_IPGRE is not set
-# CONFIG_IP_MROUTE is not set
-# CONFIG_ARPD is not set
-# CONFIG_SYN_COOKIES is not set
-# CONFIG_INET_AH is not set
-# CONFIG_INET_ESP is not set
-# CONFIG_INET_IPCOMP is not set
-# CONFIG_INET_XFRM_TUNNEL is not set
-# CONFIG_INET_TUNNEL is not set
-CONFIG_INET_XFRM_MODE_TRANSPORT=y
-CONFIG_INET_XFRM_MODE_TUNNEL=y
-CONFIG_INET_XFRM_MODE_BEET=y
-# CONFIG_INET_LRO is not set
-CONFIG_INET_DIAG=y
-CONFIG_INET_TCP_DIAG=y
-# CONFIG_TCP_CONG_ADVANCED is not set
-CONFIG_TCP_CONG_CUBIC=y
-CONFIG_DEFAULT_TCP_CONG="cubic"
-# CONFIG_TCP_MD5SIG is not set
-# CONFIG_IPV6 is not set
-# CONFIG_NETLABEL is not set
-CONFIG_NETWORK_SECMARK=y
-# CONFIG_NETFILTER is not set
-# CONFIG_IP_DCCP is not set
-# CONFIG_IP_SCTP is not set
-# CONFIG_RDS is not set
-# CONFIG_TIPC is not set
-# CONFIG_ATM is not set
-# CONFIG_L2TP is not set
-# CONFIG_BRIDGE is not set
-# CONFIG_NET_DSA is not set
-# CONFIG_VLAN_8021Q is not set
-# CONFIG_DECNET is not set
-# CONFIG_LLC2 is not set
-# CONFIG_IPX is not set
-# CONFIG_ATALK is not set
-# CONFIG_X25 is not set
-# CONFIG_LAPB is not set
-# CONFIG_ECONET is not set
-# CONFIG_WAN_ROUTER is not set
-# CONFIG_PHONET is not set
-# CONFIG_IEEE802154 is not set
-# CONFIG_NET_SCHED is not set
-# CONFIG_DCB is not set
-
-#
-# Network testing
-#
-# CONFIG_NET_PKTGEN is not set
-# CONFIG_NET_TCPPROBE is not set
-# CONFIG_HAMRADIO is not set
-CONFIG_CAN=y
-CONFIG_CAN_RAW=y
-CONFIG_CAN_BCM=y
-
-#
-# CAN Device Drivers
-#
-# CONFIG_CAN_VCAN is not set
-CONFIG_CAN_DEV=y
-CONFIG_CAN_CALC_BITTIMING=y
-# CONFIG_CAN_MCP251X is not set
-# CONFIG_CAN_SJA1000 is not set
-
-#
-# CAN USB interfaces
-#
-# CONFIG_CAN_EMS_USB is not set
-CONFIG_CAN_FLEXCAN=y
-CONFIG_CAN_DEBUG_DEVICES=y
-# CONFIG_IRDA is not set
-# CONFIG_BT is not set
-# CONFIG_AF_RXRPC is not set
-CONFIG_WIRELESS=y
-CONFIG_WIRELESS_EXT=y
-CONFIG_WEXT_CORE=y
-CONFIG_WEXT_PROC=y
-CONFIG_WEXT_SPY=y
-CONFIG_WEXT_PRIV=y
-# CONFIG_CFG80211 is not set
-CONFIG_WIRELESS_EXT_SYSFS=y
-# CONFIG_LIB80211 is not set
-
-#
-# CFG80211 needs to be enabled for MAC80211
-#
-
-#
-# Some wireless drivers require a rate control algorithm
-#
-# CONFIG_WIMAX is not set
-CONFIG_RFKILL=y
-CONFIG_RFKILL_INPUT=y
-# CONFIG_NET_9P is not set
-# CONFIG_CAIF is not set
-
-#
-# Device Drivers
-#
-
-#
-# Generic Driver Options
-#
-CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
-# CONFIG_DEVTMPFS is not set
-CONFIG_STANDALONE=y
-CONFIG_PREVENT_FIRMWARE_BUILD=y
-CONFIG_FW_LOADER=y
-CONFIG_FIRMWARE_IN_KERNEL=y
-CONFIG_EXTRA_FIRMWARE=""
-# CONFIG_SYS_HYPERVISOR is not set
-# CONFIG_CONNECTOR is not set
-CONFIG_MTD=y
-# CONFIG_MTD_DEBUG is not set
-# CONFIG_MTD_TESTS is not set
-CONFIG_MTD_CONCAT=y
-CONFIG_MTD_PARTITIONS=y
-# CONFIG_MTD_REDBOOT_PARTS is not set
-CONFIG_MTD_CMDLINE_PARTS=y
-# CONFIG_MTD_AFS_PARTS is not set
-# CONFIG_MTD_AR7_PARTS is not set
-
-#
-# User Modules And Translation Layers
-#
-CONFIG_MTD_CHAR=y
-CONFIG_MTD_BLKDEVS=y
-CONFIG_MTD_BLOCK=y
-# CONFIG_FTL is not set
-# CONFIG_NFTL is not set
-# CONFIG_INFTL is not set
-# CONFIG_RFD_FTL is not set
-# CONFIG_SSFDC is not set
-# CONFIG_SM_FTL is not set
-# CONFIG_MTD_OOPS is not set
-
-#
-# RAM/ROM/Flash chip drivers
-#
-# CONFIG_MTD_CFI is not set
-# CONFIG_MTD_JEDECPROBE is not set
-CONFIG_MTD_MAP_BANK_WIDTH_1=y
-CONFIG_MTD_MAP_BANK_WIDTH_2=y
-CONFIG_MTD_MAP_BANK_WIDTH_4=y
-# CONFIG_MTD_MAP_BANK_WIDTH_8 is not set
-# CONFIG_MTD_MAP_BANK_WIDTH_16 is not set
-# CONFIG_MTD_MAP_BANK_WIDTH_32 is not set
-CONFIG_MTD_CFI_I1=y
-CONFIG_MTD_CFI_I2=y
-# CONFIG_MTD_CFI_I4 is not set
-# CONFIG_MTD_CFI_I8 is not set
-# CONFIG_MTD_RAM is not set
-# CONFIG_MTD_ROM is not set
-# CONFIG_MTD_ABSENT is not set
-
-#
-# Mapping drivers for chip access
-#
-# CONFIG_MTD_COMPLEX_MAPPINGS is not set
-# CONFIG_MTD_PLATRAM is not set
-
-#
-# Self-contained MTD device drivers
-#
-# CONFIG_MTD_DATAFLASH is not set
-# CONFIG_MTD_MXC_DATAFLASH is not set
-CONFIG_MTD_M25P80=m
-CONFIG_M25PXX_USE_FAST_READ=y
-# CONFIG_MTD_SST25L is not set
-# CONFIG_MTD_SLRAM is not set
-# CONFIG_MTD_PHRAM is not set
-# CONFIG_MTD_MTDRAM is not set
-# CONFIG_MTD_BLOCK2MTD is not set
-
-#
-# Disk-On-Chip Device Drivers
-#
-# CONFIG_MTD_DOC2000 is not set
-# CONFIG_MTD_DOC2001 is not set
-# CONFIG_MTD_DOC2001PLUS is not set
-CONFIG_MTD_NAND_ECC=y
-# CONFIG_MTD_NAND_ECC_SMC is not set
-CONFIG_MTD_NAND=y
-# CONFIG_MTD_NAND_VERIFY_WRITE is not set
-# CONFIG_MTD_SM_COMMON is not set
-# CONFIG_MTD_NAND_MUSEUM_IDS is not set
-CONFIG_MTD_NAND_DENALI_SCRATCH_REG_ADDR=0xFF108018
-# CONFIG_MTD_NAND_GPIO is not set
-CONFIG_MTD_NAND_IDS=y
-# CONFIG_MTD_NAND_DISKONCHIP is not set
-# CONFIG_MTD_NAND_NANDSIM is not set
-CONFIG_MTD_NAND_GPMI_NFC=y
-# CONFIG_MTD_NAND_PLATFORM is not set
-# CONFIG_MTD_ALAUDA is not set
-# CONFIG_MTD_ONENAND is not set
-
-#
-# LPDDR flash memory drivers
-#
-# CONFIG_MTD_LPDDR is not set
-
-#
-# UBI - Unsorted block images
-#
-CONFIG_MTD_UBI=y
-CONFIG_MTD_UBI_WL_THRESHOLD=4096
-CONFIG_MTD_UBI_BEB_RESERVE=1
-# CONFIG_MTD_UBI_GLUEBI is not set
-
-#
-# UBI debugging options
-#
-# CONFIG_MTD_UBI_DEBUG is not set
-CONFIG_MTD_UBI_BLOCK=y
-# CONFIG_PARPORT is not set
-CONFIG_BLK_DEV=y
-# CONFIG_BLK_DEV_COW_COMMON is not set
-CONFIG_BLK_DEV_LOOP=y
-# CONFIG_BLK_DEV_CRYPTOLOOP is not set
-
-#
-# DRBD disabled because PROC_FS, INET or CONNECTOR not selected
-#
-# CONFIG_BLK_DEV_NBD is not set
-# CONFIG_BLK_DEV_UB is not set
-CONFIG_BLK_DEV_RAM=y
-CONFIG_BLK_DEV_RAM_COUNT=4
-CONFIG_BLK_DEV_RAM_SIZE=16384
-# CONFIG_BLK_DEV_XIP is not set
-# CONFIG_CDROM_PKTCDVD is not set
-# CONFIG_ATA_OVER_ETH is not set
-# CONFIG_MG_DISK is not set
-CONFIG_MISC_DEVICES=y
-# CONFIG_AD525X_DPOT is not set
-# CONFIG_ICS932S401 is not set
-# CONFIG_ENCLOSURE_SERVICES is not set
-# CONFIG_ISL29003 is not set
-# CONFIG_SENSORS_TSL2550 is not set
-# CONFIG_DS1682 is not set
-# CONFIG_TI_DAC7512 is not set
-CONFIG_MXS_PERSISTENT=y
-CONFIG_MXS_PERFMON=y
-# CONFIG_ANDROID_PMEM is not set
-# CONFIG_UID_STAT is not set
-# CONFIG_C2PORT is not set
-
-#
-# EEPROM support
-#
-# CONFIG_EEPROM_AT24 is not set
-# CONFIG_EEPROM_AT25 is not set
-# CONFIG_EEPROM_LEGACY is not set
-# CONFIG_EEPROM_MAX6875 is not set
-# CONFIG_EEPROM_93CX6 is not set
-# CONFIG_IWMC3200TOP is not set
-CONFIG_HAVE_IDE=y
-# CONFIG_IDE is not set
-
-#
-# SCSI device support
-#
-CONFIG_SCSI_MOD=y
-# CONFIG_RAID_ATTRS is not set
-CONFIG_SCSI=y
-CONFIG_SCSI_DMA=y
-# CONFIG_SCSI_TGT is not set
-CONFIG_SCSI_NETLINK=y
-CONFIG_SCSI_PROC_FS=y
-
-#
-# SCSI support type (disk, tape, CD-ROM)
-#
-CONFIG_BLK_DEV_SD=y
-# CONFIG_CHR_DEV_ST is not set
-# CONFIG_CHR_DEV_OSST is not set
-# CONFIG_BLK_DEV_SR is not set
-# CONFIG_CHR_DEV_SG is not set
-# CONFIG_CHR_DEV_SCH is not set
-CONFIG_SCSI_MULTI_LUN=y
-# CONFIG_SCSI_CONSTANTS is not set
-# CONFIG_SCSI_LOGGING is not set
-# CONFIG_SCSI_SCAN_ASYNC is not set
-CONFIG_SCSI_WAIT_SCAN=m
-
-#
-# SCSI Transports
-#
-CONFIG_SCSI_SPI_ATTRS=m
-CONFIG_SCSI_FC_ATTRS=m
-CONFIG_SCSI_ISCSI_ATTRS=m
-# CONFIG_SCSI_SAS_ATTRS is not set
-# CONFIG_SCSI_SAS_LIBSAS is not set
-# CONFIG_SCSI_SRP_ATTRS is not set
-CONFIG_SCSI_LOWLEVEL=y
-# CONFIG_ISCSI_TCP is not set
-# CONFIG_LIBFC is not set
-# CONFIG_LIBFCOE is not set
-# CONFIG_SCSI_DEBUG is not set
-# CONFIG_SCSI_DH is not set
-# CONFIG_SCSI_OSD_INITIATOR is not set
-# CONFIG_ATA is not set
-# CONFIG_MD is not set
-CONFIG_NETDEVICES=y
-# CONFIG_DUMMY is not set
-# CONFIG_BONDING is not set
-# CONFIG_MACVLAN is not set
-# CONFIG_EQUALIZER is not set
-# CONFIG_TUN is not set
-# CONFIG_VETH is not set
-CONFIG_PHYLIB=y
-
-#
-# MII PHY device drivers
-#
-# CONFIG_MARVELL_PHY is not set
-# CONFIG_DAVICOM_PHY is not set
-# CONFIG_QSEMI_PHY is not set
-# CONFIG_LXT_PHY is not set
-# CONFIG_CICADA_PHY is not set
-# CONFIG_VITESSE_PHY is not set
-# CONFIG_SMSC_PHY is not set
-# CONFIG_BROADCOM_PHY is not set
-# CONFIG_ICPLUS_PHY is not set
-# CONFIG_REALTEK_PHY is not set
-# CONFIG_NATIONAL_PHY is not set
-# CONFIG_STE10XP is not set
-# CONFIG_LSI_ET1011C_PHY is not set
-# CONFIG_MICREL_PHY is not set
-# CONFIG_FIXED_PHY is not set
-# CONFIG_MDIO_BITBANG is not set
-CONFIG_NET_ETHERNET=y
-CONFIG_MII=y
-# CONFIG_AX88796 is not set
-# CONFIG_SMC91X is not set
-# CONFIG_DM9000 is not set
-# CONFIG_ENC28J60 is not set
-# CONFIG_ETHOC is not set
-# CONFIG_SMC911X is not set
-# CONFIG_SMSC911X is not set
-# CONFIG_DNET is not set
-# CONFIG_IBM_NEW_EMAC_ZMII is not set
-# CONFIG_IBM_NEW_EMAC_RGMII is not set
-# CONFIG_IBM_NEW_EMAC_TAH is not set
-# CONFIG_IBM_NEW_EMAC_EMAC4 is not set
-# CONFIG_IBM_NEW_EMAC_NO_FLOW_CTRL is not set
-# CONFIG_IBM_NEW_EMAC_MAL_CLR_ICINTSTAT is not set
-# CONFIG_IBM_NEW_EMAC_MAL_COMMON_ERR is not set
-# CONFIG_B44 is not set
-# CONFIG_KS8842 is not set
-# CONFIG_KS8851 is not set
-# CONFIG_KS8851_MLL is not set
-CONFIG_FEC=y
-# CONFIG_FEC_1588 is not set
-# CONFIG_FEC2 is not set
-# CONFIG_NETDEV_1000 is not set
-# CONFIG_NETDEV_10000 is not set
-CONFIG_WLAN=y
-# CONFIG_USB_ZD1201 is not set
-# CONFIG_HOSTAP is not set
-CONFIG_ATH6K_LEGACY=m
-CONFIG_AR600x_SD31_XXX=y
-# CONFIG_AR600x_WB31_XXX is not set
-# CONFIG_AR600x_SD32_XXX is not set
-# CONFIG_AR600x_CUSTOM_XXX is not set
-# CONFIG_ATH6KL_ENABLE_COEXISTENCE is not set
-# CONFIG_ATH6KL_HCI_BRIDGE is not set
-# CONFIG_ATH6KL_CFG80211 is not set
-# CONFIG_ATH6KL_HTC_RAW_INTERFACE is not set
-# CONFIG_ATH6KL_VIRTUAL_SCATTER_GATHER is not set
-# CONFIG_ATH6KL_DEBUG is not set
-
-#
-# Enable WiMAX (Networking options) to see the WiMAX drivers
-#
-
-#
-# USB Network Adapters
-#
-# CONFIG_USB_CATC is not set
-# CONFIG_USB_KAWETH is not set
-# CONFIG_USB_PEGASUS is not set
-# CONFIG_USB_RTL8150 is not set
-# CONFIG_USB_USBNET is not set
-# CONFIG_USB_HSO is not set
-# CONFIG_USB_IPHETH is not set
-# CONFIG_WAN is not set
-# CONFIG_PPP is not set
-# CONFIG_SLIP is not set
-# CONFIG_NETCONSOLE is not set
-# CONFIG_NETPOLL is not set
-# CONFIG_NET_POLL_CONTROLLER is not set
-# CONFIG_ISDN is not set
-# CONFIG_PHONE is not set
-
-#
-# Input device support
-#
-CONFIG_INPUT=y
-CONFIG_INPUT_FF_MEMLESS=y
-# CONFIG_INPUT_POLLDEV is not set
-# CONFIG_INPUT_SPARSEKMAP is not set
-
-#
-# Userland interfaces
-#
-CONFIG_INPUT_MOUSEDEV=y
-CONFIG_INPUT_MOUSEDEV_PSAUX=y
-CONFIG_INPUT_MOUSEDEV_SCREEN_X=1024
-CONFIG_INPUT_MOUSEDEV_SCREEN_Y=768
-CONFIG_INPUT_JOYDEV=m
-CONFIG_INPUT_EVDEV=y
-# CONFIG_INPUT_EVBUG is not set
-
-#
-# Input Device Drivers
-#
-CONFIG_INPUT_KEYBOARD=y
-# CONFIG_KEYBOARD_ADP5588 is not set
-CONFIG_KEYBOARD_ATKBD=y
-# CONFIG_KEYBOARD_QT2160 is not set
-# CONFIG_KEYBOARD_LKKBD is not set
-# CONFIG_KEYBOARD_GPIO is not set
-# CONFIG_KEYBOARD_TCA6416 is not set
-# CONFIG_KEYBOARD_MATRIX is not set
-# CONFIG_KEYBOARD_LM8323 is not set
-# CONFIG_KEYBOARD_MAX7359 is not set
-# CONFIG_KEYBOARD_NEWTON is not set
-# CONFIG_KEYBOARD_OPENCORES is not set
-# CONFIG_KEYBOARD_STOWAWAY is not set
-# CONFIG_KEYBOARD_SUNKBD is not set
-# CONFIG_KEYBOARD_XTKBD is not set
-CONFIG_KEYBOARD_MXS=y
-CONFIG_INPUT_MOUSE=y
-CONFIG_MOUSE_PS2=y
-CONFIG_MOUSE_PS2_ALPS=y
-CONFIG_MOUSE_PS2_LOGIPS2PP=y
-CONFIG_MOUSE_PS2_SYNAPTICS=y
-CONFIG_MOUSE_PS2_TRACKPOINT=y
-# CONFIG_MOUSE_PS2_ELANTECH is not set
-# CONFIG_MOUSE_PS2_SENTELIC is not set
-# CONFIG_MOUSE_PS2_TOUCHKIT is not set
-CONFIG_MOUSE_SERIAL=m
-# CONFIG_MOUSE_APPLETOUCH is not set
-# CONFIG_MOUSE_BCM5974 is not set
-CONFIG_MOUSE_VSXXXAA=m
-# CONFIG_MOUSE_GPIO is not set
-# CONFIG_MOUSE_SYNAPTICS_I2C is not set
-CONFIG_INPUT_JOYSTICK=y
-# CONFIG_JOYSTICK_ANALOG is not set
-# CONFIG_JOYSTICK_A3D is not set
-# CONFIG_JOYSTICK_ADI is not set
-# CONFIG_JOYSTICK_COBRA is not set
-# CONFIG_JOYSTICK_GF2K is not set
-# CONFIG_JOYSTICK_GRIP is not set
-# CONFIG_JOYSTICK_GRIP_MP is not set
-# CONFIG_JOYSTICK_GUILLEMOT is not set
-# CONFIG_JOYSTICK_INTERACT is not set
-# CONFIG_JOYSTICK_SIDEWINDER is not set
-# CONFIG_JOYSTICK_TMDC is not set
-# CONFIG_JOYSTICK_IFORCE is not set
-# CONFIG_JOYSTICK_WARRIOR is not set
-# CONFIG_JOYSTICK_MAGELLAN is not set
-# CONFIG_JOYSTICK_SPACEORB is not set
-# CONFIG_JOYSTICK_SPACEBALL is not set
-# CONFIG_JOYSTICK_STINGER is not set
-# CONFIG_JOYSTICK_TWIDJOY is not set
-# CONFIG_JOYSTICK_ZHENHUA is not set
-# CONFIG_JOYSTICK_JOYDUMP is not set
-# CONFIG_JOYSTICK_XPAD is not set
-# CONFIG_INPUT_TABLET is not set
-CONFIG_INPUT_TOUCHSCREEN=y
-# CONFIG_TOUCHSCREEN_ADS7846 is not set
-# CONFIG_TOUCHSCREEN_AD7877 is not set
-# CONFIG_TOUCHSCREEN_AD7879_I2C is not set
-# CONFIG_TOUCHSCREEN_AD7879_SPI is not set
-# CONFIG_TOUCHSCREEN_AD7879 is not set
-# CONFIG_TOUCHSCREEN_DYNAPRO is not set
-# CONFIG_TOUCHSCREEN_HAMPSHIRE is not set
-# CONFIG_TOUCHSCREEN_EETI is not set
-# CONFIG_TOUCHSCREEN_FUJITSU is not set
-CONFIG_TOUCHSCREEN_GUNZE=m
-# CONFIG_TOUCHSCREEN_ELO is not set
-# CONFIG_TOUCHSCREEN_WACOM_W8001 is not set
-# CONFIG_TOUCHSCREEN_MCS5000 is not set
-# CONFIG_TOUCHSCREEN_MTOUCH is not set
-# CONFIG_TOUCHSCREEN_INEXIO is not set
-# CONFIG_TOUCHSCREEN_MK712 is not set
-CONFIG_TOUCHSCREEN_MXS=y
-# CONFIG_TOUCHSCREEN_PENMOUNT is not set
-# CONFIG_TOUCHSCREEN_TOUCHRIGHT is not set
-# CONFIG_TOUCHSCREEN_TOUCHWIN is not set
-# CONFIG_TOUCHSCREEN_USB_COMPOSITE is not set
-# CONFIG_TOUCHSCREEN_TOUCHIT213 is not set
-# CONFIG_TOUCHSCREEN_TSC2007 is not set
-# CONFIG_TOUCHSCREEN_W90X900 is not set
-# CONFIG_TOUCHSCREEN_TPS6507X is not set
-CONFIG_INPUT_MISC=y
-# CONFIG_INPUT_AD714X is not set
-# CONFIG_INPUT_ATI_REMOTE is not set
-# CONFIG_INPUT_ATI_REMOTE2 is not set
-# CONFIG_INPUT_KEYSPAN_REMOTE is not set
-# CONFIG_INPUT_POWERMATE is not set
-# CONFIG_INPUT_YEALINK is not set
-# CONFIG_INPUT_CM109 is not set
-CONFIG_INPUT_UINPUT=m
-# CONFIG_INPUT_PCF8574 is not set
-# CONFIG_INPUT_GPIO_ROTARY_ENCODER is not set
-
-#
-# Hardware I/O ports
-#
-CONFIG_SERIO=y
-CONFIG_SERIO_SERPORT=y
-CONFIG_SERIO_LIBPS2=y
-# CONFIG_SERIO_RAW is not set
-# CONFIG_SERIO_ALTERA_PS2 is not set
-# CONFIG_GAMEPORT is not set
-
-#
-# Character devices
-#
-CONFIG_VT=y
-CONFIG_CONSOLE_TRANSLATIONS=y
-CONFIG_VT_CONSOLE=y
-CONFIG_HW_CONSOLE=y
-# CONFIG_VT_HW_CONSOLE_BINDING is not set
-CONFIG_DEVKMEM=y
-CONFIG_SERIAL_NONSTANDARD=y
-# CONFIG_N_HDLC is not set
-# CONFIG_N_GSM is not set
-# CONFIG_RISCOM8 is not set
-# CONFIG_SPECIALIX is not set
-CONFIG_STALDRV=y
-CONFIG_MXS_VIIM=y
-
-#
-# Serial drivers
-#
-# CONFIG_SERIAL_8250 is not set
-
-#
-# Non-8250 serial port support
-#
-CONFIG_SERIAL_MXS_DUART=y
-CONFIG_SERIAL_MXS_AUART=y
-# CONFIG_SERIAL_MXS_AUART_CONSOLE is not set
-CONFIG_SERIAL_MXS_DUART_CONSOLE=y
-# CONFIG_SERIAL_MAX3100 is not set
-CONFIG_SERIAL_CORE=y
-CONFIG_SERIAL_CORE_CONSOLE=y
-# CONFIG_SERIAL_TIMBERDALE is not set
-# CONFIG_SERIAL_ALTERA_JTAGUART is not set
-# CONFIG_SERIAL_ALTERA_UART is not set
-CONFIG_UNIX98_PTYS=y
-# CONFIG_DEVPTS_MULTIPLE_INSTANCES is not set
-CONFIG_LEGACY_PTYS=y
-CONFIG_LEGACY_PTY_COUNT=256
-# CONFIG_FSL_OTP is not set
-CONFIG_IPMI_HANDLER=m
-# CONFIG_IPMI_PANIC_EVENT is not set
-CONFIG_IPMI_DEVICE_INTERFACE=m
-CONFIG_IPMI_SI=m
-CONFIG_IPMI_WATCHDOG=m
-CONFIG_IPMI_POWEROFF=m
-CONFIG_HW_RANDOM=m
-# CONFIG_HW_RANDOM_TIMERIOMEM is not set
-# CONFIG_R3964 is not set
-CONFIG_RAW_DRIVER=y
-CONFIG_MAX_RAW_DEVS=8192
-# CONFIG_TCG_TPM is not set
-# CONFIG_RAMOOPS is not set
-CONFIG_I2C=y
-CONFIG_I2C_BOARDINFO=y
-CONFIG_I2C_COMPAT=y
-# CONFIG_I2C_CHARDEV is not set
-CONFIG_I2C_HELPER_AUTO=y
-
-#
-# I2C Hardware Bus support
-#
-
-#
-# I2C system bus drivers (mostly embedded / system-on-chip)
-#
-# CONFIG_I2C_DESIGNWARE is not set
-# CONFIG_I2C_GPIO is not set
-CONFIG_I2C_MXS=y
-CONFIG_I2C_MXS_SELECT0=y
-# CONFIG_I2C_MXS_SELECT0_PIOQUEUE_MODE is not set
-# CONFIG_I2C_MXS_SELECT1 is not set
-# CONFIG_I2C_OCORES is not set
-# CONFIG_I2C_PCA_PLATFORM is not set
-# CONFIG_I2C_SIMTEC is not set
-# CONFIG_I2C_XILINX is not set
-
-#
-# External I2C/SMBus adapter drivers
-#
-# CONFIG_I2C_PARPORT_LIGHT is not set
-# CONFIG_I2C_TAOS_EVM is not set
-# CONFIG_I2C_TINY_USB is not set
-
-#
-# Other I2C/SMBus bus drivers
-#
-# CONFIG_I2C_STUB is not set
-# CONFIG_I2C_DEBUG_CORE is not set
-# CONFIG_I2C_DEBUG_ALGO is not set
-# CONFIG_I2C_DEBUG_BUS is not set
-CONFIG_SPI=y
-CONFIG_SPI_MASTER=y
-
-#
-# SPI Master Controller Drivers
-#
-# CONFIG_SPI_BITBANG is not set
-# CONFIG_SPI_GPIO is not set
-# CONFIG_SPI_XILINX is not set
-CONFIG_SPI_MXS=y
-# CONFIG_SPI_DESIGNWARE is not set
-
-#
-# SPI Protocol Masters
-#
-# CONFIG_SPI_SPIDEV is not set
-# CONFIG_SPI_TLE62X0 is not set
-
-#
-# PPS support
-#
-# CONFIG_PPS is not set
-CONFIG_ARCH_REQUIRE_GPIOLIB=y
-CONFIG_GPIOLIB=y
-# CONFIG_GPIO_SYSFS is not set
-
-#
-# Memory mapped GPIO expanders:
-#
-# CONFIG_GPIO_IT8761E is not set
-
-#
-# I2C GPIO expanders:
-#
-# CONFIG_GPIO_MAX7300 is not set
-# CONFIG_GPIO_MAX732X is not set
-# CONFIG_GPIO_PCA953X is not set
-# CONFIG_GPIO_PCF857X is not set
-# CONFIG_GPIO_ADP5588 is not set
-
-#
-# PCI GPIO expanders:
-#
-
-#
-# SPI GPIO expanders:
-#
-# CONFIG_GPIO_MAX7301 is not set
-# CONFIG_GPIO_MCP23S08 is not set
-# CONFIG_GPIO_MC33880 is not set
-
-#
-# AC97 GPIO expanders:
-#
-
-#
-# MODULbus GPIO expanders:
-#
-# CONFIG_W1 is not set
-CONFIG_POWER_SUPPLY=y
-# CONFIG_POWER_SUPPLY_DEBUG is not set
-# CONFIG_PDA_POWER is not set
-# CONFIG_TEST_POWER is not set
-# CONFIG_BATTERY_DS2760 is not set
-# CONFIG_BATTERY_DS2782 is not set
-# CONFIG_BATTERY_BQ27x00 is not set
-# CONFIG_BATTERY_MAX17040 is not set
-CONFIG_BATTERY_MXS=y
-# CONFIG_MXS_VBUS_CURRENT_DRAW is not set
-# CONFIG_BATTERY_DS2438 is not set
-# CONFIG_HWMON is not set
-# CONFIG_THERMAL is not set
-CONFIG_WATCHDOG=y
-# CONFIG_WATCHDOG_NOWAYOUT is not set
-
-#
-# Watchdog Device Drivers
-#
-# CONFIG_SOFT_WATCHDOG is not set
-CONFIG_MXS_WATCHDOG=y
-# CONFIG_MAX63XX_WATCHDOG is not set
-
-#
-# USB-based Watchdog Cards
-#
-# CONFIG_USBPCWATCHDOG is not set
-CONFIG_SSB_POSSIBLE=y
-
-#
-# Sonics Silicon Backplane
-#
-CONFIG_SSB=m
-CONFIG_SSB_SDIOHOST_POSSIBLE=y
-# CONFIG_SSB_SDIOHOST is not set
-# CONFIG_SSB_DEBUG is not set
-CONFIG_MFD_SUPPORT=y
-# CONFIG_MFD_CORE is not set
-# CONFIG_MFD_88PM860X is not set
-# CONFIG_MFD_SM501 is not set
-# CONFIG_MFD_ASIC3 is not set
-# CONFIG_HTC_EGPIO is not set
-# CONFIG_HTC_PASIC3 is not set
-# CONFIG_HTC_I2CPLD is not set
-# CONFIG_TPS65010 is not set
-# CONFIG_TPS6507X is not set
-# CONFIG_TWL4030_CORE is not set
-# CONFIG_MFD_TC35892 is not set
-# CONFIG_MFD_TMIO is not set
-# CONFIG_MFD_T7L66XB is not set
-# CONFIG_MFD_TC6387XB is not set
-# CONFIG_MFD_TC6393XB is not set
-# CONFIG_PMIC_DA903X is not set
-# CONFIG_PMIC_ADP5520 is not set
-# CONFIG_MFD_MAX8925 is not set
-# CONFIG_MFD_WM8400 is not set
-# CONFIG_MFD_WM831X is not set
-# CONFIG_MFD_WM8350_I2C is not set
-# CONFIG_MFD_WM8994 is not set
-# CONFIG_MFD_LTC3589_I2C is not set
-# CONFIG_MFD_PCF50633 is not set
-# CONFIG_MFD_MC13783 is not set
-# CONFIG_ABX500_CORE is not set
-# CONFIG_EZX_PCAP is not set
-# CONFIG_AB8500_CORE is not set
-# CONFIG_MFD_MAX17135 is not set
-CONFIG_REGULATOR=y
-# CONFIG_REGULATOR_DEBUG is not set
-# CONFIG_REGULATOR_DUMMY is not set
-# CONFIG_REGULATOR_FIXED_VOLTAGE is not set
-# CONFIG_REGULATOR_VIRTUAL_CONSUMER is not set
-# CONFIG_REGULATOR_USERSPACE_CONSUMER is not set
-# CONFIG_REGULATOR_BQ24022 is not set
-# CONFIG_REGULATOR_MAX1586 is not set
-# CONFIG_REGULATOR_MAX8649 is not set
-# CONFIG_REGULATOR_MAX8660 is not set
-# CONFIG_REGULATOR_LP3971 is not set
-# CONFIG_REGULATOR_TPS65023 is not set
-# CONFIG_REGULATOR_TPS6507X is not set
-CONFIG_REGULATOR_MXS=y
-CONFIG_MEDIA_SUPPORT=y
-
-#
-# Multimedia core support
-#
-CONFIG_VIDEO_DEV=y
-CONFIG_VIDEO_V4L2_COMMON=y
-# CONFIG_VIDEO_ALLOW_V4L1 is not set
-CONFIG_VIDEO_V4L1_COMPAT=y
-# CONFIG_DVB_CORE is not set
-CONFIG_VIDEO_MEDIA=y
-
-#
-# Multimedia drivers
-#
-CONFIG_IR_CORE=y
-CONFIG_VIDEO_IR=y
-CONFIG_RC_MAP=y
-CONFIG_IR_NEC_DECODER=y
-CONFIG_IR_RC5_DECODER=y
-CONFIG_IR_RC6_DECODER=y
-CONFIG_IR_JVC_DECODER=y
-CONFIG_IR_SONY_DECODER=y
-# CONFIG_IR_IMON is not set
-# CONFIG_MEDIA_ATTACH is not set
-CONFIG_MEDIA_TUNER=y
-# CONFIG_MEDIA_TUNER_CUSTOMISE is not set
-CONFIG_MEDIA_TUNER_SIMPLE=y
-CONFIG_MEDIA_TUNER_TDA8290=y
-CONFIG_MEDIA_TUNER_TDA9887=y
-CONFIG_MEDIA_TUNER_TEA5761=y
-CONFIG_MEDIA_TUNER_TEA5767=y
-CONFIG_MEDIA_TUNER_MT20XX=y
-CONFIG_MEDIA_TUNER_XC2028=y
-CONFIG_MEDIA_TUNER_XC5000=y
-CONFIG_MEDIA_TUNER_MC44S803=y
-CONFIG_VIDEO_V4L2=y
-CONFIG_VIDEOBUF_GEN=y
-CONFIG_VIDEOBUF_DMA_CONTIG=y
-CONFIG_VIDEO_CAPTURE_DRIVERS=y
-# CONFIG_VIDEO_ADV_DEBUG is not set
-# CONFIG_VIDEO_FIXED_MINOR_RANGES is not set
-# CONFIG_VIDEO_HELPER_CHIPS_AUTO is not set
-CONFIG_VIDEO_IR_I2C=y
-
-#
-# Encoders/decoders and other helper chips
-#
-
-#
-# Audio decoders
-#
-# CONFIG_VIDEO_TVAUDIO is not set
-# CONFIG_VIDEO_TDA7432 is not set
-# CONFIG_VIDEO_TDA9840 is not set
-# CONFIG_VIDEO_TDA9875 is not set
-# CONFIG_VIDEO_TEA6415C is not set
-# CONFIG_VIDEO_TEA6420 is not set
-# CONFIG_VIDEO_MSP3400 is not set
-# CONFIG_VIDEO_CS5345 is not set
-# CONFIG_VIDEO_CS53L32A is not set
-# CONFIG_VIDEO_M52790 is not set
-# CONFIG_VIDEO_TLV320AIC23B is not set
-# CONFIG_VIDEO_WM8775 is not set
-# CONFIG_VIDEO_WM8739 is not set
-# CONFIG_VIDEO_VP27SMPX is not set
-
-#
-# RDS decoders
-#
-# CONFIG_VIDEO_SAA6588 is not set
-
-#
-# Video decoders
-#
-# CONFIG_VIDEO_ADV7180 is not set
-# CONFIG_VIDEO_BT819 is not set
-# CONFIG_VIDEO_BT856 is not set
-# CONFIG_VIDEO_BT866 is not set
-# CONFIG_VIDEO_KS0127 is not set
-# CONFIG_VIDEO_OV7670 is not set
-# CONFIG_VIDEO_MT9V011 is not set
-# CONFIG_VIDEO_TCM825X is not set
-# CONFIG_VIDEO_SAA7110 is not set
-# CONFIG_VIDEO_SAA711X is not set
-# CONFIG_VIDEO_SAA717X is not set
-# CONFIG_VIDEO_SAA7191 is not set
-# CONFIG_VIDEO_TVP514X is not set
-# CONFIG_VIDEO_TVP5150 is not set
-# CONFIG_VIDEO_TVP7002 is not set
-# CONFIG_VIDEO_VPX3220 is not set
-
-#
-# Video and audio decoders
-#
-# CONFIG_VIDEO_CX25840 is not set
-
-#
-# MPEG video encoders
-#
-# CONFIG_VIDEO_CX2341X is not set
-
-#
-# Video encoders
-#
-# CONFIG_VIDEO_SAA7127 is not set
-# CONFIG_VIDEO_SAA7185 is not set
-# CONFIG_VIDEO_ADV7170 is not set
-# CONFIG_VIDEO_ADV7175 is not set
-# CONFIG_VIDEO_THS7303 is not set
-# CONFIG_VIDEO_ADV7343 is not set
-# CONFIG_VIDEO_AK881X is not set
-
-#
-# Video improvement chips
-#
-# CONFIG_VIDEO_UPD64031A is not set
-# CONFIG_VIDEO_UPD64083 is not set
-CONFIG_VIDEO_MXS_PXP=y
-# CONFIG_VIDEO_SAA5246A is not set
-# CONFIG_VIDEO_SAA5249 is not set
-# CONFIG_SOC_CAMERA is not set
-# CONFIG_V4L_USB_DRIVERS is not set
-# CONFIG_V4L_MEM2MEM_DRIVERS is not set
-# CONFIG_RADIO_ADAPTERS is not set
-# CONFIG_DAB is not set
-
-#
-# Graphics support
-#
-# CONFIG_VGASTATE is not set
-# CONFIG_VIDEO_OUTPUT_CONTROL is not set
-CONFIG_FB=y
-# CONFIG_FIRMWARE_EDID is not set
-# CONFIG_FB_DDC is not set
-# CONFIG_FB_BOOT_VESA_SUPPORT is not set
-CONFIG_FB_CFB_FILLRECT=y
-CONFIG_FB_CFB_COPYAREA=y
-CONFIG_FB_CFB_IMAGEBLIT=y
-# CONFIG_FB_CFB_REV_PIXELS_IN_BYTE is not set
-# CONFIG_FB_SYS_FILLRECT is not set
-# CONFIG_FB_SYS_COPYAREA is not set
-# CONFIG_FB_SYS_IMAGEBLIT is not set
-# CONFIG_FB_FOREIGN_ENDIAN is not set
-# CONFIG_FB_SYS_FOPS is not set
-# CONFIG_FB_SVGALIB is not set
-# CONFIG_FB_MACMODES is not set
-# CONFIG_FB_BACKLIGHT is not set
-# CONFIG_FB_MODE_HELPERS is not set
-# CONFIG_FB_TILEBLITTING is not set
-
-#
-# Frame buffer hardware drivers
-#
-CONFIG_FB_MXS=y
-CONFIG_FB_MXS_LCD_43WVF1G=y
-CONFIG_FB_MXS_LCD_TIONPRO28=y
-# CONFIG_FB_MXS_LCD_LMS430 is not set
-# CONFIG_FB_MXS_TVENC is not set
-# CONFIG_FB_S1D13XXX is not set
-# CONFIG_FB_VIRTUAL is not set
-# CONFIG_FB_METRONOME is not set
-# CONFIG_FB_MB862XX is not set
-# CONFIG_FB_BROADSHEET is not set
-CONFIG_BACKLIGHT_LCD_SUPPORT=y
-# CONFIG_LCD_CLASS_DEVICE is not set
-CONFIG_BACKLIGHT_CLASS_DEVICE=y
-# CONFIG_BACKLIGHT_GENERIC is not set
-# CONFIG_BACKLIGHT_ADP8860 is not set
-CONFIG_BACKLIGHT_MXS=y
-
-#
-# Display device support
-#
-# CONFIG_DISPLAY_SUPPORT is not set
-
-#
-# Console display driver support
-#
-# CONFIG_VGA_CONSOLE is not set
-CONFIG_DUMMY_CONSOLE=y
-CONFIG_FRAMEBUFFER_CONSOLE=y
-# CONFIG_FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set
-# CONFIG_FRAMEBUFFER_CONSOLE_ROTATION is not set
-# CONFIG_FONTS is not set
-CONFIG_FONT_8x8=y
-CONFIG_FONT_8x16=y
-CONFIG_LOGO=y
-# CONFIG_LOGO_LINUX_MONO is not set
-# CONFIG_LOGO_LINUX_VGA16 is not set
-CONFIG_LOGO_LINUX_CLUT224=y
-CONFIG_SOUND=y
-# CONFIG_SOUND_OSS_CORE is not set
-CONFIG_SND=y
-CONFIG_SND_TIMER=y
-CONFIG_SND_PCM=y
-CONFIG_SND_JACK=y
-# CONFIG_SND_SEQUENCER is not set
-# CONFIG_SND_MIXER_OSS is not set
-# CONFIG_SND_PCM_OSS is not set
-# CONFIG_SND_HRTIMER is not set
-# CONFIG_SND_DYNAMIC_MINORS is not set
-CONFIG_SND_SUPPORT_OLD_API=y
-CONFIG_SND_VERBOSE_PROCFS=y
-# CONFIG_SND_VERBOSE_PRINTK is not set
-# CONFIG_SND_DEBUG is not set
-# CONFIG_SND_RAWMIDI_SEQ is not set
-# CONFIG_SND_OPL3_LIB_SEQ is not set
-# CONFIG_SND_OPL4_LIB_SEQ is not set
-# CONFIG_SND_SBAWE_SEQ is not set
-# CONFIG_SND_EMU10K1_SEQ is not set
-# CONFIG_SND_DRIVERS is not set
-# CONFIG_SND_ARM is not set
-CONFIG_SND_SPI=y
-# CONFIG_SND_USB is not set
-CONFIG_SND_SOC=y
-CONFIG_SND_MXS_SOC=y
-CONFIG_SND_MXS_SOC_SPDIF_DAI=y
-CONFIG_SND_MXS_SOC_EVK_DEVB=y
-CONFIG_SND_MXS_SOC_DAI=y
-CONFIG_SND_MXS_SOC_EVK_DEVB_SPDIF=y
-CONFIG_SND_SOC_I2C_AND_SPI=y
-# CONFIG_SND_SOC_ALL_CODECS is not set
-CONFIG_SND_SOC_SGTL5000=y
-CONFIG_SND_SOC_MXS_SPDIF=y
-# CONFIG_SOUND_PRIME is not set
-CONFIG_HID_SUPPORT=y
-CONFIG_HID=y
-# CONFIG_HIDRAW is not set
-
-#
-# USB Input Devices
-#
-CONFIG_USB_HID=y
-# CONFIG_HID_PID is not set
-CONFIG_USB_HIDDEV=y
-
-#
-# Special HID drivers
-#
-# CONFIG_HID_3M_PCT is not set
-CONFIG_HID_A4TECH=y
-CONFIG_HID_APPLE=y
-CONFIG_HID_BELKIN=y
-# CONFIG_HID_CANDO is not set
-CONFIG_HID_CHERRY=y
-CONFIG_HID_CHICONY=y
-# CONFIG_HID_PRODIKEYS is not set
-CONFIG_HID_CYPRESS=y
-CONFIG_HID_DRAGONRISE=y
-# CONFIG_DRAGONRISE_FF is not set
-# CONFIG_HID_EGALAX is not set
-CONFIG_HID_EZKEY=y
-CONFIG_HID_KYE=y
-CONFIG_HID_GYRATION=y
-# CONFIG_HID_TWINHAN is not set
-CONFIG_HID_KENSINGTON=y
-CONFIG_HID_LOGITECH=y
-# CONFIG_LOGITECH_FF is not set
-# CONFIG_LOGIRUMBLEPAD2_FF is not set
-# CONFIG_LOGIG940_FF is not set
-CONFIG_HID_MICROSOFT=y
-# CONFIG_HID_MOSART is not set
-CONFIG_HID_MONTEREY=y
-CONFIG_HID_NTRIG=y
-# CONFIG_HID_ORTEK is not set
-CONFIG_HID_PANTHERLORD=y
-# CONFIG_PANTHERLORD_FF is not set
-CONFIG_HID_PETALYNX=y
-# CONFIG_HID_PICOLCD is not set
-# CONFIG_HID_QUANTA is not set
-# CONFIG_HID_ROCCAT is not set
-# CONFIG_HID_ROCCAT_KONE is not set
-CONFIG_HID_SAMSUNG=y
-CONFIG_HID_SONY=y
-# CONFIG_HID_STANTUM is not set
-CONFIG_HID_SUNPLUS=y
-CONFIG_HID_GREENASIA=y
-# CONFIG_GREENASIA_FF is not set
-CONFIG_HID_SMARTJOYPLUS=y
-# CONFIG_SMARTJOYPLUS_FF is not set
-CONFIG_HID_TOPSEED=y
-CONFIG_HID_THRUSTMASTER=y
-# CONFIG_THRUSTMASTER_FF is not set
-CONFIG_HID_ZEROPLUS=y
-# CONFIG_ZEROPLUS_FF is not set
-# CONFIG_HID_ZYDACRON is not set
-CONFIG_USB_SUPPORT=y
-CONFIG_USB_ARCH_HAS_HCD=y
-# CONFIG_USB_ARCH_HAS_OHCI is not set
-CONFIG_USB_ARCH_HAS_EHCI=y
-CONFIG_USB=y
-# CONFIG_USB_DEBUG is not set
-# CONFIG_USB_ANNOUNCE_NEW_DEVICES is not set
-
-#
-# Miscellaneous USB options
-#
-# CONFIG_USB_DEVICEFS is not set
-# CONFIG_USB_DEVICE_CLASS is not set
-# CONFIG_USB_DYNAMIC_MINORS is not set
-CONFIG_USB_SUSPEND=y
-CONFIG_USB_OTG=y
-# CONFIG_USB_OTG_WHITELIST is not set
-# CONFIG_USB_OTG_BLACKLIST_HUB is not set
-# CONFIG_USB_MON is not set
-# CONFIG_USB_WUSB is not set
-# CONFIG_USB_WUSB_CBAF is not set
-
-#
-# USB Host Controller Drivers
-#
-# CONFIG_USB_C67X00_HCD is not set
-CONFIG_USB_EHCI_HCD=y
-CONFIG_USB_EHCI_ARC=y
-CONFIG_USB_EHCI_ARC_H1=y
-CONFIG_USB_EHCI_ARC_OTG=y
-# CONFIG_USB_STATIC_IRAM is not set
-# CONFIG_USB_EHCI_FSL_MC13783 is not set
-# CONFIG_USB_EHCI_FSL_1301 is not set
-# CONFIG_USB_EHCI_FSL_1504 is not set
-CONFIG_USB_EHCI_FSL_UTMI=y
-CONFIG_USB_EHCI_ROOT_HUB_TT=y
-# CONFIG_USB_EHCI_TT_NEWSCHED is not set
-# CONFIG_USB_OXU210HP_HCD is not set
-# CONFIG_USB_ISP116X_HCD is not set
-# CONFIG_USB_ISP1760_HCD is not set
-# CONFIG_USB_ISP1362_HCD is not set
-# CONFIG_USB_SL811_HCD is not set
-# CONFIG_USB_R8A66597_HCD is not set
-# CONFIG_USB_HWA_HCD is not set
-# CONFIG_USB_MUSB_HDRC is not set
-# CONFIG_USB_GADGET_MUSB_HDRC is not set
-
-#
-# USB Device Class drivers
-#
-# CONFIG_USB_ACM is not set
-# CONFIG_USB_PRINTER is not set
-# CONFIG_USB_WDM is not set
-# CONFIG_USB_TMC is not set
-
-#
-# NOTE: USB_STORAGE depends on SCSI but BLK_DEV_SD may
-#
-
-#
-# also be needed; see USB_STORAGE Help for more info
-#
-CONFIG_USB_STORAGE=y
-# CONFIG_USB_STORAGE_DEBUG is not set
-# CONFIG_USB_STORAGE_DATAFAB is not set
-# CONFIG_USB_STORAGE_FREECOM is not set
-# CONFIG_USB_STORAGE_ISD200 is not set
-# CONFIG_USB_STORAGE_USBAT is not set
-# CONFIG_USB_STORAGE_SDDR09 is not set
-# CONFIG_USB_STORAGE_SDDR55 is not set
-# CONFIG_USB_STORAGE_JUMPSHOT is not set
-# CONFIG_USB_STORAGE_ALAUDA is not set
-# CONFIG_USB_STORAGE_ONETOUCH is not set
-# CONFIG_USB_STORAGE_KARMA is not set
-# CONFIG_USB_STORAGE_CYPRESS_ATACB is not set
-# CONFIG_USB_LIBUSUAL is not set
-
-#
-# USB Imaging devices
-#
-# CONFIG_USB_MDC800 is not set
-# CONFIG_USB_MICROTEK is not set
-
-#
-# USB port drivers
-#
-# CONFIG_USB_SERIAL is not set
-
-#
-# USB Miscellaneous drivers
-#
-# CONFIG_USB_EMI62 is not set
-# CONFIG_USB_EMI26 is not set
-# CONFIG_USB_ADUTUX is not set
-# CONFIG_USB_SEVSEG is not set
-# CONFIG_USB_RIO500 is not set
-# CONFIG_USB_LEGOTOWER is not set
-# CONFIG_USB_LCD is not set
-# CONFIG_USB_LED is not set
-# CONFIG_USB_CYPRESS_CY7C63 is not set
-# CONFIG_USB_CYTHERM is not set
-# CONFIG_USB_IDMOUSE is not set
-# CONFIG_USB_FTDI_ELAN is not set
-# CONFIG_USB_APPLEDISPLAY is not set
-# CONFIG_USB_SISUSBVGA is not set
-# CONFIG_USB_LD is not set
-# CONFIG_USB_TRANCEVIBRATOR is not set
-# CONFIG_USB_IOWARRIOR is not set
-# CONFIG_USB_TEST is not set
-# CONFIG_USB_ISIGHTFW is not set
-CONFIG_USB_GADGET=y
-# CONFIG_USB_GADGET_DEBUG_FILES is not set
-# CONFIG_USB_GADGET_DEBUG_FS is not set
-CONFIG_USB_GADGET_VBUS_DRAW=2
-CONFIG_USB_GADGET_SELECTED=y
-# CONFIG_USB_GADGET_AT91 is not set
-# CONFIG_USB_GADGET_ATMEL_USBA is not set
-# CONFIG_USB_GADGET_FSL_USB2 is not set
-# CONFIG_USB_GADGET_LH7A40X is not set
-# CONFIG_USB_GADGET_OMAP is not set
-# CONFIG_USB_GADGET_PXA25X is not set
-# CONFIG_USB_GADGET_R8A66597 is not set
-# CONFIG_USB_GADGET_PXA27X is not set
-# CONFIG_USB_GADGET_S3C_HSOTG is not set
-# CONFIG_USB_GADGET_IMX is not set
-# CONFIG_USB_GADGET_S3C2410 is not set
-# CONFIG_USB_GADGET_M66592 is not set
-# CONFIG_USB_GADGET_AMD5536UDC is not set
-# CONFIG_USB_GADGET_FSL_QE is not set
-# CONFIG_USB_GADGET_CI13XXX is not set
-# CONFIG_USB_GADGET_NET2280 is not set
-# CONFIG_USB_GADGET_GOKU is not set
-CONFIG_USB_GADGET_ARC=y
-CONFIG_USB_ARC=y
-# CONFIG_USB_GADGET_LANGWELL is not set
-# CONFIG_USB_GADGET_DUMMY_HCD is not set
-CONFIG_USB_GADGET_DUALSPEED=y
-# CONFIG_USB_ZERO is not set
-# CONFIG_USB_AUDIO is not set
-CONFIG_USB_ETH=m
-CONFIG_USB_ETH_RNDIS=y
-# CONFIG_USB_ETH_EEM is not set
-# CONFIG_USB_GADGETFS is not set
-# CONFIG_USB_FUNCTIONFS is not set
-CONFIG_USB_FILE_STORAGE=m
-# CONFIG_FSL_UTP is not set
-# CONFIG_USB_FILE_STORAGE_TEST is not set
-# CONFIG_USB_MASS_STORAGE is not set
-CONFIG_USB_G_SERIAL=m
-# CONFIG_USB_MIDI_GADGET is not set
-# CONFIG_USB_G_PRINTER is not set
-# CONFIG_USB_CDC_COMPOSITE is not set
-# CONFIG_USB_G_NOKIA is not set
-# CONFIG_USB_G_MULTI is not set
-# CONFIG_USB_G_HID is not set
-# CONFIG_USB_G_WEBCAM is not set
-
-#
-# OTG and related infrastructure
-#
-CONFIG_USB_OTG_UTILS=y
-# CONFIG_USB_GPIO_VBUS is not set
-# CONFIG_USB_ULPI is not set
-# CONFIG_NOP_USB_XCEIV is not set
-CONFIG_MXC_OTG=y
-CONFIG_MMC=y
-# CONFIG_MMC_DEBUG is not set
-CONFIG_MMC_UNSAFE_RESUME=y
-
-#
-# MMC/SD/SDIO Card Drivers
-#
-CONFIG_MMC_BLOCK=y
-CONFIG_MMC_BLOCK_BOUNCE=y
-# CONFIG_SDIO_UART is not set
-# CONFIG_MMC_TEST is not set
-
-#
-# MMC/SD/SDIO Host Controller Drivers
-#
-# CONFIG_MMC_SDHCI is not set
-# CONFIG_MMC_SPI is not set
-# CONFIG_MMC_IMX_ESDHCI_PIO_MODE is not set
-CONFIG_MMC_MXS=y
-# CONFIG_MEMSTICK is not set
-CONFIG_NEW_LEDS=y
-CONFIG_LEDS_CLASS=y
-
-#
-# LED drivers
-#
-CONFIG_LEDS_MXS=y
-# CONFIG_LEDS_PCA9532 is not set
-# CONFIG_LEDS_GPIO is not set
-# CONFIG_LEDS_LP3944 is not set
-# CONFIG_LEDS_PCA955X is not set
-# CONFIG_LEDS_DAC124S085 is not set
-# CONFIG_LEDS_REGULATOR is not set
-# CONFIG_LEDS_BD2802 is not set
-# CONFIG_LEDS_LT3593 is not set
-# CONFIG_LEDS_TRIGGERS is not set
-# CONFIG_ACCESSIBILITY is not set
-CONFIG_RTC_LIB=y
-CONFIG_RTC_CLASS=y
-CONFIG_RTC_HCTOSYS=y
-CONFIG_RTC_HCTOSYS_DEVICE="rtc0"
-CONFIG_RTC_DEBUG=y
-
-#
-# RTC interfaces
-#
-CONFIG_RTC_INTF_SYSFS=y
-CONFIG_RTC_INTF_PROC=y
-CONFIG_RTC_INTF_DEV=y
-# CONFIG_RTC_INTF_DEV_UIE_EMUL is not set
-# CONFIG_RTC_DRV_TEST is not set
-
-#
-# I2C RTC drivers
-#
-CONFIG_RTC_DRV_DS1307=y
-# CONFIG_RTC_DRV_DS1374 is not set
-# CONFIG_RTC_DRV_DS1672 is not set
-# CONFIG_RTC_DRV_MAX6900 is not set
-# CONFIG_RTC_DRV_RS5C372 is not set
-# CONFIG_RTC_DRV_ISL1208 is not set
-# CONFIG_RTC_DRV_X1205 is not set
-# CONFIG_RTC_DRV_PCF8563 is not set
-# CONFIG_RTC_DRV_PCF8583 is not set
-# CONFIG_RTC_DRV_M41T80 is not set
-# CONFIG_RTC_DRV_BQ32K is not set
-# CONFIG_RTC_DRV_S35390A is not set
-# CONFIG_RTC_DRV_FM3130 is not set
-# CONFIG_RTC_DRV_RX8581 is not set
-# CONFIG_RTC_DRV_RX8025 is not set
-
-#
-# SPI RTC drivers
-#
-# CONFIG_RTC_DRV_M41T94 is not set
-# CONFIG_RTC_DRV_DS1305 is not set
-# CONFIG_RTC_DRV_DS1390 is not set
-# CONFIG_RTC_DRV_MAX6902 is not set
-# CONFIG_RTC_DRV_R9701 is not set
-# CONFIG_RTC_DRV_RS5C348 is not set
-# CONFIG_RTC_DRV_DS3234 is not set
-# CONFIG_RTC_DRV_PCF2123 is not set
-
-#
-# Platform RTC drivers
-#
-# CONFIG_RTC_DRV_CMOS is not set
-# CONFIG_RTC_DRV_DS1286 is not set
-# CONFIG_RTC_DRV_DS1511 is not set
-# CONFIG_RTC_DRV_DS1553 is not set
-# CONFIG_RTC_DRV_DS1742 is not set
-# CONFIG_RTC_DRV_STK17TA8 is not set
-# CONFIG_RTC_DRV_M48T86 is not set
-# CONFIG_RTC_DRV_M48T35 is not set
-# CONFIG_RTC_DRV_M48T59 is not set
-# CONFIG_RTC_DRV_MSM6242 is not set
-# CONFIG_RTC_DRV_BQ4802 is not set
-# CONFIG_RTC_DRV_RP5C01 is not set
-# CONFIG_RTC_DRV_V3020 is not set
-
-#
-# on-CPU RTC drivers
-#
-# CONFIG_RTC_DRV_MXS is not set
-CONFIG_DMADEVICES=y
-# CONFIG_DMADEVICES_DEBUG is not set
-
-#
-# DMA Devices
-#
-# CONFIG_MXC_PXP is not set
-# CONFIG_TIMB_DMA is not set
-# CONFIG_AUXDISPLAY is not set
-# CONFIG_UIO is not set
-# CONFIG_STAGING is not set
-
-#
-# File systems
-#
-CONFIG_EXT2_FS=y
-CONFIG_EXT2_FS_XATTR=y
-CONFIG_EXT2_FS_POSIX_ACL=y
-CONFIG_EXT2_FS_SECURITY=y
-# CONFIG_EXT2_FS_XIP is not set
-CONFIG_EXT3_FS=y
-CONFIG_EXT3_DEFAULTS_TO_ORDERED=y
-CONFIG_EXT3_FS_XATTR=y
-CONFIG_EXT3_FS_POSIX_ACL=y
-CONFIG_EXT3_FS_SECURITY=y
-# CONFIG_EXT4_FS is not set
-CONFIG_JBD=y
-# CONFIG_JBD_DEBUG is not set
-CONFIG_FS_MBCACHE=y
-# CONFIG_REISERFS_FS is not set
-# CONFIG_JFS_FS is not set
-CONFIG_FS_POSIX_ACL=y
-# CONFIG_XFS_FS is not set
-# CONFIG_GFS2_FS is not set
-# CONFIG_OCFS2_FS is not set
-# CONFIG_BTRFS_FS is not set
-# CONFIG_NILFS2_FS is not set
-CONFIG_FILE_LOCKING=y
-CONFIG_FSNOTIFY=y
-CONFIG_DNOTIFY=y
-# CONFIG_INOTIFY is not set
-CONFIG_INOTIFY_USER=y
-CONFIG_QUOTA=y
-# CONFIG_QUOTA_NETLINK_INTERFACE is not set
-CONFIG_PRINT_QUOTA_WARNING=y
-# CONFIG_QUOTA_DEBUG is not set
-CONFIG_QUOTA_TREE=y
-# CONFIG_QFMT_V1 is not set
-CONFIG_QFMT_V2=y
-CONFIG_QUOTACTL=y
-# CONFIG_AUTOFS_FS is not set
-CONFIG_AUTOFS4_FS=m
-# CONFIG_FUSE_FS is not set
-
-#
-# Caches
-#
-# CONFIG_FSCACHE is not set
-
-#
-# CD-ROM/DVD Filesystems
-#
-CONFIG_ISO9660_FS=y
-CONFIG_JOLIET=y
-CONFIG_ZISOFS=y
-CONFIG_UDF_FS=m
-CONFIG_UDF_NLS=y
-
-#
-# DOS/FAT/NT Filesystems
-#
-CONFIG_FAT_FS=y
-CONFIG_MSDOS_FS=y
-CONFIG_VFAT_FS=y
-CONFIG_FAT_DEFAULT_CODEPAGE=437
-CONFIG_FAT_DEFAULT_IOCHARSET="ascii"
-# CONFIG_NTFS_FS is not set
-
-#
-# Pseudo filesystems
-#
-CONFIG_PROC_FS=y
-CONFIG_PROC_SYSCTL=y
-CONFIG_PROC_PAGE_MONITOR=y
-CONFIG_SYSFS=y
-CONFIG_TMPFS=y
-# CONFIG_TMPFS_POSIX_ACL is not set
-# CONFIG_HUGETLB_PAGE is not set
-# CONFIG_CONFIGFS_FS is not set
-CONFIG_MISC_FILESYSTEMS=y
-# CONFIG_ADFS_FS is not set
-# CONFIG_AFFS_FS is not set
-# CONFIG_ECRYPT_FS is not set
-CONFIG_HFS_FS=m
-CONFIG_HFSPLUS_FS=m
-# CONFIG_BEFS_FS is not set
-# CONFIG_BFS_FS is not set
-# CONFIG_EFS_FS is not set
-CONFIG_JFFS2_FS=y
-CONFIG_JFFS2_FS_DEBUG=0
-CONFIG_JFFS2_FS_WRITEBUFFER=y
-# CONFIG_JFFS2_FS_WBUF_VERIFY is not set
-# CONFIG_JFFS2_SUMMARY is not set
-# CONFIG_JFFS2_FS_XATTR is not set
-# CONFIG_JFFS2_COMPRESSION_OPTIONS is not set
-CONFIG_JFFS2_ZLIB=y
-# CONFIG_JFFS2_LZO is not set
-CONFIG_JFFS2_RTIME=y
-# CONFIG_JFFS2_RUBIN is not set
-CONFIG_UBIFS_FS=y
-# CONFIG_UBIFS_FS_XATTR is not set
-# CONFIG_UBIFS_FS_ADVANCED_COMPR is not set
-CONFIG_UBIFS_FS_LZO=y
-CONFIG_UBIFS_FS_ZLIB=y
-# CONFIG_UBIFS_FS_DEBUG is not set
-# CONFIG_LOGFS is not set
-CONFIG_CRAMFS=m
-# CONFIG_SQUASHFS is not set
-CONFIG_VXFS_FS=m
-# CONFIG_MINIX_FS is not set
-# CONFIG_OMFS_FS is not set
-# CONFIG_HPFS_FS is not set
-# CONFIG_QNX4FS_FS is not set
-# CONFIG_ROMFS_FS is not set
-# CONFIG_SYSV_FS is not set
-# CONFIG_UFS_FS is not set
-CONFIG_NETWORK_FILESYSTEMS=y
-CONFIG_NFS_FS=y
-CONFIG_NFS_V3=y
-# CONFIG_NFS_V3_ACL is not set
-# CONFIG_NFS_V4 is not set
-CONFIG_ROOT_NFS=y
-# CONFIG_NFSD is not set
-CONFIG_LOCKD=y
-CONFIG_LOCKD_V4=y
-CONFIG_NFS_COMMON=y
-CONFIG_SUNRPC=y
-# CONFIG_RPCSEC_GSS_KRB5 is not set
-# CONFIG_RPCSEC_GSS_SPKM3 is not set
-# CONFIG_SMB_FS is not set
-# CONFIG_CEPH_FS is not set
-# CONFIG_CIFS is not set
-# CONFIG_NCP_FS is not set
-# CONFIG_CODA_FS is not set
-# CONFIG_AFS_FS is not set
-
-#
-# Partition Types
-#
-CONFIG_PARTITION_ADVANCED=y
-# CONFIG_ACORN_PARTITION is not set
-CONFIG_OSF_PARTITION=y
-# CONFIG_AMIGA_PARTITION is not set
-# CONFIG_ATARI_PARTITION is not set
-CONFIG_MAC_PARTITION=y
-CONFIG_MSDOS_PARTITION=y
-CONFIG_BSD_DISKLABEL=y
-CONFIG_MINIX_SUBPARTITION=y
-CONFIG_SOLARIS_X86_PARTITION=y
-CONFIG_UNIXWARE_DISKLABEL=y
-# CONFIG_LDM_PARTITION is not set
-CONFIG_SGI_PARTITION=y
-# CONFIG_ULTRIX_PARTITION is not set
-CONFIG_SUN_PARTITION=y
-# CONFIG_KARMA_PARTITION is not set
-CONFIG_EFI_PARTITION=y
-# CONFIG_SYSV68_PARTITION is not set
-CONFIG_NLS=y
-CONFIG_NLS_DEFAULT="utf8"
-CONFIG_NLS_CODEPAGE_437=y
-CONFIG_NLS_CODEPAGE_737=m
-CONFIG_NLS_CODEPAGE_775=m
-CONFIG_NLS_CODEPAGE_850=m
-CONFIG_NLS_CODEPAGE_852=m
-CONFIG_NLS_CODEPAGE_855=m
-CONFIG_NLS_CODEPAGE_857=m
-CONFIG_NLS_CODEPAGE_860=m
-CONFIG_NLS_CODEPAGE_861=m
-CONFIG_NLS_CODEPAGE_862=m
-CONFIG_NLS_CODEPAGE_863=m
-CONFIG_NLS_CODEPAGE_864=m
-CONFIG_NLS_CODEPAGE_865=m
-CONFIG_NLS_CODEPAGE_866=m
-CONFIG_NLS_CODEPAGE_869=m
-CONFIG_NLS_CODEPAGE_936=m
-CONFIG_NLS_CODEPAGE_950=m
-CONFIG_NLS_CODEPAGE_932=m
-CONFIG_NLS_CODEPAGE_949=m
-CONFIG_NLS_CODEPAGE_874=m
-CONFIG_NLS_ISO8859_8=m
-CONFIG_NLS_CODEPAGE_1250=m
-CONFIG_NLS_CODEPAGE_1251=m
-CONFIG_NLS_ASCII=y
-CONFIG_NLS_ISO8859_1=m
-CONFIG_NLS_ISO8859_2=m
-CONFIG_NLS_ISO8859_3=m
-CONFIG_NLS_ISO8859_4=m
-CONFIG_NLS_ISO8859_5=m
-CONFIG_NLS_ISO8859_6=m
-CONFIG_NLS_ISO8859_7=m
-CONFIG_NLS_ISO8859_9=m
-CONFIG_NLS_ISO8859_13=m
-CONFIG_NLS_ISO8859_14=m
-CONFIG_NLS_ISO8859_15=m
-CONFIG_NLS_KOI8_R=m
-CONFIG_NLS_KOI8_U=m
-CONFIG_NLS_UTF8=m
-# CONFIG_DLM is not set
-
-#
-# Kernel hacking
-#
-# CONFIG_PRINTK_TIME is not set
-# CONFIG_ENABLE_WARN_DEPRECATED is not set
-# CONFIG_ENABLE_MUST_CHECK is not set
-CONFIG_FRAME_WARN=1024
-# CONFIG_MAGIC_SYSRQ is not set
-# CONFIG_STRIP_ASM_SYMS is not set
-# CONFIG_UNUSED_SYMBOLS is not set
-CONFIG_DEBUG_FS=y
-# CONFIG_HEADERS_CHECK is not set
-# CONFIG_DEBUG_KERNEL is not set
-# CONFIG_SLUB_DEBUG_ON is not set
-# CONFIG_SLUB_STATS is not set
-CONFIG_DEBUG_BUGVERBOSE=y
-CONFIG_DEBUG_MEMORY_INIT=y
-CONFIG_FRAME_POINTER=y
-# CONFIG_RCU_CPU_STALL_DETECTOR is not set
-# CONFIG_LKDTM is not set
-# CONFIG_LATENCYTOP is not set
-# CONFIG_SYSCTL_SYSCALL_CHECK is not set
-CONFIG_HAVE_FUNCTION_TRACER=y
-CONFIG_RING_BUFFER=y
-CONFIG_RING_BUFFER_ALLOW_SWAP=y
-CONFIG_TRACING_SUPPORT=y
-# CONFIG_FTRACE is not set
-# CONFIG_DYNAMIC_DEBUG is not set
-# CONFIG_ATOMIC64_SELFTEST is not set
-# CONFIG_SAMPLES is not set
-CONFIG_HAVE_ARCH_KGDB=y
-# CONFIG_ARM_UNWIND is not set
-# CONFIG_DEBUG_USER is not set
-# CONFIG_OC_ETM is not set
-
-#
-# Security options
-#
-CONFIG_KEYS=y
-CONFIG_KEYS_DEBUG_PROC_KEYS=y
-CONFIG_SECURITY=y
-# CONFIG_SECURITYFS is not set
-CONFIG_SECURITY_NETWORK=y
-# CONFIG_SECURITY_NETWORK_XFRM is not set
-# CONFIG_SECURITY_PATH is not set
-CONFIG_LSM_MMAP_MIN_ADDR=65536
-CONFIG_SECURITY_SELINUX=y
-CONFIG_SECURITY_SELINUX_BOOTPARAM=y
-CONFIG_SECURITY_SELINUX_BOOTPARAM_VALUE=1
-CONFIG_SECURITY_SELINUX_DISABLE=y
-CONFIG_SECURITY_SELINUX_DEVELOP=y
-CONFIG_SECURITY_SELINUX_AVC_STATS=y
-CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE=1
-# CONFIG_SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set
-# CONFIG_SECURITY_TOMOYO is not set
-# CONFIG_IMA is not set
-CONFIG_DEFAULT_SECURITY_SELINUX=y
-# CONFIG_DEFAULT_SECURITY_SMACK is not set
-# CONFIG_DEFAULT_SECURITY_TOMOYO is not set
-# CONFIG_DEFAULT_SECURITY_DAC is not set
-CONFIG_DEFAULT_SECURITY="selinux"
-CONFIG_CRYPTO=y
-
-#
-# Crypto core or helper
-#
-CONFIG_CRYPTO_ALGAPI=y
-CONFIG_CRYPTO_ALGAPI2=y
-CONFIG_CRYPTO_AEAD2=y
-CONFIG_CRYPTO_BLKCIPHER=y
-CONFIG_CRYPTO_BLKCIPHER2=y
-CONFIG_CRYPTO_HASH=y
-CONFIG_CRYPTO_HASH2=y
-CONFIG_CRYPTO_RNG2=y
-CONFIG_CRYPTO_PCOMP=y
-CONFIG_CRYPTO_MANAGER=y
-CONFIG_CRYPTO_MANAGER2=y
-CONFIG_CRYPTO_MANAGER_TESTS=y
-# CONFIG_CRYPTO_GF128MUL is not set
-# CONFIG_CRYPTO_NULL is not set
-CONFIG_CRYPTO_WORKQUEUE=y
-# CONFIG_CRYPTO_CRYPTD is not set
-# CONFIG_CRYPTO_AUTHENC is not set
-CONFIG_CRYPTO_TEST=m
-CONFIG_CRYPTO_CRYPTODEV=y
-
-#
-# Authenticated Encryption with Associated Data
-#
-# CONFIG_CRYPTO_CCM is not set
-# CONFIG_CRYPTO_GCM is not set
-# CONFIG_CRYPTO_SEQIV is not set
-
-#
-# Block modes
-#
-CONFIG_CRYPTO_CBC=y
-# CONFIG_CRYPTO_CTR is not set
-# CONFIG_CRYPTO_CTS is not set
-CONFIG_CRYPTO_ECB=y
-# CONFIG_CRYPTO_LRW is not set
-# CONFIG_CRYPTO_PCBC is not set
-# CONFIG_CRYPTO_XTS is not set
-
-#
-# Hash modes
-#
-CONFIG_CRYPTO_HMAC=y
-# CONFIG_CRYPTO_XCBC is not set
-# CONFIG_CRYPTO_VMAC is not set
-
-#
-# Digest
-#
-CONFIG_CRYPTO_CRC32C=m
-# CONFIG_CRYPTO_GHASH is not set
-# CONFIG_CRYPTO_MD4 is not set
-CONFIG_CRYPTO_MD5=y
-# CONFIG_CRYPTO_MICHAEL_MIC is not set
-# CONFIG_CRYPTO_RMD128 is not set
-# CONFIG_CRYPTO_RMD160 is not set
-# CONFIG_CRYPTO_RMD256 is not set
-# CONFIG_CRYPTO_RMD320 is not set
-CONFIG_CRYPTO_SHA1=m
-CONFIG_CRYPTO_SHA256=m
-# CONFIG_CRYPTO_SHA512 is not set
-# CONFIG_CRYPTO_TGR192 is not set
-# CONFIG_CRYPTO_WP512 is not set
-
-#
-# Ciphers
-#
-CONFIG_CRYPTO_AES=y
-# CONFIG_CRYPTO_ANUBIS is not set
-# CONFIG_CRYPTO_ARC4 is not set
-# CONFIG_CRYPTO_BLOWFISH is not set
-# CONFIG_CRYPTO_CAMELLIA is not set
-# CONFIG_CRYPTO_CAST5 is not set
-# CONFIG_CRYPTO_CAST6 is not set
-CONFIG_CRYPTO_DES=y
-# CONFIG_CRYPTO_FCRYPT is not set
-# CONFIG_CRYPTO_KHAZAD is not set
-# CONFIG_CRYPTO_SALSA20 is not set
-# CONFIG_CRYPTO_SEED is not set
-# CONFIG_CRYPTO_SERPENT is not set
-# CONFIG_CRYPTO_TEA is not set
-# CONFIG_CRYPTO_TWOFISH is not set
-
-#
-# Compression
-#
-CONFIG_CRYPTO_DEFLATE=y
-# CONFIG_CRYPTO_ZLIB is not set
-CONFIG_CRYPTO_LZO=y
-
-#
-# Random Number Generation
-#
-# CONFIG_CRYPTO_ANSI_CPRNG is not set
-CONFIG_CRYPTO_HW=y
-CONFIG_CRYPTO_DEV_DCP=y
-# CONFIG_BINARY_PRINTF is not set
-
-#
-# Library routines
-#
-CONFIG_BITREVERSE=y
-CONFIG_GENERIC_FIND_LAST_BIT=y
-CONFIG_CRC_CCITT=m
-CONFIG_CRC16=y
-# CONFIG_CRC_T10DIF is not set
-CONFIG_CRC_ITU_T=m
-CONFIG_CRC32=y
-# CONFIG_CRC7 is not set
-CONFIG_LIBCRC32C=m
-CONFIG_AUDIT_GENERIC=y
-CONFIG_ZLIB_INFLATE=y
-CONFIG_ZLIB_DEFLATE=y
-CONFIG_LZO_COMPRESS=y
-CONFIG_LZO_DECOMPRESS=y
-CONFIG_DECOMPRESS_GZIP=y
-CONFIG_DECOMPRESS_BZIP2=y
-CONFIG_DECOMPRESS_LZMA=y
-CONFIG_DECOMPRESS_LZO=y
-CONFIG_GENERIC_ALLOCATOR=y
-CONFIG_HAS_IOMEM=y
-CONFIG_HAS_IOPORT=y
-CONFIG_HAS_DMA=y
-CONFIG_NLATTR=y
-CONFIG_GENERIC_ATOMIC64=y
-- 
1.9.1

